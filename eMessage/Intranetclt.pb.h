// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Intranetclt.proto

#ifndef PROTOBUF_Intranetclt_2eproto__INCLUDED
#define PROTOBUF_Intranetclt_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "cmmmessage.pb.h"
// @@protoc_insertion_point(includes)

namespace isafetec {

// Internal implementation detail -- do not call these.
void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
void protobuf_AssignDesc_Intranetclt_2eproto();
void protobuf_ShutdownFile_Intranetclt_2eproto();

class CltProcessFilterPolicy;
class CltProcessFilterPolicy_FilterNode;
class CltProcessFilterPolicyList;
class CltUrlFilterPolicy;
class CltUrlFilterPolicy_FilterNode;
class CltUrlFilterPolicyList;
class CltIPAndPortFilterPolicy;
class CltIPAndPortFilterPolicy_FilterNode;
class CltIPAndPortFilterPolicyList;
class CltDeviceControlPolicy;
class CltDeviceControlPolicy_FilterNode;
class CltDeviceControlPolicyList;
class CltPrintControlPolicy;
class CltPrintControlPolicy_FilterNode;
class CltPrintControlPolicyList;
class CltFileControlPolicy;
class CltFileControlPolicy_FilterNode;
class CltFileControlPolicyList;
class CltSystemControlPolicy;
class CltSystemControlPolicy_FilterNode;
class CltSystemControlPolicyList;
class FileParam;
class FileParamList;
class CltLogPolcicy;
class CltLogPolcicy_ScreenParam;
class CltLogPolcicyList;
class CltStreamControlPolicy;
class CltStreamControlPolicy_FilterNode;
class CltStreamControlPolicyList;
class CltCommonPolicy;
class CltCommonPolicy_ResScan;
class CltCommonPolicyList;
class CltCheckPCIdlePolicy;
class CltAlarmPolicy;
class CltAlarmPolicyList;
class CltQQFilterPolicy;
class CltQQFilterPolicy_FilterNode;
class CltQQFilterPolicyList;

enum PRINT_FLT_TYPE {
  PRT_BY_DOC_TYPE = 0,
  PRT_BY_DOC_NAME = 1
};
LIBPROTOBUF_EXPORT bool PRINT_FLT_TYPE_IsValid(int value);
const PRINT_FLT_TYPE PRINT_FLT_TYPE_MIN = PRT_BY_DOC_TYPE;
const PRINT_FLT_TYPE PRINT_FLT_TYPE_MAX = PRT_BY_DOC_NAME;
const int PRINT_FLT_TYPE_ARRAYSIZE = PRINT_FLT_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* PRINT_FLT_TYPE_descriptor();
inline const ::std::string& PRINT_FLT_TYPE_Name(PRINT_FLT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    PRINT_FLT_TYPE_descriptor(), value);
}
inline bool PRINT_FLT_TYPE_Parse(
    const ::std::string& name, PRINT_FLT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PRINT_FLT_TYPE>(
    PRINT_FLT_TYPE_descriptor(), name, value);
}
enum FILE_FLT_TYPE {
  FILE_FLT_BY_DOC_TYPE = 0,
  FILE_FLT_BY_DIR = 1
};
LIBPROTOBUF_EXPORT bool FILE_FLT_TYPE_IsValid(int value);
const FILE_FLT_TYPE FILE_FLT_TYPE_MIN = FILE_FLT_BY_DOC_TYPE;
const FILE_FLT_TYPE FILE_FLT_TYPE_MAX = FILE_FLT_BY_DIR;
const int FILE_FLT_TYPE_ARRAYSIZE = FILE_FLT_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* FILE_FLT_TYPE_descriptor();
inline const ::std::string& FILE_FLT_TYPE_Name(FILE_FLT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    FILE_FLT_TYPE_descriptor(), value);
}
inline bool FILE_FLT_TYPE_Parse(
    const ::std::string& name, FILE_FLT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FILE_FLT_TYPE>(
    FILE_FLT_TYPE_descriptor(), name, value);
}
enum MODE_TYPE {
  MODE_COPYF_USB = 0,
  MODE_COPYF_NSHARE = 1,
  MODE_COPYF_NSTORE = 2,
  MODE_COPYF_DEFDIR = 3,
  MODE_COPYT_USB = 4,
  MODE_COPYT_NSHARE = 5,
  MODE_COPYT_NSTORE = 6,
  MODE_COPYT_DEFDIR = 7,
  MODE_UP_BYIE = 8,
  MODE_UP_BYMATHON = 9,
  MODE_UP_BYQQ = 10,
  MODE_USE_BY_DEFEXE = 11
};
LIBPROTOBUF_EXPORT bool MODE_TYPE_IsValid(int value);
const MODE_TYPE MODE_TYPE_MIN = MODE_COPYF_USB;
const MODE_TYPE MODE_TYPE_MAX = MODE_USE_BY_DEFEXE;
const int MODE_TYPE_ARRAYSIZE = MODE_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* MODE_TYPE_descriptor();
inline const ::std::string& MODE_TYPE_Name(MODE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    MODE_TYPE_descriptor(), value);
}
inline bool MODE_TYPE_Parse(
    const ::std::string& name, MODE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<MODE_TYPE>(
    MODE_TYPE_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOBUF_EXPORT CltProcessFilterPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltProcessFilterPolicy_FilterNode();
  virtual ~CltProcessFilterPolicy_FilterNode();
  
  CltProcessFilterPolicy_FilterNode(const CltProcessFilterPolicy_FilterNode& from);
  
  inline CltProcessFilterPolicy_FilterNode& operator=(const CltProcessFilterPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltProcessFilterPolicy_FilterNode& default_instance();
  
  void Swap(CltProcessFilterPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltProcessFilterPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltProcessFilterPolicy_FilterNode& from);
  void MergeFrom(const CltProcessFilterPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string orgname = 2;
  inline bool has_orgname() const;
  inline void clear_orgname();
  static const int kOrgnameFieldNumber = 2;
  inline const ::std::string& orgname() const;
  inline void set_orgname(const ::std::string& value);
  inline void set_orgname(const char* value);
  inline void set_orgname(const char* value, size_t size);
  inline ::std::string* mutable_orgname();
  inline ::std::string* release_orgname();
  
  // optional string product = 3;
  inline bool has_product() const;
  inline void clear_product();
  static const int kProductFieldNumber = 3;
  inline const ::std::string& product() const;
  inline void set_product(const ::std::string& value);
  inline void set_product(const char* value);
  inline void set_product(const char* value, size_t size);
  inline ::std::string* mutable_product();
  inline ::std::string* release_product();
  
  // optional int32 exttype = 4;
  inline bool has_exttype() const;
  inline void clear_exttype();
  static const int kExttypeFieldNumber = 4;
  inline ::google::protobuf::int32 exttype() const;
  inline void set_exttype(::google::protobuf::int32 value);
  
  // optional string hash = 5;
  inline bool has_hash() const;
  inline void clear_hash();
  static const int kHashFieldNumber = 5;
  inline const ::std::string& hash() const;
  inline void set_hash(const ::std::string& value);
  inline void set_hash(const char* value);
  inline void set_hash(const char* value, size_t size);
  inline ::std::string* mutable_hash();
  inline ::std::string* release_hash();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltProcessFilterPolicy.FilterNode)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_orgname();
  inline void clear_has_orgname();
  inline void set_has_product();
  inline void clear_has_product();
  inline void set_has_exttype();
  inline void clear_has_exttype();
  inline void set_has_hash();
  inline void clear_has_hash();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* orgname_;
  ::std::string* product_;
  ::std::string* hash_;
  ::google::protobuf::int32 exttype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltProcessFilterPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltProcessFilterPolicy : public ::google::protobuf::Message {
 public:
  CltProcessFilterPolicy();
  virtual ~CltProcessFilterPolicy();
  
  CltProcessFilterPolicy(const CltProcessFilterPolicy& from);
  
  inline CltProcessFilterPolicy& operator=(const CltProcessFilterPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltProcessFilterPolicy& default_instance();
  
  void Swap(CltProcessFilterPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltProcessFilterPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltProcessFilterPolicy& from);
  void MergeFrom(const CltProcessFilterPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltProcessFilterPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 14;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 14;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // optional .isafetec.FILTERLIST_TYPE filterlist_type = 5;
  inline bool has_filterlist_type() const;
  inline void clear_filterlist_type();
  static const int kFilterlistTypeFieldNumber = 5;
  inline isafetec::FILTERLIST_TYPE filterlist_type() const;
  inline void set_filterlist_type(isafetec::FILTERLIST_TYPE value);
  
  // repeated .isafetec.CltProcessFilterPolicy.FilterNode filterlist = 6;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 6;
  inline const ::isafetec::CltProcessFilterPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltProcessFilterPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltProcessFilterPolicy_FilterNode* CltProcessFilterPolicy::filterlist_ReleaseAt(int index); 
  inline void CltProcessFilterPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltProcessFilterPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltProcessFilterPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltProcessFilterPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 7;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 7;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 8;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 8;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional double usetimeF = 9;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 9;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 10;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 10;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional string hints = 11;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 11;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 12;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 12;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 13;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 13;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltProcessFilterPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_filterlist_type();
  inline void clear_has_filterlist_type();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltProcessFilterPolicy_FilterNode > filterlist_;
  int filterlist_type_;
  int filter_mode_;
  ::isafetec::TimeSpanList* timelist_;
  double usetimef_;
  double usetimee_;
  ::std::string* hints_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltProcessFilterPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltProcessFilterPolicyList : public ::google::protobuf::Message {
 public:
  CltProcessFilterPolicyList();
  virtual ~CltProcessFilterPolicyList();
  
  CltProcessFilterPolicyList(const CltProcessFilterPolicyList& from);
  
  inline CltProcessFilterPolicyList& operator=(const CltProcessFilterPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltProcessFilterPolicyList& default_instance();
  
  void Swap(CltProcessFilterPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltProcessFilterPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltProcessFilterPolicyList& from);
  void MergeFrom(const CltProcessFilterPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltProcessFilterPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltProcessFilterPolicy& list(int index) const;
  inline ::isafetec::CltProcessFilterPolicy* mutable_list(int index);
  inline ::isafetec::CltProcessFilterPolicy* CltProcessFilterPolicyList::list_ReleaseAt(int index); 
  inline void CltProcessFilterPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltProcessFilterPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltProcessFilterPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltProcessFilterPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltProcessFilterPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltProcessFilterPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltProcessFilterPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltUrlFilterPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltUrlFilterPolicy_FilterNode();
  virtual ~CltUrlFilterPolicy_FilterNode();
  
  CltUrlFilterPolicy_FilterNode(const CltUrlFilterPolicy_FilterNode& from);
  
  inline CltUrlFilterPolicy_FilterNode& operator=(const CltUrlFilterPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltUrlFilterPolicy_FilterNode& default_instance();
  
  void Swap(CltUrlFilterPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltUrlFilterPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltUrlFilterPolicy_FilterNode& from);
  void MergeFrom(const CltUrlFilterPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string url = 1;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 1;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltUrlFilterPolicy.FilterNode)
 private:
  inline void set_has_url();
  inline void clear_has_url();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* url_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltUrlFilterPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltUrlFilterPolicy : public ::google::protobuf::Message {
 public:
  CltUrlFilterPolicy();
  virtual ~CltUrlFilterPolicy();
  
  CltUrlFilterPolicy(const CltUrlFilterPolicy& from);
  
  inline CltUrlFilterPolicy& operator=(const CltUrlFilterPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltUrlFilterPolicy& default_instance();
  
  void Swap(CltUrlFilterPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltUrlFilterPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltUrlFilterPolicy& from);
  void MergeFrom(const CltUrlFilterPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltUrlFilterPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 14;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 14;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // optional .isafetec.FILTERLIST_TYPE filterlist_type = 5;
  inline bool has_filterlist_type() const;
  inline void clear_filterlist_type();
  static const int kFilterlistTypeFieldNumber = 5;
  inline isafetec::FILTERLIST_TYPE filterlist_type() const;
  inline void set_filterlist_type(isafetec::FILTERLIST_TYPE value);
  
  // repeated .isafetec.CltUrlFilterPolicy.FilterNode filterlist = 6;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 6;
  inline const ::isafetec::CltUrlFilterPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltUrlFilterPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltUrlFilterPolicy_FilterNode* CltUrlFilterPolicy::filterlist_ReleaseAt(int index); 
  inline void CltUrlFilterPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltUrlFilterPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltUrlFilterPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltUrlFilterPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 7;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 7;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 8;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 8;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional double usetimeF = 9;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 9;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 10;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 10;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional string hints = 11;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 11;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 12;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 12;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 13;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 13;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltUrlFilterPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_filterlist_type();
  inline void clear_has_filterlist_type();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltUrlFilterPolicy_FilterNode > filterlist_;
  int filterlist_type_;
  int filter_mode_;
  ::isafetec::TimeSpanList* timelist_;
  double usetimef_;
  double usetimee_;
  ::std::string* hints_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltUrlFilterPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltUrlFilterPolicyList : public ::google::protobuf::Message {
 public:
  CltUrlFilterPolicyList();
  virtual ~CltUrlFilterPolicyList();
  
  CltUrlFilterPolicyList(const CltUrlFilterPolicyList& from);
  
  inline CltUrlFilterPolicyList& operator=(const CltUrlFilterPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltUrlFilterPolicyList& default_instance();
  
  void Swap(CltUrlFilterPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltUrlFilterPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltUrlFilterPolicyList& from);
  void MergeFrom(const CltUrlFilterPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltUrlFilterPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltUrlFilterPolicy& list(int index) const;
  inline ::isafetec::CltUrlFilterPolicy* mutable_list(int index);
  inline ::isafetec::CltUrlFilterPolicy* CltUrlFilterPolicyList::list_ReleaseAt(int index); 
  inline void CltUrlFilterPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltUrlFilterPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltUrlFilterPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltUrlFilterPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltUrlFilterPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltUrlFilterPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltUrlFilterPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltIPAndPortFilterPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltIPAndPortFilterPolicy_FilterNode();
  virtual ~CltIPAndPortFilterPolicy_FilterNode();
  
  CltIPAndPortFilterPolicy_FilterNode(const CltIPAndPortFilterPolicy_FilterNode& from);
  
  inline CltIPAndPortFilterPolicy_FilterNode& operator=(const CltIPAndPortFilterPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltIPAndPortFilterPolicy_FilterNode& default_instance();
  
  void Swap(CltIPAndPortFilterPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltIPAndPortFilterPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltIPAndPortFilterPolicy_FilterNode& from);
  void MergeFrom(const CltIPAndPortFilterPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 porttype = 2;
  inline bool has_porttype() const;
  inline void clear_porttype();
  static const int kPorttypeFieldNumber = 2;
  inline ::google::protobuf::uint32 porttype() const;
  inline void set_porttype(::google::protobuf::uint32 value);
  
  // optional uint32 PortF = 3;
  inline bool has_portf() const;
  inline void clear_portf();
  static const int kPortFFieldNumber = 3;
  inline ::google::protobuf::uint32 portf() const;
  inline void set_portf(::google::protobuf::uint32 value);
  
  // optional uint32 PortE = 4;
  inline bool has_porte() const;
  inline void clear_porte();
  static const int kPortEFieldNumber = 4;
  inline ::google::protobuf::uint32 porte() const;
  inline void set_porte(::google::protobuf::uint32 value);
  
  // optional string portlist = 5;
  inline bool has_portlist() const;
  inline void clear_portlist();
  static const int kPortlistFieldNumber = 5;
  inline const ::std::string& portlist() const;
  inline void set_portlist(const ::std::string& value);
  inline void set_portlist(const char* value);
  inline void set_portlist(const char* value, size_t size);
  inline ::std::string* mutable_portlist();
  inline ::std::string* release_portlist();
  
  // optional uint32 iptype = 6;
  inline bool has_iptype() const;
  inline void clear_iptype();
  static const int kIptypeFieldNumber = 6;
  inline ::google::protobuf::uint32 iptype() const;
  inline void set_iptype(::google::protobuf::uint32 value);
  
  // optional uint32 IpaddrF = 7;
  inline bool has_ipaddrf() const;
  inline void clear_ipaddrf();
  static const int kIpaddrFFieldNumber = 7;
  inline ::google::protobuf::uint32 ipaddrf() const;
  inline void set_ipaddrf(::google::protobuf::uint32 value);
  
  // optional uint32 IpaddrE = 8;
  inline bool has_ipaddre() const;
  inline void clear_ipaddre();
  static const int kIpaddrEFieldNumber = 8;
  inline ::google::protobuf::uint32 ipaddre() const;
  inline void set_ipaddre(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltIPAndPortFilterPolicy.FilterNode)
 private:
  inline void set_has_porttype();
  inline void clear_has_porttype();
  inline void set_has_portf();
  inline void clear_has_portf();
  inline void set_has_porte();
  inline void clear_has_porte();
  inline void set_has_portlist();
  inline void clear_has_portlist();
  inline void set_has_iptype();
  inline void clear_has_iptype();
  inline void set_has_ipaddrf();
  inline void clear_has_ipaddrf();
  inline void set_has_ipaddre();
  inline void clear_has_ipaddre();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 porttype_;
  ::google::protobuf::uint32 portf_;
  ::std::string* portlist_;
  ::google::protobuf::uint32 porte_;
  ::google::protobuf::uint32 iptype_;
  ::google::protobuf::uint32 ipaddrf_;
  ::google::protobuf::uint32 ipaddre_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltIPAndPortFilterPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltIPAndPortFilterPolicy : public ::google::protobuf::Message {
 public:
  CltIPAndPortFilterPolicy();
  virtual ~CltIPAndPortFilterPolicy();
  
  CltIPAndPortFilterPolicy(const CltIPAndPortFilterPolicy& from);
  
  inline CltIPAndPortFilterPolicy& operator=(const CltIPAndPortFilterPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltIPAndPortFilterPolicy& default_instance();
  
  void Swap(CltIPAndPortFilterPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltIPAndPortFilterPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltIPAndPortFilterPolicy& from);
  void MergeFrom(const CltIPAndPortFilterPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltIPAndPortFilterPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 21;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 21;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // optional .isafetec.FILTERLIST_TYPE filterlist_type = 5;
  inline bool has_filterlist_type() const;
  inline void clear_filterlist_type();
  static const int kFilterlistTypeFieldNumber = 5;
  inline isafetec::FILTERLIST_TYPE filterlist_type() const;
  inline void set_filterlist_type(isafetec::FILTERLIST_TYPE value);
  
  // repeated .isafetec.CltIPAndPortFilterPolicy.FilterNode filterlist = 6;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 6;
  inline const ::isafetec::CltIPAndPortFilterPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltIPAndPortFilterPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltIPAndPortFilterPolicy_FilterNode* CltIPAndPortFilterPolicy::filterlist_ReleaseAt(int index); 
  inline void CltIPAndPortFilterPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltIPAndPortFilterPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltIPAndPortFilterPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltIPAndPortFilterPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 7;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 7;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 8;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 8;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional uint32 directtype = 9;
  inline bool has_directtype() const;
  inline void clear_directtype();
  static const int kDirecttypeFieldNumber = 9;
  inline ::google::protobuf::uint32 directtype() const;
  inline void set_directtype(::google::protobuf::uint32 value);
  
  // optional uint32 protocoltype = 10;
  inline bool has_protocoltype() const;
  inline void clear_protocoltype();
  static const int kProtocoltypeFieldNumber = 10;
  inline ::google::protobuf::uint32 protocoltype() const;
  inline void set_protocoltype(::google::protobuf::uint32 value);
  
  // optional double usetimeF = 13;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 13;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 14;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 14;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional string hints = 16;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 16;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 19;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 19;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 20;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 20;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltIPAndPortFilterPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_filterlist_type();
  inline void clear_has_filterlist_type();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_directtype();
  inline void clear_has_directtype();
  inline void set_has_protocoltype();
  inline void clear_has_protocoltype();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltIPAndPortFilterPolicy_FilterNode > filterlist_;
  int filterlist_type_;
  int filter_mode_;
  ::isafetec::TimeSpanList* timelist_;
  ::google::protobuf::uint32 directtype_;
  ::google::protobuf::uint32 protocoltype_;
  double usetimef_;
  double usetimee_;
  ::std::string* hints_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltIPAndPortFilterPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltIPAndPortFilterPolicyList : public ::google::protobuf::Message {
 public:
  CltIPAndPortFilterPolicyList();
  virtual ~CltIPAndPortFilterPolicyList();
  
  CltIPAndPortFilterPolicyList(const CltIPAndPortFilterPolicyList& from);
  
  inline CltIPAndPortFilterPolicyList& operator=(const CltIPAndPortFilterPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltIPAndPortFilterPolicyList& default_instance();
  
  void Swap(CltIPAndPortFilterPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltIPAndPortFilterPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltIPAndPortFilterPolicyList& from);
  void MergeFrom(const CltIPAndPortFilterPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltIPAndPortFilterPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltIPAndPortFilterPolicy& list(int index) const;
  inline ::isafetec::CltIPAndPortFilterPolicy* mutable_list(int index);
  inline ::isafetec::CltIPAndPortFilterPolicy* CltIPAndPortFilterPolicyList::list_ReleaseAt(int index); 
  inline void CltIPAndPortFilterPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltIPAndPortFilterPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltIPAndPortFilterPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltIPAndPortFilterPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltIPAndPortFilterPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltIPAndPortFilterPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltIPAndPortFilterPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltDeviceControlPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltDeviceControlPolicy_FilterNode();
  virtual ~CltDeviceControlPolicy_FilterNode();
  
  CltDeviceControlPolicy_FilterNode(const CltDeviceControlPolicy_FilterNode& from);
  
  inline CltDeviceControlPolicy_FilterNode& operator=(const CltDeviceControlPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltDeviceControlPolicy_FilterNode& default_instance();
  
  void Swap(CltDeviceControlPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltDeviceControlPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltDeviceControlPolicy_FilterNode& from);
  void MergeFrom(const CltDeviceControlPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 filterby = 1;
  inline bool has_filterby() const;
  inline void clear_filterby();
  static const int kFilterbyFieldNumber = 1;
  inline ::google::protobuf::int32 filterby() const;
  inline void set_filterby(::google::protobuf::int32 value);
  
  // optional string device_class = 2;
  inline bool has_device_class() const;
  inline void clear_device_class();
  static const int kDeviceClassFieldNumber = 2;
  inline const ::std::string& device_class() const;
  inline void set_device_class(const ::std::string& value);
  inline void set_device_class(const char* value);
  inline void set_device_class(const char* value, size_t size);
  inline ::std::string* mutable_device_class();
  inline ::std::string* release_device_class();
  
  // optional string device_interface = 3;
  inline bool has_device_interface() const;
  inline void clear_device_interface();
  static const int kDeviceInterfaceFieldNumber = 3;
  inline const ::std::string& device_interface() const;
  inline void set_device_interface(const ::std::string& value);
  inline void set_device_interface(const char* value);
  inline void set_device_interface(const char* value, size_t size);
  inline ::std::string* mutable_device_interface();
  inline ::std::string* release_device_interface();
  
  // optional string except_list = 4;
  inline bool has_except_list() const;
  inline void clear_except_list();
  static const int kExceptListFieldNumber = 4;
  inline const ::std::string& except_list() const;
  inline void set_except_list(const ::std::string& value);
  inline void set_except_list(const char* value);
  inline void set_except_list(const char* value, size_t size);
  inline ::std::string* mutable_except_list();
  inline ::std::string* release_except_list();
  
  // optional int32 state = 5;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 5;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltDeviceControlPolicy.FilterNode)
 private:
  inline void set_has_filterby();
  inline void clear_has_filterby();
  inline void set_has_device_class();
  inline void clear_has_device_class();
  inline void set_has_device_interface();
  inline void clear_has_device_interface();
  inline void set_has_except_list();
  inline void clear_has_except_list();
  inline void set_has_state();
  inline void clear_has_state();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* device_class_;
  ::std::string* device_interface_;
  ::google::protobuf::int32 filterby_;
  ::google::protobuf::int32 state_;
  ::std::string* except_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltDeviceControlPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltDeviceControlPolicy : public ::google::protobuf::Message {
 public:
  CltDeviceControlPolicy();
  virtual ~CltDeviceControlPolicy();
  
  CltDeviceControlPolicy(const CltDeviceControlPolicy& from);
  
  inline CltDeviceControlPolicy& operator=(const CltDeviceControlPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltDeviceControlPolicy& default_instance();
  
  void Swap(CltDeviceControlPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltDeviceControlPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltDeviceControlPolicy& from);
  void MergeFrom(const CltDeviceControlPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltDeviceControlPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 14;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 14;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // repeated .isafetec.CltDeviceControlPolicy.FilterNode filterlist = 5;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 5;
  inline const ::isafetec::CltDeviceControlPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltDeviceControlPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltDeviceControlPolicy_FilterNode* CltDeviceControlPolicy::filterlist_ReleaseAt(int index); 
  inline void CltDeviceControlPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltDeviceControlPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltDeviceControlPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltDeviceControlPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 6;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 6;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 7;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 7;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional double usetimeF = 12;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 12;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 13;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 13;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional string hints = 15;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 15;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 18;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 18;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 19;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 19;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltDeviceControlPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltDeviceControlPolicy_FilterNode > filterlist_;
  ::isafetec::TimeSpanList* timelist_;
  double usetimef_;
  double usetimee_;
  int filter_mode_;
  ::google::protobuf::int32 index_;
  ::std::string* hints_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltDeviceControlPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltDeviceControlPolicyList : public ::google::protobuf::Message {
 public:
  CltDeviceControlPolicyList();
  virtual ~CltDeviceControlPolicyList();
  
  CltDeviceControlPolicyList(const CltDeviceControlPolicyList& from);
  
  inline CltDeviceControlPolicyList& operator=(const CltDeviceControlPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltDeviceControlPolicyList& default_instance();
  
  void Swap(CltDeviceControlPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltDeviceControlPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltDeviceControlPolicyList& from);
  void MergeFrom(const CltDeviceControlPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltDeviceControlPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltDeviceControlPolicy& list(int index) const;
  inline ::isafetec::CltDeviceControlPolicy* mutable_list(int index);
  inline ::isafetec::CltDeviceControlPolicy* CltDeviceControlPolicyList::list_ReleaseAt(int index); 
  inline void CltDeviceControlPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltDeviceControlPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltDeviceControlPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltDeviceControlPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltDeviceControlPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltDeviceControlPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltDeviceControlPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltPrintControlPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltPrintControlPolicy_FilterNode();
  virtual ~CltPrintControlPolicy_FilterNode();
  
  CltPrintControlPolicy_FilterNode(const CltPrintControlPolicy_FilterNode& from);
  
  inline CltPrintControlPolicy_FilterNode& operator=(const CltPrintControlPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltPrintControlPolicy_FilterNode& default_instance();
  
  void Swap(CltPrintControlPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltPrintControlPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltPrintControlPolicy_FilterNode& from);
  void MergeFrom(const CltPrintControlPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string printer = 1;
  inline bool has_printer() const;
  inline void clear_printer();
  static const int kPrinterFieldNumber = 1;
  inline const ::std::string& printer() const;
  inline void set_printer(const ::std::string& value);
  inline void set_printer(const char* value);
  inline void set_printer(const char* value, size_t size);
  inline ::std::string* mutable_printer();
  inline ::std::string* release_printer();
  
  // optional .isafetec.PRINT_FLT_TYPE type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline isafetec::PRINT_FLT_TYPE type() const;
  inline void set_type(isafetec::PRINT_FLT_TYPE value);
  
  // optional string key_word = 3;
  inline bool has_key_word() const;
  inline void clear_key_word();
  static const int kKeyWordFieldNumber = 3;
  inline const ::std::string& key_word() const;
  inline void set_key_word(const ::std::string& value);
  inline void set_key_word(const char* value);
  inline void set_key_word(const char* value, size_t size);
  inline ::std::string* mutable_key_word();
  inline ::std::string* release_key_word();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltPrintControlPolicy.FilterNode)
 private:
  inline void set_has_printer();
  inline void clear_has_printer();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_key_word();
  inline void clear_has_key_word();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* printer_;
  ::std::string* key_word_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltPrintControlPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltPrintControlPolicy : public ::google::protobuf::Message {
 public:
  CltPrintControlPolicy();
  virtual ~CltPrintControlPolicy();
  
  CltPrintControlPolicy(const CltPrintControlPolicy& from);
  
  inline CltPrintControlPolicy& operator=(const CltPrintControlPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltPrintControlPolicy& default_instance();
  
  void Swap(CltPrintControlPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltPrintControlPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltPrintControlPolicy& from);
  void MergeFrom(const CltPrintControlPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltPrintControlPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 15;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 15;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // optional double usetimeF = 5;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 5;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 6;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 6;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // repeated .isafetec.CltPrintControlPolicy.FilterNode filterlist = 7;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 7;
  inline const ::isafetec::CltPrintControlPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltPrintControlPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltPrintControlPolicy_FilterNode* CltPrintControlPolicy::filterlist_ReleaseAt(int index); 
  inline void CltPrintControlPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltPrintControlPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltPrintControlPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltPrintControlPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 8;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 8;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 9;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 9;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional string hints = 10;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 10;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 11;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 11;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 12;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 12;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltPrintControlPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  double usetimef_;
  double usetimee_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltPrintControlPolicy_FilterNode > filterlist_;
  ::isafetec::TimeSpanList* timelist_;
  ::std::string* hints_;
  int filter_mode_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltPrintControlPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltPrintControlPolicyList : public ::google::protobuf::Message {
 public:
  CltPrintControlPolicyList();
  virtual ~CltPrintControlPolicyList();
  
  CltPrintControlPolicyList(const CltPrintControlPolicyList& from);
  
  inline CltPrintControlPolicyList& operator=(const CltPrintControlPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltPrintControlPolicyList& default_instance();
  
  void Swap(CltPrintControlPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltPrintControlPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltPrintControlPolicyList& from);
  void MergeFrom(const CltPrintControlPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltPrintControlPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltPrintControlPolicy& list(int index) const;
  inline ::isafetec::CltPrintControlPolicy* mutable_list(int index);
  inline ::isafetec::CltPrintControlPolicy* CltPrintControlPolicyList::list_ReleaseAt(int index); 
  inline void CltPrintControlPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltPrintControlPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltPrintControlPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltPrintControlPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltPrintControlPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltPrintControlPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltPrintControlPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltFileControlPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltFileControlPolicy_FilterNode();
  virtual ~CltFileControlPolicy_FilterNode();
  
  CltFileControlPolicy_FilterNode(const CltFileControlPolicy_FilterNode& from);
  
  inline CltFileControlPolicy_FilterNode& operator=(const CltFileControlPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltFileControlPolicy_FilterNode& default_instance();
  
  void Swap(CltFileControlPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltFileControlPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltFileControlPolicy_FilterNode& from);
  void MergeFrom(const CltFileControlPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string process = 1;
  inline bool has_process() const;
  inline void clear_process();
  static const int kProcessFieldNumber = 1;
  inline const ::std::string& process() const;
  inline void set_process(const ::std::string& value);
  inline void set_process(const char* value);
  inline void set_process(const char* value, size_t size);
  inline ::std::string* mutable_process();
  inline ::std::string* release_process();
  
  // optional string key_word = 2;
  inline bool has_key_word() const;
  inline void clear_key_word();
  static const int kKeyWordFieldNumber = 2;
  inline const ::std::string& key_word() const;
  inline void set_key_word(const ::std::string& value);
  inline void set_key_word(const char* value);
  inline void set_key_word(const char* value, size_t size);
  inline ::std::string* mutable_key_word();
  inline ::std::string* release_key_word();
  
  // optional .isafetec.FILE_FLT_TYPE type = 3;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 3;
  inline isafetec::FILE_FLT_TYPE type() const;
  inline void set_type(isafetec::FILE_FLT_TYPE value);
  
  // optional .isafetec.MODE_TYPE modetype = 4;
  inline bool has_modetype() const;
  inline void clear_modetype();
  static const int kModetypeFieldNumber = 4;
  inline isafetec::MODE_TYPE modetype() const;
  inline void set_modetype(isafetec::MODE_TYPE value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltFileControlPolicy.FilterNode)
 private:
  inline void set_has_process();
  inline void clear_has_process();
  inline void set_has_key_word();
  inline void clear_has_key_word();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_modetype();
  inline void clear_has_modetype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* process_;
  ::std::string* key_word_;
  int type_;
  int modetype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltFileControlPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltFileControlPolicy : public ::google::protobuf::Message {
 public:
  CltFileControlPolicy();
  virtual ~CltFileControlPolicy();
  
  CltFileControlPolicy(const CltFileControlPolicy& from);
  
  inline CltFileControlPolicy& operator=(const CltFileControlPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltFileControlPolicy& default_instance();
  
  void Swap(CltFileControlPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltFileControlPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltFileControlPolicy& from);
  void MergeFrom(const CltFileControlPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltFileControlPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 16;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 16;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // repeated .isafetec.CltFileControlPolicy.FilterNode filterlist = 5;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 5;
  inline const ::isafetec::CltFileControlPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltFileControlPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltFileControlPolicy_FilterNode* CltFileControlPolicy::filterlist_ReleaseAt(int index); 
  inline void CltFileControlPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltFileControlPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltFileControlPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltFileControlPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 6;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 6;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 7;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 7;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional double usetimeF = 9;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 9;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 10;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 10;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional string hints = 11;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 11;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional string isinherit = 12;
  inline bool has_isinherit() const;
  inline void clear_isinherit();
  static const int kIsinheritFieldNumber = 12;
  inline const ::std::string& isinherit() const;
  inline void set_isinherit(const ::std::string& value);
  inline void set_isinherit(const char* value);
  inline void set_isinherit(const char* value, size_t size);
  inline ::std::string* mutable_isinherit();
  inline ::std::string* release_isinherit();
  
  // optional int32 allowedinherit = 13;
  inline bool has_allowedinherit() const;
  inline void clear_allowedinherit();
  static const int kAllowedinheritFieldNumber = 13;
  inline ::google::protobuf::int32 allowedinherit() const;
  inline void set_allowedinherit(::google::protobuf::int32 value);
  
  // optional int32 index = 14;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 14;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 15;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 15;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltFileControlPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_isinherit();
  inline void clear_has_isinherit();
  inline void set_has_allowedinherit();
  inline void clear_has_allowedinherit();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltFileControlPolicy_FilterNode > filterlist_;
  ::isafetec::TimeSpanList* timelist_;
  double usetimef_;
  double usetimee_;
  int filter_mode_;
  ::google::protobuf::int32 allowedinherit_;
  ::std::string* hints_;
  ::std::string* isinherit_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltFileControlPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltFileControlPolicyList : public ::google::protobuf::Message {
 public:
  CltFileControlPolicyList();
  virtual ~CltFileControlPolicyList();
  
  CltFileControlPolicyList(const CltFileControlPolicyList& from);
  
  inline CltFileControlPolicyList& operator=(const CltFileControlPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltFileControlPolicyList& default_instance();
  
  void Swap(CltFileControlPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltFileControlPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltFileControlPolicyList& from);
  void MergeFrom(const CltFileControlPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltFileControlPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltFileControlPolicy& list(int index) const;
  inline ::isafetec::CltFileControlPolicy* mutable_list(int index);
  inline ::isafetec::CltFileControlPolicy* CltFileControlPolicyList::list_ReleaseAt(int index); 
  inline void CltFileControlPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltFileControlPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltFileControlPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltFileControlPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltFileControlPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltFileControlPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltFileControlPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltSystemControlPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltSystemControlPolicy_FilterNode();
  virtual ~CltSystemControlPolicy_FilterNode();
  
  CltSystemControlPolicy_FilterNode(const CltSystemControlPolicy_FilterNode& from);
  
  inline CltSystemControlPolicy_FilterNode& operator=(const CltSystemControlPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltSystemControlPolicy_FilterNode& default_instance();
  
  void Swap(CltSystemControlPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltSystemControlPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltSystemControlPolicy_FilterNode& from);
  void MergeFrom(const CltSystemControlPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 state = 1;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 1;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional string code = 2;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 2;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltSystemControlPolicy.FilterNode)
 private:
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_code();
  inline void clear_has_code();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* code_;
  ::google::protobuf::int32 state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltSystemControlPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltSystemControlPolicy : public ::google::protobuf::Message {
 public:
  CltSystemControlPolicy();
  virtual ~CltSystemControlPolicy();
  
  CltSystemControlPolicy(const CltSystemControlPolicy& from);
  
  inline CltSystemControlPolicy& operator=(const CltSystemControlPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltSystemControlPolicy& default_instance();
  
  void Swap(CltSystemControlPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltSystemControlPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltSystemControlPolicy& from);
  void MergeFrom(const CltSystemControlPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltSystemControlPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 11;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 11;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 12;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 12;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 15;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 15;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // optional double usetimeF = 5;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 5;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 6;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 6;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // repeated .isafetec.CltSystemControlPolicy.FilterNode filterlist = 7;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 7;
  inline const ::isafetec::CltSystemControlPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltSystemControlPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltSystemControlPolicy_FilterNode* CltSystemControlPolicy::filterlist_ReleaseAt(int index); 
  inline void CltSystemControlPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltSystemControlPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltSystemControlPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltSystemControlPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 8;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 8;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 10;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 10;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional string hints = 13;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 13;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 18;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 18;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 19;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 19;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltSystemControlPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  double usetimef_;
  double usetimee_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltSystemControlPolicy_FilterNode > filterlist_;
  ::isafetec::TimeSpanList* timelist_;
  ::std::string* hints_;
  int filter_mode_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltSystemControlPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltSystemControlPolicyList : public ::google::protobuf::Message {
 public:
  CltSystemControlPolicyList();
  virtual ~CltSystemControlPolicyList();
  
  CltSystemControlPolicyList(const CltSystemControlPolicyList& from);
  
  inline CltSystemControlPolicyList& operator=(const CltSystemControlPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltSystemControlPolicyList& default_instance();
  
  void Swap(CltSystemControlPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltSystemControlPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltSystemControlPolicyList& from);
  void MergeFrom(const CltSystemControlPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltSystemControlPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltSystemControlPolicy& list(int index) const;
  inline ::isafetec::CltSystemControlPolicy* mutable_list(int index);
  inline ::isafetec::CltSystemControlPolicy* CltSystemControlPolicyList::list_ReleaseAt(int index); 
  inline void CltSystemControlPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltSystemControlPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltSystemControlPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltSystemControlPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltSystemControlPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltSystemControlPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltSystemControlPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT FileParam : public ::google::protobuf::Message {
 public:
  FileParam();
  virtual ~FileParam();
  
  FileParam(const FileParam& from);
  
  inline FileParam& operator=(const FileParam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileParam& default_instance();
  
  void Swap(FileParam* other);
  
  // implements Message ----------------------------------------------
  
  FileParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileParam& from);
  void MergeFrom(const FileParam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string procname = 1;
  inline bool has_procname() const;
  inline void clear_procname();
  static const int kProcnameFieldNumber = 1;
  inline const ::std::string& procname() const;
  inline void set_procname(const ::std::string& value);
  inline void set_procname(const char* value);
  inline void set_procname(const char* value, size_t size);
  inline ::std::string* mutable_procname();
  inline ::std::string* release_procname();
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string typeparam = 3;
  inline bool has_typeparam() const;
  inline void clear_typeparam();
  static const int kTypeparamFieldNumber = 3;
  inline const ::std::string& typeparam() const;
  inline void set_typeparam(const ::std::string& value);
  inline void set_typeparam(const char* value);
  inline void set_typeparam(const char* value, size_t size);
  inline ::std::string* mutable_typeparam();
  inline ::std::string* release_typeparam();
  
  // optional int32 fileoptype = 4;
  inline bool has_fileoptype() const;
  inline void clear_fileoptype();
  static const int kFileoptypeFieldNumber = 4;
  inline ::google::protobuf::int32 fileoptype() const;
  inline void set_fileoptype(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.FileParam)
 private:
  inline void set_has_procname();
  inline void clear_has_procname();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_typeparam();
  inline void clear_has_typeparam();
  inline void set_has_fileoptype();
  inline void clear_has_fileoptype();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* procname_;
  ::std::string* typeparam_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 fileoptype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static FileParam* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT FileParamList : public ::google::protobuf::Message {
 public:
  FileParamList();
  virtual ~FileParamList();
  
  FileParamList(const FileParamList& from);
  
  inline FileParamList& operator=(const FileParamList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileParamList& default_instance();
  
  void Swap(FileParamList* other);
  
  // implements Message ----------------------------------------------
  
  FileParamList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileParamList& from);
  void MergeFrom(const FileParamList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.FileParam list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::FileParam& list(int index) const;
  inline ::isafetec::FileParam* mutable_list(int index);
  inline ::isafetec::FileParam* FileParamList::list_ReleaseAt(int index); 
  inline void FileParamList::list_RemoveAt(int index); 
  inline ::isafetec::FileParam* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::FileParam >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::FileParam >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.FileParamList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::FileParam > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static FileParamList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltLogPolcicy_ScreenParam : public ::google::protobuf::Message {
 public:
  CltLogPolcicy_ScreenParam();
  virtual ~CltLogPolcicy_ScreenParam();
  
  CltLogPolcicy_ScreenParam(const CltLogPolcicy_ScreenParam& from);
  
  inline CltLogPolcicy_ScreenParam& operator=(const CltLogPolcicy_ScreenParam& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltLogPolcicy_ScreenParam& default_instance();
  
  void Swap(CltLogPolcicy_ScreenParam* other);
  
  // implements Message ----------------------------------------------
  
  CltLogPolcicy_ScreenParam* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltLogPolcicy_ScreenParam& from);
  void MergeFrom(const CltLogPolcicy_ScreenParam& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 interval = 1;
  inline bool has_interval() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 1;
  inline ::google::protobuf::int32 interval() const;
  inline void set_interval(::google::protobuf::int32 value);
  
  // optional int32 width = 2;
  inline bool has_width() const;
  inline void clear_width();
  static const int kWidthFieldNumber = 2;
  inline ::google::protobuf::int32 width() const;
  inline void set_width(::google::protobuf::int32 value);
  
  // optional int32 height = 3;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 3;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);
  
  // optional int32 save_type = 4;
  inline bool has_save_type() const;
  inline void clear_save_type();
  static const int kSaveTypeFieldNumber = 4;
  inline ::google::protobuf::int32 save_type() const;
  inline void set_save_type(::google::protobuf::int32 value);
  
  // optional int32 saveindb = 5;
  inline bool has_saveindb() const;
  inline void clear_saveindb();
  static const int kSaveindbFieldNumber = 5;
  inline ::google::protobuf::int32 saveindb() const;
  inline void set_saveindb(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltLogPolcicy.ScreenParam)
 private:
  inline void set_has_interval();
  inline void clear_has_interval();
  inline void set_has_width();
  inline void clear_has_width();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_save_type();
  inline void clear_has_save_type();
  inline void set_has_saveindb();
  inline void clear_has_saveindb();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 interval_;
  ::google::protobuf::int32 width_;
  ::google::protobuf::int32 height_;
  ::google::protobuf::int32 save_type_;
  ::google::protobuf::int32 saveindb_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltLogPolcicy_ScreenParam* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltLogPolcicy : public ::google::protobuf::Message {
 public:
  CltLogPolcicy();
  virtual ~CltLogPolcicy();
  
  CltLogPolcicy(const CltLogPolcicy& from);
  
  inline CltLogPolcicy& operator=(const CltLogPolcicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltLogPolcicy& default_instance();
  
  void Swap(CltLogPolcicy* other);
  
  // implements Message ----------------------------------------------
  
  CltLogPolcicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltLogPolcicy& from);
  void MergeFrom(const CltLogPolcicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltLogPolcicy_ScreenParam ScreenParam;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 15;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 15;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // repeated int32 stateon = 4;
  inline int stateon_size() const;
  inline void clear_stateon();
  static const int kStateonFieldNumber = 4;
  inline ::google::protobuf::int32 stateon(int index) const;
  inline void set_stateon(int index, ::google::protobuf::int32 value);
  inline void add_stateon(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stateon() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stateon();
  
  // optional .isafetec.UPLOADLOG_TYPE uploadtype = 5;
  inline bool has_uploadtype() const;
  inline void clear_uploadtype();
  static const int kUploadtypeFieldNumber = 5;
  inline isafetec::UPLOADLOG_TYPE uploadtype() const;
  inline void set_uploadtype(isafetec::UPLOADLOG_TYPE value);
  
  // optional double upload_ontime = 8;
  inline bool has_upload_ontime() const;
  inline void clear_upload_ontime();
  static const int kUploadOntimeFieldNumber = 8;
  inline double upload_ontime() const;
  inline void set_upload_ontime(double value);
  
  // optional .isafetec.CLEANLOG_TYPE cleantype = 30;
  inline bool has_cleantype() const;
  inline void clear_cleantype();
  static const int kCleantypeFieldNumber = 30;
  inline isafetec::CLEANLOG_TYPE cleantype() const;
  inline void set_cleantype(isafetec::CLEANLOG_TYPE value);
  
  // optional double cleanparamtime = 32;
  inline bool has_cleanparamtime() const;
  inline void clear_cleanparamtime();
  static const int kCleanparamtimeFieldNumber = 32;
  inline double cleanparamtime() const;
  inline void set_cleanparamtime(double value);
  
  // optional .isafetec.CltLogPolcicy.ScreenParam screen_param = 10;
  inline bool has_screen_param() const;
  inline void clear_screen_param();
  static const int kScreenParamFieldNumber = 10;
  inline const ::isafetec::CltLogPolcicy_ScreenParam& screen_param() const;
  inline ::isafetec::CltLogPolcicy_ScreenParam* mutable_screen_param();
  inline ::isafetec::CltLogPolcicy_ScreenParam* release_screen_param();
  
  // optional int32 max_idle_interval = 11;
  inline bool has_max_idle_interval() const;
  inline void clear_max_idle_interval();
  static const int kMaxIdleIntervalFieldNumber = 11;
  inline ::google::protobuf::int32 max_idle_interval() const;
  inline void set_max_idle_interval(::google::protobuf::int32 value);
  
  // optional .isafetec.FileParamList fileparamlist = 12;
  inline bool has_fileparamlist() const;
  inline void clear_fileparamlist();
  static const int kFileparamlistFieldNumber = 12;
  inline const ::isafetec::FileParamList& fileparamlist() const;
  inline ::isafetec::FileParamList* mutable_fileparamlist();
  inline ::isafetec::FileParamList* release_fileparamlist();
  
  // optional .isafetec.TimeSpanList timelist = 25;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 25;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional double usetimeF = 26;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 26;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 27;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 27;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional int32 week_day_mask = 28;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 28;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltLogPolcicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_uploadtype();
  inline void clear_has_uploadtype();
  inline void set_has_upload_ontime();
  inline void clear_has_upload_ontime();
  inline void set_has_cleantype();
  inline void clear_has_cleantype();
  inline void set_has_cleanparamtime();
  inline void clear_has_cleanparamtime();
  inline void set_has_screen_param();
  inline void clear_has_screen_param();
  inline void set_has_max_idle_interval();
  inline void clear_has_max_idle_interval();
  inline void set_has_fileparamlist();
  inline void clear_has_fileparamlist();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stateon_;
  ::google::protobuf::int32 inuse_;
  int uploadtype_;
  double upload_ontime_;
  double cleanparamtime_;
  int cleantype_;
  ::google::protobuf::int32 max_idle_interval_;
  ::isafetec::CltLogPolcicy_ScreenParam* screen_param_;
  ::isafetec::FileParamList* fileparamlist_;
  ::isafetec::TimeSpanList* timelist_;
  double usetimef_;
  double usetimee_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltLogPolcicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltLogPolcicyList : public ::google::protobuf::Message {
 public:
  CltLogPolcicyList();
  virtual ~CltLogPolcicyList();
  
  CltLogPolcicyList(const CltLogPolcicyList& from);
  
  inline CltLogPolcicyList& operator=(const CltLogPolcicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltLogPolcicyList& default_instance();
  
  void Swap(CltLogPolcicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltLogPolcicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltLogPolcicyList& from);
  void MergeFrom(const CltLogPolcicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltLogPolcicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltLogPolcicy& list(int index) const;
  inline ::isafetec::CltLogPolcicy* mutable_list(int index);
  inline ::isafetec::CltLogPolcicy* CltLogPolcicyList::list_ReleaseAt(int index); 
  inline void CltLogPolcicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltLogPolcicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltLogPolcicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltLogPolcicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltLogPolcicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltLogPolcicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltLogPolcicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltStreamControlPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltStreamControlPolicy_FilterNode();
  virtual ~CltStreamControlPolicy_FilterNode();
  
  CltStreamControlPolicy_FilterNode(const CltStreamControlPolicy_FilterNode& from);
  
  inline CltStreamControlPolicy_FilterNode& operator=(const CltStreamControlPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltStreamControlPolicy_FilterNode& default_instance();
  
  void Swap(CltStreamControlPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltStreamControlPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltStreamControlPolicy_FilterNode& from);
  void MergeFrom(const CltStreamControlPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional uint32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 addtype = 3;
  inline bool has_addtype() const;
  inline void clear_addtype();
  static const int kAddtypeFieldNumber = 3;
  inline ::google::protobuf::uint32 addtype() const;
  inline void set_addtype(::google::protobuf::uint32 value);
  
  // optional string addparam = 4;
  inline bool has_addparam() const;
  inline void clear_addparam();
  static const int kAddparamFieldNumber = 4;
  inline const ::std::string& addparam() const;
  inline void set_addparam(const ::std::string& value);
  inline void set_addparam(const char* value);
  inline void set_addparam(const char* value, size_t size);
  inline ::std::string* mutable_addparam();
  inline ::std::string* release_addparam();
  
  // optional uint32 uptype = 5;
  inline bool has_uptype() const;
  inline void clear_uptype();
  static const int kUptypeFieldNumber = 5;
  inline ::google::protobuf::uint32 uptype() const;
  inline void set_uptype(::google::protobuf::uint32 value);
  
  // optional uint32 upparam = 6;
  inline bool has_upparam() const;
  inline void clear_upparam();
  static const int kUpparamFieldNumber = 6;
  inline ::google::protobuf::uint32 upparam() const;
  inline void set_upparam(::google::protobuf::uint32 value);
  
  // optional uint32 downtype = 7;
  inline bool has_downtype() const;
  inline void clear_downtype();
  static const int kDowntypeFieldNumber = 7;
  inline ::google::protobuf::uint32 downtype() const;
  inline void set_downtype(::google::protobuf::uint32 value);
  
  // optional uint32 downparam = 8;
  inline bool has_downparam() const;
  inline void clear_downparam();
  static const int kDownparamFieldNumber = 8;
  inline ::google::protobuf::uint32 downparam() const;
  inline void set_downparam(::google::protobuf::uint32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltStreamControlPolicy.FilterNode)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_addtype();
  inline void clear_has_addtype();
  inline void set_has_addparam();
  inline void clear_has_addparam();
  inline void set_has_uptype();
  inline void clear_has_uptype();
  inline void set_has_upparam();
  inline void clear_has_upparam();
  inline void set_has_downtype();
  inline void clear_has_downtype();
  inline void set_has_downparam();
  inline void clear_has_downparam();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 addtype_;
  ::std::string* addparam_;
  ::google::protobuf::uint32 uptype_;
  ::google::protobuf::uint32 upparam_;
  ::google::protobuf::uint32 downtype_;
  ::google::protobuf::uint32 downparam_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltStreamControlPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltStreamControlPolicy : public ::google::protobuf::Message {
 public:
  CltStreamControlPolicy();
  virtual ~CltStreamControlPolicy();
  
  CltStreamControlPolicy(const CltStreamControlPolicy& from);
  
  inline CltStreamControlPolicy& operator=(const CltStreamControlPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltStreamControlPolicy& default_instance();
  
  void Swap(CltStreamControlPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltStreamControlPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltStreamControlPolicy& from);
  void MergeFrom(const CltStreamControlPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltStreamControlPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 15;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 15;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // repeated .isafetec.CltStreamControlPolicy.FilterNode filterlist = 5;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 5;
  inline const ::isafetec::CltStreamControlPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltStreamControlPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltStreamControlPolicy_FilterNode* CltStreamControlPolicy::filterlist_ReleaseAt(int index); 
  inline void CltStreamControlPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltStreamControlPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltStreamControlPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltStreamControlPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 6;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 6;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 7;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 7;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional double usetimeF = 13;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 13;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 14;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 14;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional string hints = 16;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 16;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 19;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 19;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 20;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 20;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltStreamControlPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltStreamControlPolicy_FilterNode > filterlist_;
  ::isafetec::TimeSpanList* timelist_;
  double usetimef_;
  double usetimee_;
  int filter_mode_;
  ::google::protobuf::int32 index_;
  ::std::string* hints_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltStreamControlPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltStreamControlPolicyList : public ::google::protobuf::Message {
 public:
  CltStreamControlPolicyList();
  virtual ~CltStreamControlPolicyList();
  
  CltStreamControlPolicyList(const CltStreamControlPolicyList& from);
  
  inline CltStreamControlPolicyList& operator=(const CltStreamControlPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltStreamControlPolicyList& default_instance();
  
  void Swap(CltStreamControlPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltStreamControlPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltStreamControlPolicyList& from);
  void MergeFrom(const CltStreamControlPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltStreamControlPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltStreamControlPolicy& list(int index) const;
  inline ::isafetec::CltStreamControlPolicy* mutable_list(int index);
  inline ::isafetec::CltStreamControlPolicy* CltStreamControlPolicyList::list_ReleaseAt(int index); 
  inline void CltStreamControlPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltStreamControlPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltStreamControlPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltStreamControlPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltStreamControlPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltStreamControlPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltStreamControlPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltCommonPolicy_ResScan : public ::google::protobuf::Message {
 public:
  CltCommonPolicy_ResScan();
  virtual ~CltCommonPolicy_ResScan();
  
  CltCommonPolicy_ResScan(const CltCommonPolicy_ResScan& from);
  
  inline CltCommonPolicy_ResScan& operator=(const CltCommonPolicy_ResScan& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltCommonPolicy_ResScan& default_instance();
  
  void Swap(CltCommonPolicy_ResScan* other);
  
  // implements Message ----------------------------------------------
  
  CltCommonPolicy_ResScan* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltCommonPolicy_ResScan& from);
  void MergeFrom(const CltCommonPolicy_ResScan& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double time = 2;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 2;
  inline double time() const;
  inline void set_time(double value);
  
  // optional int32 param = 3;
  inline bool has_param() const;
  inline void clear_param();
  static const int kParamFieldNumber = 3;
  inline ::google::protobuf::int32 param() const;
  inline void set_param(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltCommonPolicy.ResScan)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_param();
  inline void clear_has_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double time_;
  ::google::protobuf::int32 type_;
  ::google::protobuf::int32 param_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltCommonPolicy_ResScan* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltCommonPolicy : public ::google::protobuf::Message {
 public:
  CltCommonPolicy();
  virtual ~CltCommonPolicy();
  
  CltCommonPolicy(const CltCommonPolicy& from);
  
  inline CltCommonPolicy& operator=(const CltCommonPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltCommonPolicy& default_instance();
  
  void Swap(CltCommonPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltCommonPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltCommonPolicy& from);
  void MergeFrom(const CltCommonPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltCommonPolicy_ResScan ResScan;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 14;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 14;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // repeated int32 stateon = 4;
  inline int stateon_size() const;
  inline void clear_stateon();
  static const int kStateonFieldNumber = 4;
  inline ::google::protobuf::int32 stateon(int index) const;
  inline void set_stateon(int index, ::google::protobuf::int32 value);
  inline void add_stateon(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stateon() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stateon();
  
  // optional int32 scan_type = 5;
  inline bool has_scan_type() const;
  inline void clear_scan_type();
  static const int kScanTypeFieldNumber = 5;
  inline ::google::protobuf::int32 scan_type() const;
  inline void set_scan_type(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 8;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 8;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // optional double do_at_time = 6;
  inline bool has_do_at_time() const;
  inline void clear_do_at_time();
  static const int kDoAtTimeFieldNumber = 6;
  inline double do_at_time() const;
  inline void set_do_at_time(double value);
  
  // optional .isafetec.CltCommonPolicy.ResScan res_param = 7;
  inline bool has_res_param() const;
  inline void clear_res_param();
  static const int kResParamFieldNumber = 7;
  inline const ::isafetec::CltCommonPolicy_ResScan& res_param() const;
  inline ::isafetec::CltCommonPolicy_ResScan* mutable_res_param();
  inline ::isafetec::CltCommonPolicy_ResScan* release_res_param();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltCommonPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_scan_type();
  inline void clear_has_scan_type();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_do_at_time();
  inline void clear_has_do_at_time();
  inline void set_has_res_param();
  inline void clear_has_res_param();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stateon_;
  ::google::protobuf::int32 inuse_;
  ::google::protobuf::int32 scan_type_;
  double do_at_time_;
  ::isafetec::CltCommonPolicy_ResScan* res_param_;
  int filter_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltCommonPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltCommonPolicyList : public ::google::protobuf::Message {
 public:
  CltCommonPolicyList();
  virtual ~CltCommonPolicyList();
  
  CltCommonPolicyList(const CltCommonPolicyList& from);
  
  inline CltCommonPolicyList& operator=(const CltCommonPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltCommonPolicyList& default_instance();
  
  void Swap(CltCommonPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltCommonPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltCommonPolicyList& from);
  void MergeFrom(const CltCommonPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltCommonPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltCommonPolicy& list(int index) const;
  inline ::isafetec::CltCommonPolicy* mutable_list(int index);
  inline ::isafetec::CltCommonPolicy* CltCommonPolicyList::list_ReleaseAt(int index); 
  inline void CltCommonPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltCommonPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltCommonPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltCommonPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltCommonPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltCommonPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltCommonPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltCheckPCIdlePolicy : public ::google::protobuf::Message {
 public:
  CltCheckPCIdlePolicy();
  virtual ~CltCheckPCIdlePolicy();
  
  CltCheckPCIdlePolicy(const CltCheckPCIdlePolicy& from);
  
  inline CltCheckPCIdlePolicy& operator=(const CltCheckPCIdlePolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltCheckPCIdlePolicy& default_instance();
  
  void Swap(CltCheckPCIdlePolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltCheckPCIdlePolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltCheckPCIdlePolicy& from);
  void MergeFrom(const CltCheckPCIdlePolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 max_minute = 4;
  inline bool has_max_minute() const;
  inline void clear_max_minute();
  static const int kMaxMinuteFieldNumber = 4;
  inline ::google::protobuf::int32 max_minute() const;
  inline void set_max_minute(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltCheckPCIdlePolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_max_minute();
  inline void clear_has_max_minute();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 max_minute_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltCheckPCIdlePolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltAlarmPolicy : public ::google::protobuf::Message {
 public:
  CltAlarmPolicy();
  virtual ~CltAlarmPolicy();
  
  CltAlarmPolicy(const CltAlarmPolicy& from);
  
  inline CltAlarmPolicy& operator=(const CltAlarmPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltAlarmPolicy& default_instance();
  
  void Swap(CltAlarmPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltAlarmPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltAlarmPolicy& from);
  void MergeFrom(const CltAlarmPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 14;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 14;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // repeated int32 stateon = 4;
  inline int stateon_size() const;
  inline void clear_stateon();
  static const int kStateonFieldNumber = 4;
  inline ::google::protobuf::int32 stateon(int index) const;
  inline void set_stateon(int index, ::google::protobuf::int32 value);
  inline void add_stateon(::google::protobuf::int32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      stateon() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_stateon();
  
  // optional .isafetec.TimeSpanList timelist = 6;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 6;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional double usetimeF = 12;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 12;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 13;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 13;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional int32 index = 18;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 18;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 19;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 19;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltAlarmPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > stateon_;
  ::isafetec::TimeSpanList* timelist_;
  ::google::protobuf::int32 inuse_;
  ::google::protobuf::int32 index_;
  double usetimef_;
  double usetimee_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltAlarmPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltAlarmPolicyList : public ::google::protobuf::Message {
 public:
  CltAlarmPolicyList();
  virtual ~CltAlarmPolicyList();
  
  CltAlarmPolicyList(const CltAlarmPolicyList& from);
  
  inline CltAlarmPolicyList& operator=(const CltAlarmPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltAlarmPolicyList& default_instance();
  
  void Swap(CltAlarmPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltAlarmPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltAlarmPolicyList& from);
  void MergeFrom(const CltAlarmPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltAlarmPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltAlarmPolicy& list(int index) const;
  inline ::isafetec::CltAlarmPolicy* mutable_list(int index);
  inline ::isafetec::CltAlarmPolicy* CltAlarmPolicyList::list_ReleaseAt(int index); 
  inline void CltAlarmPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltAlarmPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltAlarmPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltAlarmPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltAlarmPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltAlarmPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltAlarmPolicyList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltQQFilterPolicy_FilterNode : public ::google::protobuf::Message {
 public:
  CltQQFilterPolicy_FilterNode();
  virtual ~CltQQFilterPolicy_FilterNode();
  
  CltQQFilterPolicy_FilterNode(const CltQQFilterPolicy_FilterNode& from);
  
  inline CltQQFilterPolicy_FilterNode& operator=(const CltQQFilterPolicy_FilterNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltQQFilterPolicy_FilterNode& default_instance();
  
  void Swap(CltQQFilterPolicy_FilterNode* other);
  
  // implements Message ----------------------------------------------
  
  CltQQFilterPolicy_FilterNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltQQFilterPolicy_FilterNode& from);
  void MergeFrom(const CltQQFilterPolicy_FilterNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string qqnumber = 1;
  inline bool has_qqnumber() const;
  inline void clear_qqnumber();
  static const int kQqnumberFieldNumber = 1;
  inline const ::std::string& qqnumber() const;
  inline void set_qqnumber(const ::std::string& value);
  inline void set_qqnumber(const char* value);
  inline void set_qqnumber(const char* value, size_t size);
  inline ::std::string* mutable_qqnumber();
  inline ::std::string* release_qqnumber();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltQQFilterPolicy.FilterNode)
 private:
  inline void set_has_qqnumber();
  inline void clear_has_qqnumber();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* qqnumber_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltQQFilterPolicy_FilterNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltQQFilterPolicy : public ::google::protobuf::Message {
 public:
  CltQQFilterPolicy();
  virtual ~CltQQFilterPolicy();
  
  CltQQFilterPolicy(const CltQQFilterPolicy& from);
  
  inline CltQQFilterPolicy& operator=(const CltQQFilterPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltQQFilterPolicy& default_instance();
  
  void Swap(CltQQFilterPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CltQQFilterPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltQQFilterPolicy& from);
  void MergeFrom(const CltQQFilterPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  typedef CltQQFilterPolicy_FilterNode FilterNode;
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // optional int32 inuse = 14;
  inline bool has_inuse() const;
  inline void clear_inuse();
  static const int kInuseFieldNumber = 14;
  inline ::google::protobuf::int32 inuse() const;
  inline void set_inuse(::google::protobuf::int32 value);
  
  // optional .isafetec.FILTER_TYPE filter_type = 4;
  inline bool has_filter_type() const;
  inline void clear_filter_type();
  static const int kFilterTypeFieldNumber = 4;
  inline isafetec::FILTER_TYPE filter_type() const;
  inline void set_filter_type(isafetec::FILTER_TYPE value);
  
  // optional .isafetec.FILTERLIST_TYPE filterlist_type = 5;
  inline bool has_filterlist_type() const;
  inline void clear_filterlist_type();
  static const int kFilterlistTypeFieldNumber = 5;
  inline isafetec::FILTERLIST_TYPE filterlist_type() const;
  inline void set_filterlist_type(isafetec::FILTERLIST_TYPE value);
  
  // repeated .isafetec.CltQQFilterPolicy.FilterNode filterlist = 6;
  inline int filterlist_size() const;
  inline void clear_filterlist();
  static const int kFilterlistFieldNumber = 6;
  inline const ::isafetec::CltQQFilterPolicy_FilterNode& filterlist(int index) const;
  inline ::isafetec::CltQQFilterPolicy_FilterNode* mutable_filterlist(int index);
  inline ::isafetec::CltQQFilterPolicy_FilterNode* CltQQFilterPolicy::filterlist_ReleaseAt(int index); 
  inline void CltQQFilterPolicy::filterlist_RemoveAt(int index); 
  inline ::isafetec::CltQQFilterPolicy_FilterNode* add_filterlist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltQQFilterPolicy_FilterNode >&
      filterlist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltQQFilterPolicy_FilterNode >*
      mutable_filterlist();
  
  // optional .isafetec.TimeSpanList timelist = 7;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 7;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // optional .isafetec.FILTER_MODE filter_mode = 8;
  inline bool has_filter_mode() const;
  inline void clear_filter_mode();
  static const int kFilterModeFieldNumber = 8;
  inline isafetec::FILTER_MODE filter_mode() const;
  inline void set_filter_mode(isafetec::FILTER_MODE value);
  
  // optional double usetimeF = 9;
  inline bool has_usetimef() const;
  inline void clear_usetimef();
  static const int kUsetimeFFieldNumber = 9;
  inline double usetimef() const;
  inline void set_usetimef(double value);
  
  // optional double usetimeE = 10;
  inline bool has_usetimee() const;
  inline void clear_usetimee();
  static const int kUsetimeEFieldNumber = 10;
  inline double usetimee() const;
  inline void set_usetimee(double value);
  
  // optional string hints = 11;
  inline bool has_hints() const;
  inline void clear_hints();
  static const int kHintsFieldNumber = 11;
  inline const ::std::string& hints() const;
  inline void set_hints(const ::std::string& value);
  inline void set_hints(const char* value);
  inline void set_hints(const char* value, size_t size);
  inline ::std::string* mutable_hints();
  inline ::std::string* release_hints();
  
  // optional int32 index = 12;
  inline bool has_index() const;
  inline void clear_index();
  static const int kIndexFieldNumber = 12;
  inline ::google::protobuf::int32 index() const;
  inline void set_index(::google::protobuf::int32 value);
  
  // optional int32 week_day_mask = 13;
  inline bool has_week_day_mask() const;
  inline void clear_week_day_mask();
  static const int kWeekDayMaskFieldNumber = 13;
  inline ::google::protobuf::int32 week_day_mask() const;
  inline void set_week_day_mask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CltQQFilterPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_inuse();
  inline void clear_has_inuse();
  inline void set_has_filter_type();
  inline void clear_has_filter_type();
  inline void set_has_filterlist_type();
  inline void clear_has_filterlist_type();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  inline void set_has_filter_mode();
  inline void clear_has_filter_mode();
  inline void set_has_usetimef();
  inline void clear_has_usetimef();
  inline void set_has_usetimee();
  inline void clear_has_usetimee();
  inline void set_has_hints();
  inline void clear_has_hints();
  inline void set_has_index();
  inline void clear_has_index();
  inline void set_has_week_day_mask();
  inline void clear_has_week_day_mask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::int32 inuse_;
  int filter_type_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltQQFilterPolicy_FilterNode > filterlist_;
  int filterlist_type_;
  int filter_mode_;
  ::isafetec::TimeSpanList* timelist_;
  double usetimef_;
  double usetimee_;
  ::std::string* hints_;
  ::google::protobuf::int32 index_;
  ::google::protobuf::int32 week_day_mask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltQQFilterPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CltQQFilterPolicyList : public ::google::protobuf::Message {
 public:
  CltQQFilterPolicyList();
  virtual ~CltQQFilterPolicyList();
  
  CltQQFilterPolicyList(const CltQQFilterPolicyList& from);
  
  inline CltQQFilterPolicyList& operator=(const CltQQFilterPolicyList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CltQQFilterPolicyList& default_instance();
  
  void Swap(CltQQFilterPolicyList* other);
  
  // implements Message ----------------------------------------------
  
  CltQQFilterPolicyList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CltQQFilterPolicyList& from);
  void MergeFrom(const CltQQFilterPolicyList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.CltQQFilterPolicy list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::CltQQFilterPolicy& list(int index) const;
  inline ::isafetec::CltQQFilterPolicy* mutable_list(int index);
  inline ::isafetec::CltQQFilterPolicy* CltQQFilterPolicyList::list_ReleaseAt(int index); 
  inline void CltQQFilterPolicyList::list_RemoveAt(int index); 
  inline ::isafetec::CltQQFilterPolicy* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CltQQFilterPolicy >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CltQQFilterPolicy >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.CltQQFilterPolicyList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::CltQQFilterPolicy > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_Intranetclt_2eproto();
  friend void protobuf_AssignDesc_Intranetclt_2eproto();
  friend void protobuf_ShutdownFile_Intranetclt_2eproto();
  
  void InitAsDefaultInstance();
  static CltQQFilterPolicyList* default_instance_;
};
// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace isafetec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::PRINT_FLT_TYPE>() {
  return isafetec::PRINT_FLT_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::FILE_FLT_TYPE>() {
  return isafetec::FILE_FLT_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::MODE_TYPE>() {
  return isafetec::MODE_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Intranetclt_2eproto__INCLUDED
