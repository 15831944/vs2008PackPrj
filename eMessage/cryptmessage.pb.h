// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cryptmessage.proto

#ifndef PROTOBUF_cryptmessage_2eproto__INCLUDED
#define PROTOBUF_cryptmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "cmmmessage.pb.h"
// @@protoc_insertion_point(includes)

namespace isafetec {

// Internal implementation detail -- do not call these.
void LIBPROTOBUF_EXPORT protobuf_AddDesc_cryptmessage_2eproto();
void protobuf_AssignDesc_cryptmessage_2eproto();
void protobuf_ShutdownFile_cryptmessage_2eproto();

class CryptSoftware;
class SorenPolicy;
class CryptAlgInfo;
class CryptAlgType;

// ===================================================================

class LIBPROTOBUF_EXPORT CryptSoftware : public ::google::protobuf::Message {
 public:
  CryptSoftware();
  virtual ~CryptSoftware();
  
  CryptSoftware(const CryptSoftware& from);
  
  inline CryptSoftware& operator=(const CryptSoftware& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CryptSoftware& default_instance();
  
  void Swap(CryptSoftware* other);
  
  // implements Message ----------------------------------------------
  
  CryptSoftware* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CryptSoftware& from);
  void MergeFrom(const CryptSoftware& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string image = 2;
  inline bool has_image() const;
  inline void clear_image();
  static const int kImageFieldNumber = 2;
  inline const ::std::string& image() const;
  inline void set_image(const ::std::string& value);
  inline void set_image(const char* value);
  inline void set_image(const char* value, size_t size);
  inline ::std::string* mutable_image();
  inline ::std::string* release_image();
  
  // optional string version = 3;
  inline bool has_version() const;
  inline void clear_version();
  static const int kVersionFieldNumber = 3;
  inline const ::std::string& version() const;
  inline void set_version(const ::std::string& value);
  inline void set_version(const char* value);
  inline void set_version(const char* value, size_t size);
  inline ::std::string* mutable_version();
  inline ::std::string* release_version();
  
  // optional string filter_ext = 4;
  inline bool has_filter_ext() const;
  inline void clear_filter_ext();
  static const int kFilterExtFieldNumber = 4;
  inline const ::std::string& filter_ext() const;
  inline void set_filter_ext(const ::std::string& value);
  inline void set_filter_ext(const char* value);
  inline void set_filter_ext(const char* value, size_t size);
  inline ::std::string* mutable_filter_ext();
  inline ::std::string* release_filter_ext();
  
  // optional string nofilter_ext = 5;
  inline bool has_nofilter_ext() const;
  inline void clear_nofilter_ext();
  static const int kNofilterExtFieldNumber = 5;
  inline const ::std::string& nofilter_ext() const;
  inline void set_nofilter_ext(const ::std::string& value);
  inline void set_nofilter_ext(const char* value);
  inline void set_nofilter_ext(const char* value, size_t size);
  inline ::std::string* mutable_nofilter_ext();
  inline ::std::string* release_nofilter_ext();
  
  // @@protoc_insertion_point(class_scope:isafetec.CryptSoftware)
 private:
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_image();
  inline void clear_has_image();
  inline void set_has_version();
  inline void clear_has_version();
  inline void set_has_filter_ext();
  inline void clear_has_filter_ext();
  inline void set_has_nofilter_ext();
  inline void clear_has_nofilter_ext();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* image_;
  ::std::string* version_;
  ::std::string* filter_ext_;
  ::std::string* nofilter_ext_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_cryptmessage_2eproto();
  friend void protobuf_AssignDesc_cryptmessage_2eproto();
  friend void protobuf_ShutdownFile_cryptmessage_2eproto();
  
  void InitAsDefaultInstance();
  static CryptSoftware* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT SorenPolicy : public ::google::protobuf::Message {
 public:
  SorenPolicy();
  virtual ~SorenPolicy();
  
  SorenPolicy(const SorenPolicy& from);
  
  inline SorenPolicy& operator=(const SorenPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SorenPolicy& default_instance();
  
  void Swap(SorenPolicy* other);
  
  // implements Message ----------------------------------------------
  
  SorenPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SorenPolicy& from);
  void MergeFrom(const SorenPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required int32 type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required double last_time = 3;
  inline bool has_last_time() const;
  inline void clear_last_time();
  static const int kLastTimeFieldNumber = 3;
  inline double last_time() const;
  inline void set_last_time(double value);
  
  // repeated .isafetec.CryptSoftware list = 4;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 4;
  inline const ::isafetec::CryptSoftware& list(int index) const;
  inline ::isafetec::CryptSoftware* mutable_list(int index);
  inline ::isafetec::CryptSoftware* SorenPolicy::list_ReleaseAt(int index); 
  inline void SorenPolicy::list_RemoveAt(int index); 
  inline ::isafetec::CryptSoftware* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::CryptSoftware >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::CryptSoftware >*
      mutable_list();
  
  // optional .isafetec.TimeSpanList timelist = 5;
  inline bool has_timelist() const;
  inline void clear_timelist();
  static const int kTimelistFieldNumber = 5;
  inline const ::isafetec::TimeSpanList& timelist() const;
  inline ::isafetec::TimeSpanList* mutable_timelist();
  inline ::isafetec::TimeSpanList* release_timelist();
  
  // @@protoc_insertion_point(class_scope:isafetec.SorenPolicy)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_last_time();
  inline void clear_has_last_time();
  inline void set_has_timelist();
  inline void clear_has_timelist();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 type_;
  double last_time_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::CryptSoftware > list_;
  ::isafetec::TimeSpanList* timelist_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_cryptmessage_2eproto();
  friend void protobuf_AssignDesc_cryptmessage_2eproto();
  friend void protobuf_ShutdownFile_cryptmessage_2eproto();
  
  void InitAsDefaultInstance();
  static SorenPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CryptAlgInfo : public ::google::protobuf::Message {
 public:
  CryptAlgInfo();
  virtual ~CryptAlgInfo();
  
  CryptAlgInfo(const CryptAlgInfo& from);
  
  inline CryptAlgInfo& operator=(const CryptAlgInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CryptAlgInfo& default_instance();
  
  void Swap(CryptAlgInfo* other);
  
  // implements Message ----------------------------------------------
  
  CryptAlgInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CryptAlgInfo& from);
  void MergeFrom(const CryptAlgInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 alg_code = 1;
  inline bool has_alg_code() const;
  inline void clear_alg_code();
  static const int kAlgCodeFieldNumber = 1;
  inline ::google::protobuf::int32 alg_code() const;
  inline void set_alg_code(::google::protobuf::int32 value);
  
  // required int32 key_len = 2;
  inline bool has_key_len() const;
  inline void clear_key_len();
  static const int kKeyLenFieldNumber = 2;
  inline ::google::protobuf::int32 key_len() const;
  inline void set_key_len(::google::protobuf::int32 value);
  
  // required string key_data = 3;
  inline bool has_key_data() const;
  inline void clear_key_data();
  static const int kKeyDataFieldNumber = 3;
  inline const ::std::string& key_data() const;
  inline void set_key_data(const ::std::string& value);
  inline void set_key_data(const char* value);
  inline void set_key_data(const char* value, size_t size);
  inline ::std::string* mutable_key_data();
  inline ::std::string* release_key_data();
  
  // @@protoc_insertion_point(class_scope:isafetec.CryptAlgInfo)
 private:
  inline void set_has_alg_code();
  inline void clear_has_alg_code();
  inline void set_has_key_len();
  inline void clear_has_key_len();
  inline void set_has_key_data();
  inline void clear_has_key_data();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 alg_code_;
  ::google::protobuf::int32 key_len_;
  ::std::string* key_data_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_cryptmessage_2eproto();
  friend void protobuf_AssignDesc_cryptmessage_2eproto();
  friend void protobuf_ShutdownFile_cryptmessage_2eproto();
  
  void InitAsDefaultInstance();
  static CryptAlgInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CryptAlgType : public ::google::protobuf::Message {
 public:
  CryptAlgType();
  virtual ~CryptAlgType();
  
  CryptAlgType(const CryptAlgType& from);
  
  inline CryptAlgType& operator=(const CryptAlgType& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CryptAlgType& default_instance();
  
  void Swap(CryptAlgType* other);
  
  // implements Message ----------------------------------------------
  
  CryptAlgType* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CryptAlgType& from);
  void MergeFrom(const CryptAlgType& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // required .isafetec.CryptAlgInfo crypt = 2;
  inline bool has_crypt() const;
  inline void clear_crypt();
  static const int kCryptFieldNumber = 2;
  inline const ::isafetec::CryptAlgInfo& crypt() const;
  inline ::isafetec::CryptAlgInfo* mutable_crypt();
  inline ::isafetec::CryptAlgInfo* release_crypt();
  
  // @@protoc_insertion_point(class_scope:isafetec.CryptAlgType)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_crypt();
  inline void clear_has_crypt();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::isafetec::CryptAlgInfo* crypt_;
  ::google::protobuf::int32 type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_cryptmessage_2eproto();
  friend void protobuf_AssignDesc_cryptmessage_2eproto();
  friend void protobuf_ShutdownFile_cryptmessage_2eproto();
  
  void InitAsDefaultInstance();
  static CryptAlgType* default_instance_;
};
// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace isafetec

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_cryptmessage_2eproto__INCLUDED
