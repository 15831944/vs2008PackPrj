// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: logmessage.proto

#ifndef PROTOBUF_logmessage_2eproto__INCLUDED
#define PROTOBUF_logmessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "cmmmessage.pb.h"
// @@protoc_insertion_point(includes)

namespace isafetec {

// Internal implementation detail -- do not call these.
void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
void protobuf_AssignDesc_logmessage_2eproto();
void protobuf_ShutdownFile_logmessage_2eproto();

class SelectNode;
class SelectSQL;
class UrlLog;
class UrlLogList;
class ProcessLog;
class ProcessLogList;
class ScreenLog;
class ScreenLogList;
class FileOperatorLog;
class FileOperatorLogList;
class NetStreamLog;
class NetStreamLogList;
class EquipIdleTimeLog;
class EquipIdleTimeLogList;
class MailLog;
class MailLogList;
class PrintLog;
class PrintLogList;
class DeviceAttachLog;
class DeviceAttachLogList;
class EquipLogonLog;
class EquipLogonLogList;
class AlarmMsg;
class AlarmMsgList;

enum PC_LOGON_EVENT {
  PC_WIN_LOGON = 0,
  PC_WIN_LOGOFF = 1
};
LIBPROTOBUF_EXPORT bool PC_LOGON_EVENT_IsValid(int value);
const PC_LOGON_EVENT PC_LOGON_EVENT_MIN = PC_WIN_LOGON;
const PC_LOGON_EVENT PC_LOGON_EVENT_MAX = PC_WIN_LOGOFF;
const int PC_LOGON_EVENT_ARRAYSIZE = PC_LOGON_EVENT_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* PC_LOGON_EVENT_descriptor();
inline const ::std::string& PC_LOGON_EVENT_Name(PC_LOGON_EVENT value) {
  return ::google::protobuf::internal::NameOfEnum(
    PC_LOGON_EVENT_descriptor(), value);
}
inline bool PC_LOGON_EVENT_Parse(
    const ::std::string& name, PC_LOGON_EVENT* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PC_LOGON_EVENT>(
    PC_LOGON_EVENT_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOBUF_EXPORT SelectNode : public ::google::protobuf::Message {
 public:
  SelectNode();
  virtual ~SelectNode();
  
  SelectNode(const SelectNode& from);
  
  inline SelectNode& operator=(const SelectNode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectNode& default_instance();
  
  void Swap(SelectNode* other);
  
  // implements Message ----------------------------------------------
  
  SelectNode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectNode& from);
  void MergeFrom(const SelectNode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string colName = 1;
  inline bool has_colname() const;
  inline void clear_colname();
  static const int kColNameFieldNumber = 1;
  inline const ::std::string& colname() const;
  inline void set_colname(const ::std::string& value);
  inline void set_colname(const char* value);
  inline void set_colname(const char* value, size_t size);
  inline ::std::string* mutable_colname();
  inline ::std::string* release_colname();
  
  // optional int32 colWidth = 2;
  inline bool has_colwidth() const;
  inline void clear_colwidth();
  static const int kColWidthFieldNumber = 2;
  inline ::google::protobuf::int32 colwidth() const;
  inline void set_colwidth(::google::protobuf::int32 value);
  
  // optional int32 showCol = 3;
  inline bool has_showcol() const;
  inline void clear_showcol();
  static const int kShowColFieldNumber = 3;
  inline ::google::protobuf::int32 showcol() const;
  inline void set_showcol(::google::protobuf::int32 value);
  
  // optional string dbColName = 4;
  inline bool has_dbcolname() const;
  inline void clear_dbcolname();
  static const int kDbColNameFieldNumber = 4;
  inline const ::std::string& dbcolname() const;
  inline void set_dbcolname(const ::std::string& value);
  inline void set_dbcolname(const char* value);
  inline void set_dbcolname(const char* value, size_t size);
  inline ::std::string* mutable_dbcolname();
  inline ::std::string* release_dbcolname();
  
  // optional int32 colInt = 5;
  inline bool has_colint() const;
  inline void clear_colint();
  static const int kColIntFieldNumber = 5;
  inline ::google::protobuf::int32 colint() const;
  inline void set_colint(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.SelectNode)
 private:
  inline void set_has_colname();
  inline void clear_has_colname();
  inline void set_has_colwidth();
  inline void clear_has_colwidth();
  inline void set_has_showcol();
  inline void clear_has_showcol();
  inline void set_has_dbcolname();
  inline void clear_has_dbcolname();
  inline void set_has_colint();
  inline void clear_has_colint();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* colname_;
  ::google::protobuf::int32 colwidth_;
  ::google::protobuf::int32 showcol_;
  ::std::string* dbcolname_;
  ::google::protobuf::int32 colint_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static SelectNode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT SelectSQL : public ::google::protobuf::Message {
 public:
  SelectSQL();
  virtual ~SelectSQL();
  
  SelectSQL(const SelectSQL& from);
  
  inline SelectSQL& operator=(const SelectSQL& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SelectSQL& default_instance();
  
  void Swap(SelectSQL* other);
  
  // implements Message ----------------------------------------------
  
  SelectSQL* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SelectSQL& from);
  void MergeFrom(const SelectSQL& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string dbTableName = 1;
  inline bool has_dbtablename() const;
  inline void clear_dbtablename();
  static const int kDbTableNameFieldNumber = 1;
  inline const ::std::string& dbtablename() const;
  inline void set_dbtablename(const ::std::string& value);
  inline void set_dbtablename(const char* value);
  inline void set_dbtablename(const char* value, size_t size);
  inline ::std::string* mutable_dbtablename();
  inline ::std::string* release_dbtablename();
  
  // repeated .isafetec.SelectNode SelectNodelist = 2;
  inline int selectnodelist_size() const;
  inline void clear_selectnodelist();
  static const int kSelectNodelistFieldNumber = 2;
  inline const ::isafetec::SelectNode& selectnodelist(int index) const;
  inline ::isafetec::SelectNode* mutable_selectnodelist(int index);
  inline ::isafetec::SelectNode* SelectSQL::selectnodelist_ReleaseAt(int index); 
  inline void SelectSQL::selectnodelist_RemoveAt(int index); 
  inline ::isafetec::SelectNode* add_selectnodelist();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::SelectNode >&
      selectnodelist() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::SelectNode >*
      mutable_selectnodelist();
  
  // optional int32 logs_type = 3;
  inline bool has_logs_type() const;
  inline void clear_logs_type();
  static const int kLogsTypeFieldNumber = 3;
  inline ::google::protobuf::int32 logs_type() const;
  inline void set_logs_type(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.SelectSQL)
 private:
  inline void set_has_dbtablename();
  inline void clear_has_dbtablename();
  inline void set_has_logs_type();
  inline void clear_has_logs_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* dbtablename_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::SelectNode > selectnodelist_;
  ::google::protobuf::int32 logs_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static SelectSQL* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT UrlLog : public ::google::protobuf::Message {
 public:
  UrlLog();
  virtual ~UrlLog();
  
  UrlLog(const UrlLog& from);
  
  inline UrlLog& operator=(const UrlLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrlLog& default_instance();
  
  void Swap(UrlLog* other);
  
  // implements Message ----------------------------------------------
  
  UrlLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UrlLog& from);
  void MergeFrom(const UrlLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional string webstation = 7;
  inline bool has_webstation() const;
  inline void clear_webstation();
  static const int kWebstationFieldNumber = 7;
  inline const ::std::string& webstation() const;
  inline void set_webstation(const ::std::string& value);
  inline void set_webstation(const char* value);
  inline void set_webstation(const char* value, size_t size);
  inline ::std::string* mutable_webstation();
  inline ::std::string* release_webstation();
  
  // optional string url = 8;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 8;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  
  // optional double time = 9;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 9;
  inline double time() const;
  inline void set_time(double value);
  
  // optional string title = 10;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 10;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // optional int32 datelen = 11;
  inline bool has_datelen() const;
  inline void clear_datelen();
  static const int kDatelenFieldNumber = 11;
  inline ::google::protobuf::int32 datelen() const;
  inline void set_datelen(::google::protobuf::int32 value);
  
  // optional int32 allowed = 12;
  inline bool has_allowed() const;
  inline void clear_allowed();
  static const int kAllowedFieldNumber = 12;
  inline ::google::protobuf::int32 allowed() const;
  inline void set_allowed(::google::protobuf::int32 value);
  
  // optional bool need_alarm = 13;
  inline bool has_need_alarm() const;
  inline void clear_need_alarm();
  static const int kNeedAlarmFieldNumber = 13;
  inline bool need_alarm() const;
  inline void set_need_alarm(bool value);
  
  // @@protoc_insertion_point(class_scope:isafetec.UrlLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_webstation();
  inline void clear_has_webstation();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_datelen();
  inline void clear_has_datelen();
  inline void set_has_allowed();
  inline void clear_has_allowed();
  inline void set_has_need_alarm();
  inline void clear_has_need_alarm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::std::string* host_;
  ::std::string* webstation_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 datelen_;
  ::std::string* url_;
  double time_;
  ::std::string* title_;
  ::google::protobuf::int32 allowed_;
  bool need_alarm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static UrlLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT UrlLogList : public ::google::protobuf::Message {
 public:
  UrlLogList();
  virtual ~UrlLogList();
  
  UrlLogList(const UrlLogList& from);
  
  inline UrlLogList& operator=(const UrlLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const UrlLogList& default_instance();
  
  void Swap(UrlLogList* other);
  
  // implements Message ----------------------------------------------
  
  UrlLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UrlLogList& from);
  void MergeFrom(const UrlLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.UrlLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::UrlLog& list(int index) const;
  inline ::isafetec::UrlLog* mutable_list(int index);
  inline ::isafetec::UrlLog* UrlLogList::list_ReleaseAt(int index); 
  inline void UrlLogList::list_RemoveAt(int index); 
  inline ::isafetec::UrlLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::UrlLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::UrlLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.UrlLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::UrlLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static UrlLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ProcessLog : public ::google::protobuf::Message {
 public:
  ProcessLog();
  virtual ~ProcessLog();
  
  ProcessLog(const ProcessLog& from);
  
  inline ProcessLog& operator=(const ProcessLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessLog& default_instance();
  
  void Swap(ProcessLog* other);
  
  // implements Message ----------------------------------------------
  
  ProcessLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProcessLog& from);
  void MergeFrom(const ProcessLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional int32 pid = 8;
  inline bool has_pid() const;
  inline void clear_pid();
  static const int kPidFieldNumber = 8;
  inline ::google::protobuf::int32 pid() const;
  inline void set_pid(::google::protobuf::int32 value);
  
  // optional string path = 9;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 9;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // optional string title = 10;
  inline bool has_title() const;
  inline void clear_title();
  static const int kTitleFieldNumber = 10;
  inline const ::std::string& title() const;
  inline void set_title(const ::std::string& value);
  inline void set_title(const char* value);
  inline void set_title(const char* value, size_t size);
  inline ::std::string* mutable_title();
  inline ::std::string* release_title();
  
  // optional double end_time = 11;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 11;
  inline double end_time() const;
  inline void set_end_time(double value);
  
  // optional string corp = 12;
  inline bool has_corp() const;
  inline void clear_corp();
  static const int kCorpFieldNumber = 12;
  inline const ::std::string& corp() const;
  inline void set_corp(const ::std::string& value);
  inline void set_corp(const char* value);
  inline void set_corp(const char* value, size_t size);
  inline ::std::string* mutable_corp();
  inline ::std::string* release_corp();
  
  // optional int32 allowed = 13;
  inline bool has_allowed() const;
  inline void clear_allowed();
  static const int kAllowedFieldNumber = 13;
  inline ::google::protobuf::int32 allowed() const;
  inline void set_allowed(::google::protobuf::int32 value);
  
  // optional bool need_alarm = 14;
  inline bool has_need_alarm() const;
  inline void clear_need_alarm();
  static const int kNeedAlarmFieldNumber = 14;
  inline bool need_alarm() const;
  inline void set_need_alarm(bool value);
  
  // @@protoc_insertion_point(class_scope:isafetec.ProcessLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_pid();
  inline void clear_has_pid();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_title();
  inline void clear_has_title();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_corp();
  inline void clear_has_corp();
  inline void set_has_allowed();
  inline void clear_has_allowed();
  inline void set_has_need_alarm();
  inline void clear_has_need_alarm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 pid_;
  ::std::string* host_;
  double time_;
  ::std::string* path_;
  ::std::string* title_;
  double end_time_;
  ::std::string* corp_;
  ::google::protobuf::int32 allowed_;
  bool need_alarm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static ProcessLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ProcessLogList : public ::google::protobuf::Message {
 public:
  ProcessLogList();
  virtual ~ProcessLogList();
  
  ProcessLogList(const ProcessLogList& from);
  
  inline ProcessLogList& operator=(const ProcessLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ProcessLogList& default_instance();
  
  void Swap(ProcessLogList* other);
  
  // implements Message ----------------------------------------------
  
  ProcessLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ProcessLogList& from);
  void MergeFrom(const ProcessLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.ProcessLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::ProcessLog& list(int index) const;
  inline ::isafetec::ProcessLog* mutable_list(int index);
  inline ::isafetec::ProcessLog* ProcessLogList::list_ReleaseAt(int index); 
  inline void ProcessLogList::list_RemoveAt(int index); 
  inline ::isafetec::ProcessLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::ProcessLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::ProcessLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.ProcessLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::ProcessLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static ProcessLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ScreenLog : public ::google::protobuf::Message {
 public:
  ScreenLog();
  virtual ~ScreenLog();
  
  ScreenLog(const ScreenLog& from);
  
  inline ScreenLog& operator=(const ScreenLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScreenLog& default_instance();
  
  void Swap(ScreenLog* other);
  
  // implements Message ----------------------------------------------
  
  ScreenLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScreenLog& from);
  void MergeFrom(const ScreenLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional int32 with = 8;
  inline bool has_with() const;
  inline void clear_with();
  static const int kWithFieldNumber = 8;
  inline ::google::protobuf::int32 with() const;
  inline void set_with(::google::protobuf::int32 value);
  
  // optional int32 height = 9;
  inline bool has_height() const;
  inline void clear_height();
  static const int kHeightFieldNumber = 9;
  inline ::google::protobuf::int32 height() const;
  inline void set_height(::google::protobuf::int32 value);
  
  // optional .isafetec.SCREEN_SAVE_TYPE save_type = 10;
  inline bool has_save_type() const;
  inline void clear_save_type();
  static const int kSaveTypeFieldNumber = 10;
  inline isafetec::SCREEN_SAVE_TYPE save_type() const;
  inline void set_save_type(isafetec::SCREEN_SAVE_TYPE value);
  
  // optional int32 file_size = 11;
  inline bool has_file_size() const;
  inline void clear_file_size();
  static const int kFileSizeFieldNumber = 11;
  inline ::google::protobuf::int32 file_size() const;
  inline void set_file_size(::google::protobuf::int32 value);
  
  // optional string file_Path = 12;
  inline bool has_file_path() const;
  inline void clear_file_path();
  static const int kFilePathFieldNumber = 12;
  inline const ::std::string& file_path() const;
  inline void set_file_path(const ::std::string& value);
  inline void set_file_path(const char* value);
  inline void set_file_path(const char* value, size_t size);
  inline ::std::string* mutable_file_path();
  inline ::std::string* release_file_path();
  
  // optional string root_path = 13;
  inline bool has_root_path() const;
  inline void clear_root_path();
  static const int kRootPathFieldNumber = 13;
  inline const ::std::string& root_path() const;
  inline void set_root_path(const ::std::string& value);
  inline void set_root_path(const char* value);
  inline void set_root_path(const char* value, size_t size);
  inline ::std::string* mutable_root_path();
  inline ::std::string* release_root_path();
  
  // @@protoc_insertion_point(class_scope:isafetec.ScreenLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_with();
  inline void clear_has_with();
  inline void set_has_height();
  inline void clear_has_height();
  inline void set_has_save_type();
  inline void clear_has_save_type();
  inline void set_has_file_size();
  inline void clear_has_file_size();
  inline void set_has_file_path();
  inline void clear_has_file_path();
  inline void set_has_root_path();
  inline void clear_has_root_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 with_;
  ::std::string* host_;
  double time_;
  ::google::protobuf::int32 height_;
  int save_type_;
  ::std::string* file_path_;
  ::std::string* root_path_;
  ::google::protobuf::int32 file_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static ScreenLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ScreenLogList : public ::google::protobuf::Message {
 public:
  ScreenLogList();
  virtual ~ScreenLogList();
  
  ScreenLogList(const ScreenLogList& from);
  
  inline ScreenLogList& operator=(const ScreenLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScreenLogList& default_instance();
  
  void Swap(ScreenLogList* other);
  
  // implements Message ----------------------------------------------
  
  ScreenLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScreenLogList& from);
  void MergeFrom(const ScreenLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.ScreenLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::ScreenLog& list(int index) const;
  inline ::isafetec::ScreenLog* mutable_list(int index);
  inline ::isafetec::ScreenLog* ScreenLogList::list_ReleaseAt(int index); 
  inline void ScreenLogList::list_RemoveAt(int index); 
  inline ::isafetec::ScreenLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::ScreenLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::ScreenLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.ScreenLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::ScreenLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static ScreenLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT FileOperatorLog : public ::google::protobuf::Message {
 public:
  FileOperatorLog();
  virtual ~FileOperatorLog();
  
  FileOperatorLog(const FileOperatorLog& from);
  
  inline FileOperatorLog& operator=(const FileOperatorLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileOperatorLog& default_instance();
  
  void Swap(FileOperatorLog* other);
  
  // implements Message ----------------------------------------------
  
  FileOperatorLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileOperatorLog& from);
  void MergeFrom(const FileOperatorLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional string process_name = 8;
  inline bool has_process_name() const;
  inline void clear_process_name();
  static const int kProcessNameFieldNumber = 8;
  inline const ::std::string& process_name() const;
  inline void set_process_name(const ::std::string& value);
  inline void set_process_name(const char* value);
  inline void set_process_name(const char* value, size_t size);
  inline ::std::string* mutable_process_name();
  inline ::std::string* release_process_name();
  
  // optional string process_title = 9;
  inline bool has_process_title() const;
  inline void clear_process_title();
  static const int kProcessTitleFieldNumber = 9;
  inline const ::std::string& process_title() const;
  inline void set_process_title(const ::std::string& value);
  inline void set_process_title(const char* value);
  inline void set_process_title(const char* value, size_t size);
  inline ::std::string* mutable_process_title();
  inline ::std::string* release_process_title();
  
  // optional int32 op = 10;
  inline bool has_op() const;
  inline void clear_op();
  static const int kOpFieldNumber = 10;
  inline ::google::protobuf::int32 op() const;
  inline void set_op(::google::protobuf::int32 value);
  
  // optional int32 allowed = 11;
  inline bool has_allowed() const;
  inline void clear_allowed();
  static const int kAllowedFieldNumber = 11;
  inline ::google::protobuf::int32 allowed() const;
  inline void set_allowed(::google::protobuf::int32 value);
  
  // optional string source_path = 12;
  inline bool has_source_path() const;
  inline void clear_source_path();
  static const int kSourcePathFieldNumber = 12;
  inline const ::std::string& source_path() const;
  inline void set_source_path(const ::std::string& value);
  inline void set_source_path(const char* value);
  inline void set_source_path(const char* value, size_t size);
  inline ::std::string* mutable_source_path();
  inline ::std::string* release_source_path();
  
  // optional int32 source_device_Type = 13;
  inline bool has_source_device_type() const;
  inline void clear_source_device_type();
  static const int kSourceDeviceTypeFieldNumber = 13;
  inline ::google::protobuf::int32 source_device_type() const;
  inline void set_source_device_type(::google::protobuf::int32 value);
  
  // optional string dest_path = 14;
  inline bool has_dest_path() const;
  inline void clear_dest_path();
  static const int kDestPathFieldNumber = 14;
  inline const ::std::string& dest_path() const;
  inline void set_dest_path(const ::std::string& value);
  inline void set_dest_path(const char* value);
  inline void set_dest_path(const char* value, size_t size);
  inline ::std::string* mutable_dest_path();
  inline ::std::string* release_dest_path();
  
  // optional int32 dest_device_type = 15;
  inline bool has_dest_device_type() const;
  inline void clear_dest_device_type();
  static const int kDestDeviceTypeFieldNumber = 15;
  inline ::google::protobuf::int32 dest_device_type() const;
  inline void set_dest_device_type(::google::protobuf::int32 value);
  
  // optional string remark = 16;
  inline bool has_remark() const;
  inline void clear_remark();
  static const int kRemarkFieldNumber = 16;
  inline const ::std::string& remark() const;
  inline void set_remark(const ::std::string& value);
  inline void set_remark(const char* value);
  inline void set_remark(const char* value, size_t size);
  inline ::std::string* mutable_remark();
  inline ::std::string* release_remark();
  
  // @@protoc_insertion_point(class_scope:isafetec.FileOperatorLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_process_name();
  inline void clear_has_process_name();
  inline void set_has_process_title();
  inline void clear_has_process_title();
  inline void set_has_op();
  inline void clear_has_op();
  inline void set_has_allowed();
  inline void clear_has_allowed();
  inline void set_has_source_path();
  inline void clear_has_source_path();
  inline void set_has_source_device_type();
  inline void clear_has_source_device_type();
  inline void set_has_dest_path();
  inline void clear_has_dest_path();
  inline void set_has_dest_device_type();
  inline void clear_has_dest_device_type();
  inline void set_has_remark();
  inline void clear_has_remark();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::std::string* host_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 op_;
  double time_;
  ::std::string* process_name_;
  ::std::string* process_title_;
  ::std::string* source_path_;
  ::google::protobuf::int32 allowed_;
  ::google::protobuf::int32 source_device_type_;
  ::std::string* dest_path_;
  ::std::string* remark_;
  ::google::protobuf::int32 dest_device_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(16 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static FileOperatorLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT FileOperatorLogList : public ::google::protobuf::Message {
 public:
  FileOperatorLogList();
  virtual ~FileOperatorLogList();
  
  FileOperatorLogList(const FileOperatorLogList& from);
  
  inline FileOperatorLogList& operator=(const FileOperatorLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FileOperatorLogList& default_instance();
  
  void Swap(FileOperatorLogList* other);
  
  // implements Message ----------------------------------------------
  
  FileOperatorLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FileOperatorLogList& from);
  void MergeFrom(const FileOperatorLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.FileOperatorLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::FileOperatorLog& list(int index) const;
  inline ::isafetec::FileOperatorLog* mutable_list(int index);
  inline ::isafetec::FileOperatorLog* FileOperatorLogList::list_ReleaseAt(int index); 
  inline void FileOperatorLogList::list_RemoveAt(int index); 
  inline ::isafetec::FileOperatorLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::FileOperatorLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::FileOperatorLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.FileOperatorLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::FileOperatorLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static FileOperatorLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT NetStreamLog : public ::google::protobuf::Message {
 public:
  NetStreamLog();
  virtual ~NetStreamLog();
  
  NetStreamLog(const NetStreamLog& from);
  
  inline NetStreamLog& operator=(const NetStreamLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetStreamLog& default_instance();
  
  void Swap(NetStreamLog* other);
  
  // implements Message ----------------------------------------------
  
  NetStreamLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetStreamLog& from);
  void MergeFrom(const NetStreamLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional double etime = 8;
  inline bool has_etime() const;
  inline void clear_etime();
  static const int kEtimeFieldNumber = 8;
  inline double etime() const;
  inline void set_etime(double value);
  
  // optional uint32 interval = 9;
  inline bool has_interval() const;
  inline void clear_interval();
  static const int kIntervalFieldNumber = 9;
  inline ::google::protobuf::uint32 interval() const;
  inline void set_interval(::google::protobuf::uint32 value);
  
  // optional uint32 type = 10;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 10;
  inline ::google::protobuf::uint32 type() const;
  inline void set_type(::google::protobuf::uint32 value);
  
  // optional uint32 direction = 11;
  inline bool has_direction() const;
  inline void clear_direction();
  static const int kDirectionFieldNumber = 11;
  inline ::google::protobuf::uint32 direction() const;
  inline void set_direction(::google::protobuf::uint32 value);
  
  // optional uint32 data_len = 12;
  inline bool has_data_len() const;
  inline void clear_data_len();
  static const int kDataLenFieldNumber = 12;
  inline ::google::protobuf::uint32 data_len() const;
  inline void set_data_len(::google::protobuf::uint32 value);
  
  // optional uint32 src_port = 13;
  inline bool has_src_port() const;
  inline void clear_src_port();
  static const int kSrcPortFieldNumber = 13;
  inline ::google::protobuf::uint32 src_port() const;
  inline void set_src_port(::google::protobuf::uint32 value);
  
  // optional uint32 dest_port = 14;
  inline bool has_dest_port() const;
  inline void clear_dest_port();
  static const int kDestPortFieldNumber = 14;
  inline ::google::protobuf::uint32 dest_port() const;
  inline void set_dest_port(::google::protobuf::uint32 value);
  
  // optional string src_ip = 15;
  inline bool has_src_ip() const;
  inline void clear_src_ip();
  static const int kSrcIpFieldNumber = 15;
  inline const ::std::string& src_ip() const;
  inline void set_src_ip(const ::std::string& value);
  inline void set_src_ip(const char* value);
  inline void set_src_ip(const char* value, size_t size);
  inline ::std::string* mutable_src_ip();
  inline ::std::string* release_src_ip();
  
  // optional string dest_ip = 16;
  inline bool has_dest_ip() const;
  inline void clear_dest_ip();
  static const int kDestIpFieldNumber = 16;
  inline const ::std::string& dest_ip() const;
  inline void set_dest_ip(const ::std::string& value);
  inline void set_dest_ip(const char* value);
  inline void set_dest_ip(const char* value, size_t size);
  inline ::std::string* mutable_dest_ip();
  inline ::std::string* release_dest_ip();
  
  // optional string process_path = 17;
  inline bool has_process_path() const;
  inline void clear_process_path();
  static const int kProcessPathFieldNumber = 17;
  inline const ::std::string& process_path() const;
  inline void set_process_path(const ::std::string& value);
  inline void set_process_path(const char* value);
  inline void set_process_path(const char* value, size_t size);
  inline ::std::string* mutable_process_path();
  inline ::std::string* release_process_path();
  
  // optional bool need_alarm = 18;
  inline bool has_need_alarm() const;
  inline void clear_need_alarm();
  static const int kNeedAlarmFieldNumber = 18;
  inline bool need_alarm() const;
  inline void set_need_alarm(bool value);
  
  // @@protoc_insertion_point(class_scope:isafetec.NetStreamLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_etime();
  inline void clear_has_etime();
  inline void set_has_interval();
  inline void clear_has_interval();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_direction();
  inline void clear_has_direction();
  inline void set_has_data_len();
  inline void clear_has_data_len();
  inline void set_has_src_port();
  inline void clear_has_src_port();
  inline void set_has_dest_port();
  inline void clear_has_dest_port();
  inline void set_has_src_ip();
  inline void clear_has_src_ip();
  inline void set_has_dest_ip();
  inline void clear_has_dest_ip();
  inline void set_has_process_path();
  inline void clear_has_process_path();
  inline void set_has_need_alarm();
  inline void clear_has_need_alarm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::std::string* host_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::uint32 interval_;
  double time_;
  double etime_;
  ::google::protobuf::uint32 type_;
  ::google::protobuf::uint32 direction_;
  ::google::protobuf::uint32 data_len_;
  ::google::protobuf::uint32 src_port_;
  ::std::string* src_ip_;
  ::std::string* dest_ip_;
  ::google::protobuf::uint32 dest_port_;
  bool need_alarm_;
  ::std::string* process_path_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static NetStreamLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT NetStreamLogList : public ::google::protobuf::Message {
 public:
  NetStreamLogList();
  virtual ~NetStreamLogList();
  
  NetStreamLogList(const NetStreamLogList& from);
  
  inline NetStreamLogList& operator=(const NetStreamLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const NetStreamLogList& default_instance();
  
  void Swap(NetStreamLogList* other);
  
  // implements Message ----------------------------------------------
  
  NetStreamLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NetStreamLogList& from);
  void MergeFrom(const NetStreamLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.NetStreamLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::NetStreamLog& list(int index) const;
  inline ::isafetec::NetStreamLog* mutable_list(int index);
  inline ::isafetec::NetStreamLog* NetStreamLogList::list_ReleaseAt(int index); 
  inline void NetStreamLogList::list_RemoveAt(int index); 
  inline ::isafetec::NetStreamLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::NetStreamLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::NetStreamLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.NetStreamLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::NetStreamLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static NetStreamLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT EquipIdleTimeLog : public ::google::protobuf::Message {
 public:
  EquipIdleTimeLog();
  virtual ~EquipIdleTimeLog();
  
  EquipIdleTimeLog(const EquipIdleTimeLog& from);
  
  inline EquipIdleTimeLog& operator=(const EquipIdleTimeLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipIdleTimeLog& default_instance();
  
  void Swap(EquipIdleTimeLog* other);
  
  // implements Message ----------------------------------------------
  
  EquipIdleTimeLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipIdleTimeLog& from);
  void MergeFrom(const EquipIdleTimeLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional double btime = 8;
  inline bool has_btime() const;
  inline void clear_btime();
  static const int kBtimeFieldNumber = 8;
  inline double btime() const;
  inline void set_btime(double value);
  
  // optional double etime = 9;
  inline bool has_etime() const;
  inline void clear_etime();
  static const int kEtimeFieldNumber = 9;
  inline double etime() const;
  inline void set_etime(double value);
  
  // optional int32 idleminute = 10;
  inline bool has_idleminute() const;
  inline void clear_idleminute();
  static const int kIdleminuteFieldNumber = 10;
  inline ::google::protobuf::int32 idleminute() const;
  inline void set_idleminute(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.EquipIdleTimeLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_btime();
  inline void clear_has_btime();
  inline void set_has_etime();
  inline void clear_has_etime();
  inline void set_has_idleminute();
  inline void clear_has_idleminute();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::std::string* host_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 idleminute_;
  double time_;
  double btime_;
  double etime_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static EquipIdleTimeLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT EquipIdleTimeLogList : public ::google::protobuf::Message {
 public:
  EquipIdleTimeLogList();
  virtual ~EquipIdleTimeLogList();
  
  EquipIdleTimeLogList(const EquipIdleTimeLogList& from);
  
  inline EquipIdleTimeLogList& operator=(const EquipIdleTimeLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipIdleTimeLogList& default_instance();
  
  void Swap(EquipIdleTimeLogList* other);
  
  // implements Message ----------------------------------------------
  
  EquipIdleTimeLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipIdleTimeLogList& from);
  void MergeFrom(const EquipIdleTimeLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.EquipIdleTimeLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::EquipIdleTimeLog& list(int index) const;
  inline ::isafetec::EquipIdleTimeLog* mutable_list(int index);
  inline ::isafetec::EquipIdleTimeLog* EquipIdleTimeLogList::list_ReleaseAt(int index); 
  inline void EquipIdleTimeLogList::list_RemoveAt(int index); 
  inline ::isafetec::EquipIdleTimeLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::EquipIdleTimeLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::EquipIdleTimeLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.EquipIdleTimeLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::EquipIdleTimeLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static EquipIdleTimeLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT MailLog : public ::google::protobuf::Message {
 public:
  MailLog();
  virtual ~MailLog();
  
  MailLog(const MailLog& from);
  
  inline MailLog& operator=(const MailLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailLog& default_instance();
  
  void Swap(MailLog* other);
  
  // implements Message ----------------------------------------------
  
  MailLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailLog& from);
  void MergeFrom(const MailLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional int32 web_mail = 8;
  inline bool has_web_mail() const;
  inline void clear_web_mail();
  static const int kWebMailFieldNumber = 8;
  inline ::google::protobuf::int32 web_mail() const;
  inline void set_web_mail(::google::protobuf::int32 value);
  
  // optional string from = 9;
  inline bool has_from() const;
  inline void clear_from();
  static const int kFromFieldNumber = 9;
  inline const ::std::string& from() const;
  inline void set_from(const ::std::string& value);
  inline void set_from(const char* value);
  inline void set_from(const char* value, size_t size);
  inline ::std::string* mutable_from();
  inline ::std::string* release_from();
  
  // optional string to = 10;
  inline bool has_to() const;
  inline void clear_to();
  static const int kToFieldNumber = 10;
  inline const ::std::string& to() const;
  inline void set_to(const ::std::string& value);
  inline void set_to(const char* value);
  inline void set_to(const char* value, size_t size);
  inline ::std::string* mutable_to();
  inline ::std::string* release_to();
  
  // optional string copyto = 11;
  inline bool has_copyto() const;
  inline void clear_copyto();
  static const int kCopytoFieldNumber = 11;
  inline const ::std::string& copyto() const;
  inline void set_copyto(const ::std::string& value);
  inline void set_copyto(const char* value);
  inline void set_copyto(const char* value, size_t size);
  inline ::std::string* mutable_copyto();
  inline ::std::string* release_copyto();
  
  // optional string content = 12;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 12;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // optional int32 attachment_size = 13;
  inline bool has_attachment_size() const;
  inline void clear_attachment_size();
  static const int kAttachmentSizeFieldNumber = 13;
  inline ::google::protobuf::int32 attachment_size() const;
  inline void set_attachment_size(::google::protobuf::int32 value);
  
  // optional string attachment = 14;
  inline bool has_attachment() const;
  inline void clear_attachment();
  static const int kAttachmentFieldNumber = 14;
  inline const ::std::string& attachment() const;
  inline void set_attachment(const ::std::string& value);
  inline void set_attachment(const char* value);
  inline void set_attachment(const char* value, size_t size);
  inline ::std::string* mutable_attachment();
  inline ::std::string* release_attachment();
  
  // @@protoc_insertion_point(class_scope:isafetec.MailLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_web_mail();
  inline void clear_has_web_mail();
  inline void set_has_from();
  inline void clear_has_from();
  inline void set_has_to();
  inline void clear_has_to();
  inline void set_has_copyto();
  inline void clear_has_copyto();
  inline void set_has_content();
  inline void clear_has_content();
  inline void set_has_attachment_size();
  inline void clear_has_attachment_size();
  inline void set_has_attachment();
  inline void clear_has_attachment();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 web_mail_;
  ::std::string* host_;
  double time_;
  ::std::string* from_;
  ::std::string* to_;
  ::std::string* copyto_;
  ::std::string* content_;
  ::std::string* attachment_;
  ::google::protobuf::int32 attachment_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static MailLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT MailLogList : public ::google::protobuf::Message {
 public:
  MailLogList();
  virtual ~MailLogList();
  
  MailLogList(const MailLogList& from);
  
  inline MailLogList& operator=(const MailLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MailLogList& default_instance();
  
  void Swap(MailLogList* other);
  
  // implements Message ----------------------------------------------
  
  MailLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MailLogList& from);
  void MergeFrom(const MailLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.MailLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::MailLog& list(int index) const;
  inline ::isafetec::MailLog* mutable_list(int index);
  inline ::isafetec::MailLog* MailLogList::list_ReleaseAt(int index); 
  inline void MailLogList::list_RemoveAt(int index); 
  inline ::isafetec::MailLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::MailLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::MailLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.MailLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::MailLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static MailLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintLog : public ::google::protobuf::Message {
 public:
  PrintLog();
  virtual ~PrintLog();
  
  PrintLog(const PrintLog& from);
  
  inline PrintLog& operator=(const PrintLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintLog& default_instance();
  
  void Swap(PrintLog* other);
  
  // implements Message ----------------------------------------------
  
  PrintLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintLog& from);
  void MergeFrom(const PrintLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional string printername = 8;
  inline bool has_printername() const;
  inline void clear_printername();
  static const int kPrinternameFieldNumber = 8;
  inline const ::std::string& printername() const;
  inline void set_printername(const ::std::string& value);
  inline void set_printername(const char* value);
  inline void set_printername(const char* value, size_t size);
  inline ::std::string* mutable_printername();
  inline ::std::string* release_printername();
  
  // optional string doc_name = 9;
  inline bool has_doc_name() const;
  inline void clear_doc_name();
  static const int kDocNameFieldNumber = 9;
  inline const ::std::string& doc_name() const;
  inline void set_doc_name(const ::std::string& value);
  inline void set_doc_name(const char* value);
  inline void set_doc_name(const char* value, size_t size);
  inline ::std::string* mutable_doc_name();
  inline ::std::string* release_doc_name();
  
  // optional int32 total_page = 10;
  inline bool has_total_page() const;
  inline void clear_total_page();
  static const int kTotalPageFieldNumber = 10;
  inline ::google::protobuf::int32 total_page() const;
  inline void set_total_page(::google::protobuf::int32 value);
  
  // optional int32 double_print = 11;
  inline bool has_double_print() const;
  inline void clear_double_print();
  static const int kDoublePrintFieldNumber = 11;
  inline ::google::protobuf::int32 double_print() const;
  inline void set_double_print(::google::protobuf::int32 value);
  
  // optional int32 doc_size = 12;
  inline bool has_doc_size() const;
  inline void clear_doc_size();
  static const int kDocSizeFieldNumber = 12;
  inline ::google::protobuf::int32 doc_size() const;
  inline void set_doc_size(::google::protobuf::int32 value);
  
  // optional string page_type = 13;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 13;
  inline const ::std::string& page_type() const;
  inline void set_page_type(const ::std::string& value);
  inline void set_page_type(const char* value);
  inline void set_page_type(const char* value, size_t size);
  inline ::std::string* mutable_page_type();
  inline ::std::string* release_page_type();
  
  // optional int32 color = 14;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 14;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional int32 copies = 15;
  inline bool has_copies() const;
  inline void clear_copies();
  static const int kCopiesFieldNumber = 15;
  inline ::google::protobuf::int32 copies() const;
  inline void set_copies(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_printername();
  inline void clear_has_printername();
  inline void set_has_doc_name();
  inline void clear_has_doc_name();
  inline void set_has_total_page();
  inline void clear_has_total_page();
  inline void set_has_double_print();
  inline void clear_has_double_print();
  inline void set_has_doc_size();
  inline void clear_has_doc_size();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_copies();
  inline void clear_has_copies();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::std::string* host_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 total_page_;
  double time_;
  ::std::string* printername_;
  ::std::string* doc_name_;
  ::google::protobuf::int32 double_print_;
  ::google::protobuf::int32 doc_size_;
  ::std::string* page_type_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 copies_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(15 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintLogList : public ::google::protobuf::Message {
 public:
  PrintLogList();
  virtual ~PrintLogList();
  
  PrintLogList(const PrintLogList& from);
  
  inline PrintLogList& operator=(const PrintLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintLogList& default_instance();
  
  void Swap(PrintLogList* other);
  
  // implements Message ----------------------------------------------
  
  PrintLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintLogList& from);
  void MergeFrom(const PrintLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrintLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::PrintLog& list(int index) const;
  inline ::isafetec::PrintLog* mutable_list(int index);
  inline ::isafetec::PrintLog* PrintLogList::list_ReleaseAt(int index); 
  inline void PrintLogList::list_RemoveAt(int index); 
  inline ::isafetec::PrintLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrintLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrintLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrintLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT DeviceAttachLog : public ::google::protobuf::Message {
 public:
  DeviceAttachLog();
  virtual ~DeviceAttachLog();
  
  DeviceAttachLog(const DeviceAttachLog& from);
  
  inline DeviceAttachLog& operator=(const DeviceAttachLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceAttachLog& default_instance();
  
  void Swap(DeviceAttachLog* other);
  
  // implements Message ----------------------------------------------
  
  DeviceAttachLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceAttachLog& from);
  void MergeFrom(const DeviceAttachLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // optional int32 attach = 8;
  inline bool has_attach() const;
  inline void clear_attach();
  static const int kAttachFieldNumber = 8;
  inline ::google::protobuf::int32 attach() const;
  inline void set_attach(::google::protobuf::int32 value);
  
  // optional string device_path = 9;
  inline bool has_device_path() const;
  inline void clear_device_path();
  static const int kDevicePathFieldNumber = 9;
  inline const ::std::string& device_path() const;
  inline void set_device_path(const ::std::string& value);
  inline void set_device_path(const char* value);
  inline void set_device_path(const char* value, size_t size);
  inline ::std::string* mutable_device_path();
  inline ::std::string* release_device_path();
  
  // optional string device_name = 10;
  inline bool has_device_name() const;
  inline void clear_device_name();
  static const int kDeviceNameFieldNumber = 10;
  inline const ::std::string& device_name() const;
  inline void set_device_name(const ::std::string& value);
  inline void set_device_name(const char* value);
  inline void set_device_name(const char* value, size_t size);
  inline ::std::string* mutable_device_name();
  inline ::std::string* release_device_name();
  
  // optional string device_class = 11;
  inline bool has_device_class() const;
  inline void clear_device_class();
  static const int kDeviceClassFieldNumber = 11;
  inline const ::std::string& device_class() const;
  inline void set_device_class(const ::std::string& value);
  inline void set_device_class(const char* value);
  inline void set_device_class(const char* value, size_t size);
  inline ::std::string* mutable_device_class();
  inline ::std::string* release_device_class();
  
  // optional string device_guid = 12;
  inline bool has_device_guid() const;
  inline void clear_device_guid();
  static const int kDeviceGuidFieldNumber = 12;
  inline const ::std::string& device_guid() const;
  inline void set_device_guid(const ::std::string& value);
  inline void set_device_guid(const char* value);
  inline void set_device_guid(const char* value, size_t size);
  inline ::std::string* mutable_device_guid();
  inline ::std::string* release_device_guid();
  
  // optional bool need_alarm = 14;
  inline bool has_need_alarm() const;
  inline void clear_need_alarm();
  static const int kNeedAlarmFieldNumber = 14;
  inline bool need_alarm() const;
  inline void set_need_alarm(bool value);
  
  // @@protoc_insertion_point(class_scope:isafetec.DeviceAttachLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_attach();
  inline void clear_has_attach();
  inline void set_has_device_path();
  inline void clear_has_device_path();
  inline void set_has_device_name();
  inline void clear_has_device_name();
  inline void set_has_device_class();
  inline void clear_has_device_class();
  inline void set_has_device_guid();
  inline void clear_has_device_guid();
  inline void set_has_need_alarm();
  inline void clear_has_need_alarm();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 attach_;
  ::std::string* host_;
  double time_;
  ::std::string* device_path_;
  ::std::string* device_name_;
  ::std::string* device_class_;
  ::std::string* device_guid_;
  bool need_alarm_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static DeviceAttachLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT DeviceAttachLogList : public ::google::protobuf::Message {
 public:
  DeviceAttachLogList();
  virtual ~DeviceAttachLogList();
  
  DeviceAttachLogList(const DeviceAttachLogList& from);
  
  inline DeviceAttachLogList& operator=(const DeviceAttachLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const DeviceAttachLogList& default_instance();
  
  void Swap(DeviceAttachLogList* other);
  
  // implements Message ----------------------------------------------
  
  DeviceAttachLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const DeviceAttachLogList& from);
  void MergeFrom(const DeviceAttachLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.DeviceAttachLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::DeviceAttachLog& list(int index) const;
  inline ::isafetec::DeviceAttachLog* mutable_list(int index);
  inline ::isafetec::DeviceAttachLog* DeviceAttachLogList::list_ReleaseAt(int index); 
  inline void DeviceAttachLogList::list_RemoveAt(int index); 
  inline ::isafetec::DeviceAttachLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::DeviceAttachLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::DeviceAttachLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.DeviceAttachLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::DeviceAttachLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static DeviceAttachLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT EquipLogonLog : public ::google::protobuf::Message {
 public:
  EquipLogonLog();
  virtual ~EquipLogonLog();
  
  EquipLogonLog(const EquipLogonLog& from);
  
  inline EquipLogonLog& operator=(const EquipLogonLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipLogonLog& default_instance();
  
  void Swap(EquipLogonLog* other);
  
  // implements Message ----------------------------------------------
  
  EquipLogonLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipLogonLog& from);
  void MergeFrom(const EquipLogonLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional double pc_logon_time = 7;
  inline bool has_pc_logon_time() const;
  inline void clear_pc_logon_time();
  static const int kPcLogonTimeFieldNumber = 7;
  inline double pc_logon_time() const;
  inline void set_pc_logon_time(double value);
  
  // optional double user_logon_time = 8;
  inline bool has_user_logon_time() const;
  inline void clear_user_logon_time();
  static const int kUserLogonTimeFieldNumber = 8;
  inline double user_logon_time() const;
  inline void set_user_logon_time(double value);
  
  // optional double pc_last_shudown_time = 9;
  inline bool has_pc_last_shudown_time() const;
  inline void clear_pc_last_shudown_time();
  static const int kPcLastShudownTimeFieldNumber = 9;
  inline double pc_last_shudown_time() const;
  inline void set_pc_last_shudown_time(double value);
  
  // optional double win_logon_time = 10;
  inline bool has_win_logon_time() const;
  inline void clear_win_logon_time();
  static const int kWinLogonTimeFieldNumber = 10;
  inline double win_logon_time() const;
  inline void set_win_logon_time(double value);
  
  // optional double win_logoff_time = 11;
  inline bool has_win_logoff_time() const;
  inline void clear_win_logoff_time();
  static const int kWinLogoffTimeFieldNumber = 11;
  inline double win_logoff_time() const;
  inline void set_win_logoff_time(double value);
  
  // optional .isafetec.PC_LOGON_EVENT event = 12;
  inline bool has_event() const;
  inline void clear_event();
  static const int kEventFieldNumber = 12;
  inline isafetec::PC_LOGON_EVENT event() const;
  inline void set_event(isafetec::PC_LOGON_EVENT value);
  
  // @@protoc_insertion_point(class_scope:isafetec.EquipLogonLog)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_pc_logon_time();
  inline void clear_has_pc_logon_time();
  inline void set_has_user_logon_time();
  inline void clear_has_user_logon_time();
  inline void set_has_pc_last_shudown_time();
  inline void clear_has_pc_last_shudown_time();
  inline void set_has_win_logon_time();
  inline void clear_has_win_logon_time();
  inline void set_has_win_logoff_time();
  inline void clear_has_win_logoff_time();
  inline void set_has_event();
  inline void clear_has_event();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::std::string* host_;
  double pc_logon_time_;
  ::google::protobuf::int32 equipid_;
  int event_;
  double user_logon_time_;
  double pc_last_shudown_time_;
  double win_logon_time_;
  double win_logoff_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(12 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static EquipLogonLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT EquipLogonLogList : public ::google::protobuf::Message {
 public:
  EquipLogonLogList();
  virtual ~EquipLogonLogList();
  
  EquipLogonLogList(const EquipLogonLogList& from);
  
  inline EquipLogonLogList& operator=(const EquipLogonLogList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const EquipLogonLogList& default_instance();
  
  void Swap(EquipLogonLogList* other);
  
  // implements Message ----------------------------------------------
  
  EquipLogonLogList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const EquipLogonLogList& from);
  void MergeFrom(const EquipLogonLogList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.EquipLogonLog list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::EquipLogonLog& list(int index) const;
  inline ::isafetec::EquipLogonLog* mutable_list(int index);
  inline ::isafetec::EquipLogonLog* EquipLogonLogList::list_ReleaseAt(int index); 
  inline void EquipLogonLogList::list_RemoveAt(int index); 
  inline ::isafetec::EquipLogonLog* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::EquipLogonLog >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::EquipLogonLog >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.EquipLogonLogList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::EquipLogonLog > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static EquipLogonLogList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT AlarmMsg : public ::google::protobuf::Message {
 public:
  AlarmMsg();
  virtual ~AlarmMsg();
  
  AlarmMsg(const AlarmMsg& from);
  
  inline AlarmMsg& operator=(const AlarmMsg& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmMsg& default_instance();
  
  void Swap(AlarmMsg* other);
  
  // implements Message ----------------------------------------------
  
  AlarmMsg* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmMsg& from);
  void MergeFrom(const AlarmMsg& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 userid = 2;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 2;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 equipid = 3;
  inline bool has_equipid() const;
  inline void clear_equipid();
  static const int kEquipidFieldNumber = 3;
  inline ::google::protobuf::int32 equipid() const;
  inline void set_equipid(::google::protobuf::int32 value);
  
  // optional string winuser = 4;
  inline bool has_winuser() const;
  inline void clear_winuser();
  static const int kWinuserFieldNumber = 4;
  inline const ::std::string& winuser() const;
  inline void set_winuser(const ::std::string& value);
  inline void set_winuser(const char* value);
  inline void set_winuser(const char* value, size_t size);
  inline ::std::string* mutable_winuser();
  inline ::std::string* release_winuser();
  
  // optional string ip = 5;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 5;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string host = 6;
  inline bool has_host() const;
  inline void clear_host();
  static const int kHostFieldNumber = 6;
  inline const ::std::string& host() const;
  inline void set_host(const ::std::string& value);
  inline void set_host(const char* value);
  inline void set_host(const char* value, size_t size);
  inline ::std::string* mutable_host();
  inline ::std::string* release_host();
  
  // optional int32 type = 7;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 7;
  inline ::google::protobuf::int32 type() const;
  inline void set_type(::google::protobuf::int32 value);
  
  // optional string CreatedOn = 8;
  inline bool has_createdon() const;
  inline void clear_createdon();
  static const int kCreatedOnFieldNumber = 8;
  inline const ::std::string& createdon() const;
  inline void set_createdon(const ::std::string& value);
  inline void set_createdon(const char* value);
  inline void set_createdon(const char* value, size_t size);
  inline ::std::string* mutable_createdon();
  inline ::std::string* release_createdon();
  
  // optional string Subject = 9;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 9;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  
  // optional string Content = 10;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 10;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:isafetec.AlarmMsg)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_equipid();
  inline void clear_has_equipid();
  inline void set_has_winuser();
  inline void clear_has_winuser();
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_host();
  inline void clear_has_host();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_createdon();
  inline void clear_has_createdon();
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* winuser_;
  ::std::string* ip_;
  ::google::protobuf::int32 equipid_;
  ::google::protobuf::int32 type_;
  ::std::string* host_;
  ::std::string* createdon_;
  ::std::string* subject_;
  ::std::string* content_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmMsg* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT AlarmMsgList : public ::google::protobuf::Message {
 public:
  AlarmMsgList();
  virtual ~AlarmMsgList();
  
  AlarmMsgList(const AlarmMsgList& from);
  
  inline AlarmMsgList& operator=(const AlarmMsgList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AlarmMsgList& default_instance();
  
  void Swap(AlarmMsgList* other);
  
  // implements Message ----------------------------------------------
  
  AlarmMsgList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AlarmMsgList& from);
  void MergeFrom(const AlarmMsgList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.AlarmMsg list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::AlarmMsg& list(int index) const;
  inline ::isafetec::AlarmMsg* mutable_list(int index);
  inline ::isafetec::AlarmMsg* AlarmMsgList::list_ReleaseAt(int index); 
  inline void AlarmMsgList::list_RemoveAt(int index); 
  inline ::isafetec::AlarmMsg* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::AlarmMsg >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::AlarmMsg >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.AlarmMsgList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::AlarmMsg > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_logmessage_2eproto();
  friend void protobuf_AssignDesc_logmessage_2eproto();
  friend void protobuf_ShutdownFile_logmessage_2eproto();
  
  void InitAsDefaultInstance();
  static AlarmMsgList* default_instance_;
};
// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace isafetec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::PC_LOGON_EVENT>() {
  return isafetec::PC_LOGON_EVENT_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_logmessage_2eproto__INCLUDED
