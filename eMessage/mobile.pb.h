// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: mobile.proto

#ifndef PROTOBUF_mobile_2eproto__INCLUDED
#define PROTOBUF_mobile_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "cmmmessage.pb.h"
#include "printermessage.pb.h"
// @@protoc_insertion_point(includes)

namespace isafetec {

// Internal implementation detail -- do not call these.
void LIBPROTOBUF_EXPORT protobuf_AddDesc_mobile_2eproto();
void protobuf_AssignDesc_mobile_2eproto();
void protobuf_ShutdownFile_mobile_2eproto();

class PrtStationQRCode;
class ScanQRCodeInfo;
class MobileUserCommand;
class QRCodeBaseInfo;
class PrtStationQRCodeInfo;
class MobileOrderInfo;

enum QR_Code_Info_Type {
  QR_Info_Type_Login = 0,
  QR_Info_Type_Payment = 1
};
LIBPROTOBUF_EXPORT bool QR_Code_Info_Type_IsValid(int value);
const QR_Code_Info_Type QR_Code_Info_Type_MIN = QR_Info_Type_Login;
const QR_Code_Info_Type QR_Code_Info_Type_MAX = QR_Info_Type_Payment;
const int QR_Code_Info_Type_ARRAYSIZE = QR_Code_Info_Type_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* QR_Code_Info_Type_descriptor();
inline const ::std::string& QR_Code_Info_Type_Name(QR_Code_Info_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    QR_Code_Info_Type_descriptor(), value);
}
inline bool QR_Code_Info_Type_Parse(
    const ::std::string& name, QR_Code_Info_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<QR_Code_Info_Type>(
    QR_Code_Info_Type_descriptor(), name, value);
}
enum Pay_Type {
  Pay_Type_OnCard = 0,
  Pay_Type_WeChat = 1,
  Pay_Type_ZhiFB = 2,
  Pay_Type_NetBank = 3,
  Pay_Type_Other = 4
};
LIBPROTOBUF_EXPORT bool Pay_Type_IsValid(int value);
const Pay_Type Pay_Type_MIN = Pay_Type_OnCard;
const Pay_Type Pay_Type_MAX = Pay_Type_Other;
const int Pay_Type_ARRAYSIZE = Pay_Type_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* Pay_Type_descriptor();
inline const ::std::string& Pay_Type_Name(Pay_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Pay_Type_descriptor(), value);
}
inline bool Pay_Type_Parse(
    const ::std::string& name, Pay_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Pay_Type>(
    Pay_Type_descriptor(), name, value);
}
enum Pay_State {
  Pay_State_UnKnow = 0,
  Pay_State_Succ = 1,
  Pay_State_Wait = 2,
  Pay_State_Cancel = 3,
  Pay_State_Timeout = 4,
  Pay_State_Exceptional = 5,
  Pay_State_OrderGenFail = 6
};
LIBPROTOBUF_EXPORT bool Pay_State_IsValid(int value);
const Pay_State Pay_State_MIN = Pay_State_UnKnow;
const Pay_State Pay_State_MAX = Pay_State_OrderGenFail;
const int Pay_State_ARRAYSIZE = Pay_State_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* Pay_State_descriptor();
inline const ::std::string& Pay_State_Name(Pay_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    Pay_State_descriptor(), value);
}
inline bool Pay_State_Parse(
    const ::std::string& name, Pay_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Pay_State>(
    Pay_State_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOBUF_EXPORT PrtStationQRCode : public ::google::protobuf::Message {
 public:
  PrtStationQRCode();
  virtual ~PrtStationQRCode();
  
  PrtStationQRCode(const PrtStationQRCode& from);
  
  inline PrtStationQRCode& operator=(const PrtStationQRCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationQRCode& default_instance();
  
  void Swap(PrtStationQRCode* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationQRCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationQRCode& from);
  void MergeFrom(const PrtStationQRCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 prtStation_id = 1;
  inline bool has_prtstation_id() const;
  inline void clear_prtstation_id();
  static const int kPrtStationIdFieldNumber = 1;
  inline ::google::protobuf::int32 prtstation_id() const;
  inline void set_prtstation_id(::google::protobuf::int32 value);
  
  // optional string prtStation_ip = 2;
  inline bool has_prtstation_ip() const;
  inline void clear_prtstation_ip();
  static const int kPrtStationIpFieldNumber = 2;
  inline const ::std::string& prtstation_ip() const;
  inline void set_prtstation_ip(const ::std::string& value);
  inline void set_prtstation_ip(const char* value);
  inline void set_prtstation_ip(const char* value, size_t size);
  inline ::std::string* mutable_prtstation_ip();
  inline ::std::string* release_prtstation_ip();
  
  // optional string printer_name = 3;
  inline bool has_printer_name() const;
  inline void clear_printer_name();
  static const int kPrinterNameFieldNumber = 3;
  inline const ::std::string& printer_name() const;
  inline void set_printer_name(const ::std::string& value);
  inline void set_printer_name(const char* value);
  inline void set_printer_name(const char* value, size_t size);
  inline ::std::string* mutable_printer_name();
  inline ::std::string* release_printer_name();
  
  // optional int32 equip_Brand = 4;
  inline bool has_equip_brand() const;
  inline void clear_equip_brand();
  static const int kEquipBrandFieldNumber = 4;
  inline ::google::protobuf::int32 equip_brand() const;
  inline void set_equip_brand(::google::protobuf::int32 value);
  
  // optional string equip_Type = 5;
  inline bool has_equip_type() const;
  inline void clear_equip_type();
  static const int kEquipTypeFieldNumber = 5;
  inline const ::std::string& equip_type() const;
  inline void set_equip_type(const ::std::string& value);
  inline void set_equip_type(const char* value);
  inline void set_equip_type(const char* value, size_t size);
  inline ::std::string* mutable_equip_type();
  inline ::std::string* release_equip_type();
  
  // optional int32 equip_Paper_Type = 6;
  inline bool has_equip_paper_type() const;
  inline void clear_equip_paper_type();
  static const int kEquipPaperTypeFieldNumber = 6;
  inline ::google::protobuf::int32 equip_paper_type() const;
  inline void set_equip_paper_type(::google::protobuf::int32 value);
  
  // optional string equip_Color_Type = 7;
  inline bool has_equip_color_type() const;
  inline void clear_equip_color_type();
  static const int kEquipColorTypeFieldNumber = 7;
  inline const ::std::string& equip_color_type() const;
  inline void set_equip_color_type(const ::std::string& value);
  inline void set_equip_color_type(const char* value);
  inline void set_equip_color_type(const char* value, size_t size);
  inline ::std::string* mutable_equip_color_type();
  inline ::std::string* release_equip_color_type();
  
  // optional int32 Support_Copy = 8;
  inline bool has_support_copy() const;
  inline void clear_support_copy();
  static const int kSupportCopyFieldNumber = 8;
  inline ::google::protobuf::int32 support_copy() const;
  inline void set_support_copy(::google::protobuf::int32 value);
  
  // optional int32 Support_Fax = 9;
  inline bool has_support_fax() const;
  inline void clear_support_fax();
  static const int kSupportFaxFieldNumber = 9;
  inline ::google::protobuf::int32 support_fax() const;
  inline void set_support_fax(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationQRCode)
 private:
  inline void set_has_prtstation_id();
  inline void clear_has_prtstation_id();
  inline void set_has_prtstation_ip();
  inline void clear_has_prtstation_ip();
  inline void set_has_printer_name();
  inline void clear_has_printer_name();
  inline void set_has_equip_brand();
  inline void clear_has_equip_brand();
  inline void set_has_equip_type();
  inline void clear_has_equip_type();
  inline void set_has_equip_paper_type();
  inline void clear_has_equip_paper_type();
  inline void set_has_equip_color_type();
  inline void clear_has_equip_color_type();
  inline void set_has_support_copy();
  inline void clear_has_support_copy();
  inline void set_has_support_fax();
  inline void clear_has_support_fax();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* prtstation_ip_;
  ::google::protobuf::int32 prtstation_id_;
  ::google::protobuf::int32 equip_brand_;
  ::std::string* printer_name_;
  ::std::string* equip_type_;
  ::std::string* equip_color_type_;
  ::google::protobuf::int32 equip_paper_type_;
  ::google::protobuf::int32 support_copy_;
  ::google::protobuf::int32 support_fax_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_mobile_2eproto();
  friend void protobuf_AssignDesc_mobile_2eproto();
  friend void protobuf_ShutdownFile_mobile_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationQRCode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ScanQRCodeInfo : public ::google::protobuf::Message {
 public:
  ScanQRCodeInfo();
  virtual ~ScanQRCodeInfo();
  
  ScanQRCodeInfo(const ScanQRCodeInfo& from);
  
  inline ScanQRCodeInfo& operator=(const ScanQRCodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanQRCodeInfo& default_instance();
  
  void Swap(ScanQRCodeInfo* other);
  
  // implements Message ----------------------------------------------
  
  ScanQRCodeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScanQRCodeInfo& from);
  void MergeFrom(const ScanQRCodeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required .isafetec.PrtStationQRCode QR_Code = 1;
  inline bool has_qr_code() const;
  inline void clear_qr_code();
  static const int kQRCodeFieldNumber = 1;
  inline const ::isafetec::PrtStationQRCode& qr_code() const;
  inline ::isafetec::PrtStationQRCode* mutable_qr_code();
  inline ::isafetec::PrtStationQRCode* release_qr_code();
  
  // optional string scan_Time = 2;
  inline bool has_scan_time() const;
  inline void clear_scan_time();
  static const int kScanTimeFieldNumber = 2;
  inline const ::std::string& scan_time() const;
  inline void set_scan_time(const ::std::string& value);
  inline void set_scan_time(const char* value);
  inline void set_scan_time(const char* value, size_t size);
  inline ::std::string* mutable_scan_time();
  inline ::std::string* release_scan_time();
  
  // optional string scan_Dev_Type = 3;
  inline bool has_scan_dev_type() const;
  inline void clear_scan_dev_type();
  static const int kScanDevTypeFieldNumber = 3;
  inline const ::std::string& scan_dev_type() const;
  inline void set_scan_dev_type(const ::std::string& value);
  inline void set_scan_dev_type(const char* value);
  inline void set_scan_dev_type(const char* value, size_t size);
  inline ::std::string* mutable_scan_dev_type();
  inline ::std::string* release_scan_dev_type();
  
  // optional string scan_App_Type = 4;
  inline bool has_scan_app_type() const;
  inline void clear_scan_app_type();
  static const int kScanAppTypeFieldNumber = 4;
  inline const ::std::string& scan_app_type() const;
  inline void set_scan_app_type(const ::std::string& value);
  inline void set_scan_app_type(const char* value);
  inline void set_scan_app_type(const char* value, size_t size);
  inline ::std::string* mutable_scan_app_type();
  inline ::std::string* release_scan_app_type();
  
  // optional string userName = 5;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 5;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  
  // optional string userPwd = 6;
  inline bool has_userpwd() const;
  inline void clear_userpwd();
  static const int kUserPwdFieldNumber = 6;
  inline const ::std::string& userpwd() const;
  inline void set_userpwd(const ::std::string& value);
  inline void set_userpwd(const char* value);
  inline void set_userpwd(const char* value, size_t size);
  inline ::std::string* mutable_userpwd();
  inline ::std::string* release_userpwd();
  
  // @@protoc_insertion_point(class_scope:isafetec.ScanQRCodeInfo)
 private:
  inline void set_has_qr_code();
  inline void clear_has_qr_code();
  inline void set_has_scan_time();
  inline void clear_has_scan_time();
  inline void set_has_scan_dev_type();
  inline void clear_has_scan_dev_type();
  inline void set_has_scan_app_type();
  inline void clear_has_scan_app_type();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_userpwd();
  inline void clear_has_userpwd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::isafetec::PrtStationQRCode* qr_code_;
  ::std::string* scan_time_;
  ::std::string* scan_dev_type_;
  ::std::string* scan_app_type_;
  ::std::string* username_;
  ::std::string* userpwd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_mobile_2eproto();
  friend void protobuf_AssignDesc_mobile_2eproto();
  friend void protobuf_ShutdownFile_mobile_2eproto();
  
  void InitAsDefaultInstance();
  static ScanQRCodeInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT MobileUserCommand : public ::google::protobuf::Message {
 public:
  MobileUserCommand();
  virtual ~MobileUserCommand();
  
  MobileUserCommand(const MobileUserCommand& from);
  
  inline MobileUserCommand& operator=(const MobileUserCommand& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MobileUserCommand& default_instance();
  
  void Swap(MobileUserCommand* other);
  
  // implements Message ----------------------------------------------
  
  MobileUserCommand* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobileUserCommand& from);
  void MergeFrom(const MobileUserCommand& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 cmd = 1;
  inline bool has_cmd() const;
  inline void clear_cmd();
  static const int kCmdFieldNumber = 1;
  inline ::google::protobuf::int32 cmd() const;
  inline void set_cmd(::google::protobuf::int32 value);
  
  // optional string content = 2;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 2;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:isafetec.MobileUserCommand)
 private:
  inline void set_has_cmd();
  inline void clear_has_cmd();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* content_;
  ::google::protobuf::int32 cmd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_mobile_2eproto();
  friend void protobuf_AssignDesc_mobile_2eproto();
  friend void protobuf_ShutdownFile_mobile_2eproto();
  
  void InitAsDefaultInstance();
  static MobileUserCommand* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT QRCodeBaseInfo : public ::google::protobuf::Message {
 public:
  QRCodeBaseInfo();
  virtual ~QRCodeBaseInfo();
  
  QRCodeBaseInfo(const QRCodeBaseInfo& from);
  
  inline QRCodeBaseInfo& operator=(const QRCodeBaseInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const QRCodeBaseInfo& default_instance();
  
  void Swap(QRCodeBaseInfo* other);
  
  // implements Message ----------------------------------------------
  
  QRCodeBaseInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const QRCodeBaseInfo& from);
  void MergeFrom(const QRCodeBaseInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string Base_Url = 1;
  inline bool has_base_url() const;
  inline void clear_base_url();
  static const int kBaseUrlFieldNumber = 1;
  inline const ::std::string& base_url() const;
  inline void set_base_url(const ::std::string& value);
  inline void set_base_url(const char* value);
  inline void set_base_url(const char* value, size_t size);
  inline ::std::string* mutable_base_url();
  inline ::std::string* release_base_url();
  
  // optional int32 Dynamic_Timeout = 2;
  inline bool has_dynamic_timeout() const;
  inline void clear_dynamic_timeout();
  static const int kDynamicTimeoutFieldNumber = 2;
  inline ::google::protobuf::int32 dynamic_timeout() const;
  inline void set_dynamic_timeout(::google::protobuf::int32 value);
  
  // optional string Factor = 3;
  inline bool has_factor() const;
  inline void clear_factor();
  static const int kFactorFieldNumber = 3;
  inline const ::std::string& factor() const;
  inline void set_factor(const ::std::string& value);
  inline void set_factor(const char* value);
  inline void set_factor(const char* value, size_t size);
  inline ::std::string* mutable_factor();
  inline ::std::string* release_factor();
  
  // @@protoc_insertion_point(class_scope:isafetec.QRCodeBaseInfo)
 private:
  inline void set_has_base_url();
  inline void clear_has_base_url();
  inline void set_has_dynamic_timeout();
  inline void clear_has_dynamic_timeout();
  inline void set_has_factor();
  inline void clear_has_factor();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* base_url_;
  ::std::string* factor_;
  ::google::protobuf::int32 dynamic_timeout_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_mobile_2eproto();
  friend void protobuf_AssignDesc_mobile_2eproto();
  friend void protobuf_ShutdownFile_mobile_2eproto();
  
  void InitAsDefaultInstance();
  static QRCodeBaseInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationQRCodeInfo : public ::google::protobuf::Message {
 public:
  PrtStationQRCodeInfo();
  virtual ~PrtStationQRCodeInfo();
  
  PrtStationQRCodeInfo(const PrtStationQRCodeInfo& from);
  
  inline PrtStationQRCodeInfo& operator=(const PrtStationQRCodeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationQRCodeInfo& default_instance();
  
  void Swap(PrtStationQRCodeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationQRCodeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationQRCodeInfo& from);
  void MergeFrom(const PrtStationQRCodeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 PrtId = 1;
  inline bool has_prtid() const;
  inline void clear_prtid();
  static const int kPrtIdFieldNumber = 1;
  inline ::google::protobuf::int32 prtid() const;
  inline void set_prtid(::google::protobuf::int32 value);
  
  // optional int32 Enable_Login_QRCode = 2;
  inline bool has_enable_login_qrcode() const;
  inline void clear_enable_login_qrcode();
  static const int kEnableLoginQRCodeFieldNumber = 2;
  inline ::google::protobuf::int32 enable_login_qrcode() const;
  inline void set_enable_login_qrcode(::google::protobuf::int32 value);
  
  // optional int32 Enable_Payment_QRCode = 3;
  inline bool has_enable_payment_qrcode() const;
  inline void clear_enable_payment_qrcode();
  static const int kEnablePaymentQRCodeFieldNumber = 3;
  inline ::google::protobuf::int32 enable_payment_qrcode() const;
  inline void set_enable_payment_qrcode(::google::protobuf::int32 value);
  
  // optional .isafetec.QRCodeBaseInfo Login_QRCode = 4;
  inline bool has_login_qrcode() const;
  inline void clear_login_qrcode();
  static const int kLoginQRCodeFieldNumber = 4;
  inline const ::isafetec::QRCodeBaseInfo& login_qrcode() const;
  inline ::isafetec::QRCodeBaseInfo* mutable_login_qrcode();
  inline ::isafetec::QRCodeBaseInfo* release_login_qrcode();
  
  // optional .isafetec.QRCodeBaseInfo Payment_QRCode = 5;
  inline bool has_payment_qrcode() const;
  inline void clear_payment_qrcode();
  static const int kPaymentQRCodeFieldNumber = 5;
  inline const ::isafetec::QRCodeBaseInfo& payment_qrcode() const;
  inline ::isafetec::QRCodeBaseInfo* mutable_payment_qrcode();
  inline ::isafetec::QRCodeBaseInfo* release_payment_qrcode();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationQRCodeInfo)
 private:
  inline void set_has_prtid();
  inline void clear_has_prtid();
  inline void set_has_enable_login_qrcode();
  inline void clear_has_enable_login_qrcode();
  inline void set_has_enable_payment_qrcode();
  inline void clear_has_enable_payment_qrcode();
  inline void set_has_login_qrcode();
  inline void clear_has_login_qrcode();
  inline void set_has_payment_qrcode();
  inline void clear_has_payment_qrcode();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 prtid_;
  ::google::protobuf::int32 enable_login_qrcode_;
  ::isafetec::QRCodeBaseInfo* login_qrcode_;
  ::isafetec::QRCodeBaseInfo* payment_qrcode_;
  ::google::protobuf::int32 enable_payment_qrcode_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_mobile_2eproto();
  friend void protobuf_AssignDesc_mobile_2eproto();
  friend void protobuf_ShutdownFile_mobile_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationQRCodeInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT MobileOrderInfo : public ::google::protobuf::Message {
 public:
  MobileOrderInfo();
  virtual ~MobileOrderInfo();
  
  MobileOrderInfo(const MobileOrderInfo& from);
  
  inline MobileOrderInfo& operator=(const MobileOrderInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const MobileOrderInfo& default_instance();
  
  void Swap(MobileOrderInfo* other);
  
  // implements Message ----------------------------------------------
  
  MobileOrderInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MobileOrderInfo& from);
  void MergeFrom(const MobileOrderInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string OrderNo = 2;
  inline bool has_orderno() const;
  inline void clear_orderno();
  static const int kOrderNoFieldNumber = 2;
  inline const ::std::string& orderno() const;
  inline void set_orderno(const ::std::string& value);
  inline void set_orderno(const char* value);
  inline void set_orderno(const char* value, size_t size);
  inline ::std::string* mutable_orderno();
  inline ::std::string* release_orderno();
  
  // required int32 UserId = 3;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // required int32 AccountId = 4;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountIdFieldNumber = 4;
  inline ::google::protobuf::int32 accountid() const;
  inline void set_accountid(::google::protobuf::int32 value);
  
  // optional string AccountName = 5;
  inline bool has_accountname() const;
  inline void clear_accountname();
  static const int kAccountNameFieldNumber = 5;
  inline const ::std::string& accountname() const;
  inline void set_accountname(const ::std::string& value);
  inline void set_accountname(const char* value);
  inline void set_accountname(const char* value, size_t size);
  inline ::std::string* mutable_accountname();
  inline ::std::string* release_accountname();
  
  // optional string RealName = 6;
  inline bool has_realname() const;
  inline void clear_realname();
  static const int kRealNameFieldNumber = 6;
  inline const ::std::string& realname() const;
  inline void set_realname(const ::std::string& value);
  inline void set_realname(const char* value);
  inline void set_realname(const char* value, size_t size);
  inline ::std::string* mutable_realname();
  inline ::std::string* release_realname();
  
  // required int32 PrtId = 7;
  inline bool has_prtid() const;
  inline void clear_prtid();
  static const int kPrtIdFieldNumber = 7;
  inline ::google::protobuf::int32 prtid() const;
  inline void set_prtid(::google::protobuf::int32 value);
  
  // required int32 SpendMoney = 8;
  inline bool has_spendmoney() const;
  inline void clear_spendmoney();
  static const int kSpendMoneyFieldNumber = 8;
  inline ::google::protobuf::int32 spendmoney() const;
  inline void set_spendmoney(::google::protobuf::int32 value);
  
  // optional .isafetec.Pay_Type PayType = 9;
  inline bool has_paytype() const;
  inline void clear_paytype();
  static const int kPayTypeFieldNumber = 9;
  inline isafetec::Pay_Type paytype() const;
  inline void set_paytype(isafetec::Pay_Type value);
  
  // optional string PayAccount = 10;
  inline bool has_payaccount() const;
  inline void clear_payaccount();
  static const int kPayAccountFieldNumber = 10;
  inline const ::std::string& payaccount() const;
  inline void set_payaccount(const ::std::string& value);
  inline void set_payaccount(const char* value);
  inline void set_payaccount(const char* value, size_t size);
  inline ::std::string* mutable_payaccount();
  inline ::std::string* release_payaccount();
  
  // optional string PayCompany = 11;
  inline bool has_paycompany() const;
  inline void clear_paycompany();
  static const int kPayCompanyFieldNumber = 11;
  inline const ::std::string& paycompany() const;
  inline void set_paycompany(const ::std::string& value);
  inline void set_paycompany(const char* value);
  inline void set_paycompany(const char* value, size_t size);
  inline ::std::string* mutable_paycompany();
  inline ::std::string* release_paycompany();
  
  // optional int32 PayMoney = 12;
  inline bool has_paymoney() const;
  inline void clear_paymoney();
  static const int kPayMoneyFieldNumber = 12;
  inline ::google::protobuf::int32 paymoney() const;
  inline void set_paymoney(::google::protobuf::int32 value);
  
  // optional int32 PayRedPacket = 13;
  inline bool has_payredpacket() const;
  inline void clear_payredpacket();
  static const int kPayRedPacketFieldNumber = 13;
  inline ::google::protobuf::int32 payredpacket() const;
  inline void set_payredpacket(::google::protobuf::int32 value);
  
  // optional int32 PayPreferential = 14;
  inline bool has_paypreferential() const;
  inline void clear_paypreferential();
  static const int kPayPreferentialFieldNumber = 14;
  inline ::google::protobuf::int32 paypreferential() const;
  inline void set_paypreferential(::google::protobuf::int32 value);
  
  // optional .isafetec.JOB_TYPE JobType = 15;
  inline bool has_jobtype() const;
  inline void clear_jobtype();
  static const int kJobTypeFieldNumber = 15;
  inline isafetec::JOB_TYPE jobtype() const;
  inline void set_jobtype(isafetec::JOB_TYPE value);
  
  // optional int32 JobId = 16;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobIdFieldNumber = 16;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);
  
  // optional int32 TotalPage = 17;
  inline bool has_totalpage() const;
  inline void clear_totalpage();
  static const int kTotalPageFieldNumber = 17;
  inline ::google::protobuf::int32 totalpage() const;
  inline void set_totalpage(::google::protobuf::int32 value);
  
  // optional int32 RealPage = 18;
  inline bool has_realpage() const;
  inline void clear_realpage();
  static const int kRealPageFieldNumber = 18;
  inline ::google::protobuf::int32 realpage() const;
  inline void set_realpage(::google::protobuf::int32 value);
  
  // optional int32 Color = 19;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 19;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional int32 Copies = 20;
  inline bool has_copies() const;
  inline void clear_copies();
  static const int kCopiesFieldNumber = 20;
  inline ::google::protobuf::int32 copies() const;
  inline void set_copies(::google::protobuf::int32 value);
  
  // optional .isafetec.JOB_PRICE_TYPE PriceType = 21;
  inline bool has_pricetype() const;
  inline void clear_pricetype();
  static const int kPriceTypeFieldNumber = 21;
  inline isafetec::JOB_PRICE_TYPE pricetype() const;
  inline void set_pricetype(isafetec::JOB_PRICE_TYPE value);
  
  // optional int32 Price = 22;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 22;
  inline ::google::protobuf::int32 price() const;
  inline void set_price(::google::protobuf::int32 value);
  
  // optional string PageType = 23;
  inline bool has_pagetype() const;
  inline void clear_pagetype();
  static const int kPageTypeFieldNumber = 23;
  inline const ::std::string& pagetype() const;
  inline void set_pagetype(const ::std::string& value);
  inline void set_pagetype(const char* value);
  inline void set_pagetype(const char* value, size_t size);
  inline ::std::string* mutable_pagetype();
  inline ::std::string* release_pagetype();
  
  // optional int32 PaperSize = 24;
  inline bool has_papersize() const;
  inline void clear_papersize();
  static const int kPaperSizeFieldNumber = 24;
  inline ::google::protobuf::int32 papersize() const;
  inline void set_papersize(::google::protobuf::int32 value);
  
  // optional int32 ProjectId = 25;
  inline bool has_projectid() const;
  inline void clear_projectid();
  static const int kProjectIdFieldNumber = 25;
  inline ::google::protobuf::int32 projectid() const;
  inline void set_projectid(::google::protobuf::int32 value);
  
  // optional double CreateOn = 26;
  inline bool has_createon() const;
  inline void clear_createon();
  static const int kCreateOnFieldNumber = 26;
  inline double createon() const;
  inline void set_createon(double value);
  
  // optional double PayTime = 27;
  inline bool has_paytime() const;
  inline void clear_paytime();
  static const int kPayTimeFieldNumber = 27;
  inline double paytime() const;
  inline void set_paytime(double value);
  
  // optional .isafetec.Pay_State PayState = 28;
  inline bool has_paystate() const;
  inline void clear_paystate();
  static const int kPayStateFieldNumber = 28;
  inline isafetec::Pay_State paystate() const;
  inline void set_paystate(isafetec::Pay_State value);
  
  // optional .isafetec.Job_Op_State JobOpState = 29;
  inline bool has_jobopstate() const;
  inline void clear_jobopstate();
  static const int kJobOpStateFieldNumber = 29;
  inline isafetec::Job_Op_State jobopstate() const;
  inline void set_jobopstate(isafetec::Job_Op_State value);
  
  // optional double JobCompleteTime = 30;
  inline bool has_jobcompletetime() const;
  inline void clear_jobcompletetime();
  static const int kJobCompleteTimeFieldNumber = 30;
  inline double jobcompletetime() const;
  inline void set_jobcompletetime(double value);
  
  // optional double JobCompleteNotifyTime = 31;
  inline bool has_jobcompletenotifytime() const;
  inline void clear_jobcompletenotifytime();
  static const int kJobCompleteNotifyTimeFieldNumber = 31;
  inline double jobcompletenotifytime() const;
  inline void set_jobcompletenotifytime(double value);
  
  // optional string comment = 32;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 32;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  
  // @@protoc_insertion_point(class_scope:isafetec.MobileOrderInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_orderno();
  inline void clear_has_orderno();
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_accountname();
  inline void clear_has_accountname();
  inline void set_has_realname();
  inline void clear_has_realname();
  inline void set_has_prtid();
  inline void clear_has_prtid();
  inline void set_has_spendmoney();
  inline void clear_has_spendmoney();
  inline void set_has_paytype();
  inline void clear_has_paytype();
  inline void set_has_payaccount();
  inline void clear_has_payaccount();
  inline void set_has_paycompany();
  inline void clear_has_paycompany();
  inline void set_has_paymoney();
  inline void clear_has_paymoney();
  inline void set_has_payredpacket();
  inline void clear_has_payredpacket();
  inline void set_has_paypreferential();
  inline void clear_has_paypreferential();
  inline void set_has_jobtype();
  inline void clear_has_jobtype();
  inline void set_has_jobid();
  inline void clear_has_jobid();
  inline void set_has_totalpage();
  inline void clear_has_totalpage();
  inline void set_has_realpage();
  inline void clear_has_realpage();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_copies();
  inline void clear_has_copies();
  inline void set_has_pricetype();
  inline void clear_has_pricetype();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_pagetype();
  inline void clear_has_pagetype();
  inline void set_has_papersize();
  inline void clear_has_papersize();
  inline void set_has_projectid();
  inline void clear_has_projectid();
  inline void set_has_createon();
  inline void clear_has_createon();
  inline void set_has_paytime();
  inline void clear_has_paytime();
  inline void set_has_paystate();
  inline void clear_has_paystate();
  inline void set_has_jobopstate();
  inline void clear_has_jobopstate();
  inline void set_has_jobcompletetime();
  inline void clear_has_jobcompletetime();
  inline void set_has_jobcompletenotifytime();
  inline void clear_has_jobcompletenotifytime();
  inline void set_has_comment();
  inline void clear_has_comment();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* orderno_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 userid_;
  ::std::string* accountname_;
  ::google::protobuf::int32 accountid_;
  ::google::protobuf::int32 prtid_;
  ::std::string* realname_;
  ::google::protobuf::int32 spendmoney_;
  int paytype_;
  ::std::string* payaccount_;
  ::std::string* paycompany_;
  ::google::protobuf::int32 paymoney_;
  ::google::protobuf::int32 payredpacket_;
  ::google::protobuf::int32 paypreferential_;
  int jobtype_;
  ::google::protobuf::int32 jobid_;
  ::google::protobuf::int32 totalpage_;
  ::google::protobuf::int32 realpage_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 copies_;
  int pricetype_;
  ::std::string* pagetype_;
  ::google::protobuf::int32 price_;
  ::google::protobuf::int32 papersize_;
  double createon_;
  ::google::protobuf::int32 projectid_;
  int paystate_;
  double paytime_;
  double jobcompletetime_;
  double jobcompletenotifytime_;
  ::std::string* comment_;
  int jobopstate_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(32 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_mobile_2eproto();
  friend void protobuf_AssignDesc_mobile_2eproto();
  friend void protobuf_ShutdownFile_mobile_2eproto();
  
  void InitAsDefaultInstance();
  static MobileOrderInfo* default_instance_;
};
// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace isafetec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::QR_Code_Info_Type>() {
  return isafetec::QR_Code_Info_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::Pay_Type>() {
  return isafetec::Pay_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::Pay_State>() {
  return isafetec::Pay_State_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_mobile_2eproto__INCLUDED
