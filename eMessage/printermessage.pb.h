// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: printermessage.proto

#ifndef PROTOBUF_printermessage_2eproto__INCLUDED
#define PROTOBUF_printermessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
// @@protoc_insertion_point(includes)

namespace isafetec {

// Internal implementation detail -- do not call these.
void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
void protobuf_AssignDesc_printermessage_2eproto();
void protobuf_ShutdownFile_printermessage_2eproto();

class PrintSecPolicy;
class JobSubmitCtrl;
class JobFilterPolciy;
class JobAuditProcess;
class SubmitPrintJob;
class SubmitPrintJobList;
class PrtSationReqPrintJob;
class PrtSationReqPrintJobList;
class PrtSationReqPrintHistoryJob;
class PrtSationReqPrintHistoryJobList;
class CardInfo;
class PrtStationLogon;
class PrtStationUserAccount;
class PrtStationPrice;
class PrtStationPriceStep;
class PrtStationPriceStepList;
class PrtCopyPrice;
class PrtCopyPriceStep;
class PrtCopyPriceStepList;
class PrtScanPrice;
class PrtScanPriceStep;
class PrtScanPriceStepList;
class PrtStationCheckUserResult;
class PrtStationChargeErr;
class PrtStationInfo;
class AutoAddPrtStationInfo;
class PrintProjectSampleInfo;
class PrintStationSampleInfo;
class PrintJobSecTypeInfo;
class PrintCtlReqInfo;
class PrintCltLogon;
class PrintCltLoginVerifyCode;
class PrintCltCheckUserResult;
class PrintCtrlPolicy;
class PrtOrderCmpltInfo;
class RechargeFromCard;
class RechargeFromCardErr;
class PrtChargeResult;
class PrtCopyCharge;
class PrtScanCharge;
class PrtStationCharge;
class PrtStationChargeOnEveryPage;
class PrtStationAlarm;
class PrtChargeToolLogon;
class PrtChargeToolCheckResult;
class PrtChargeToolOPLog;
class PrtUserSelfChargeOPLog;
class PrtUserSelfChargeOpLogACK;
class PrtAdminInfo;
class PrtAdminInfoList;
class PrintDocumentInfo;
class FtpConfigInfo;
class CFuncPolicy;
class PrtCenterSvr_UserPrintReq;
class AdjustPrintCountInfo;
class ScanToMailAddrList;
class PrtTranscriptIToolLogon;
class PrtTranscriptIToolCheckResult;
class PrtDbConfigInfo;
class ReqChargePrintTicket;
class ChargePrintTicket;
class PrintLimitPolicy;
class CopyLimitPolicy;
class ScanLimitPolicy;
class PrinterMeterLog;
class PrinterShareInfo;

enum Job_Op_State {
  Job_Op_State_UnKnow = 0,
  Job_Op_State_Succ = 1,
  Job_Op_State_Order = 2,
  Job_Op_State_Going = 3,
  Job_Op_State_Fail = 4,
  Job_Op_State_Cancel = 5
};
LIBPROTOBUF_EXPORT bool Job_Op_State_IsValid(int value);
const Job_Op_State Job_Op_State_MIN = Job_Op_State_UnKnow;
const Job_Op_State Job_Op_State_MAX = Job_Op_State_Cancel;
const int Job_Op_State_ARRAYSIZE = Job_Op_State_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* Job_Op_State_descriptor();
inline const ::std::string& Job_Op_State_Name(Job_Op_State value) {
  return ::google::protobuf::internal::NameOfEnum(
    Job_Op_State_descriptor(), value);
}
inline bool Job_Op_State_Parse(
    const ::std::string& name, Job_Op_State* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Job_Op_State>(
    Job_Op_State_descriptor(), name, value);
}
enum Printer_Paper_Source {
  Paper_Tray_AUTO = 1000,
  Paper_Tray_1 = 1001,
  Paper_Tray_2 = 1002,
  Paper_Tray_3 = 1003,
  Paper_Tray_4 = 1004,
  Paper_Tray_5 = 1005,
  Paper_Tray_MANUAL = 1011,
  Paper_Tray_ENVMANUAL = 1012,
  Paper_Tray_ENVELOPE = 1013,
  Paper_Tray_TRACTOR = 1014,
  Paper_Tray_SMALLFMT = 1015,
  Paper_Tray_LARGEFMT = 1016,
  Paper_Tray_LARGECAPACITY = 1017,
  Paper_Tray_CASSETTE = 1018
};
LIBPROTOBUF_EXPORT bool Printer_Paper_Source_IsValid(int value);
const Printer_Paper_Source Printer_Paper_Source_MIN = Paper_Tray_AUTO;
const Printer_Paper_Source Printer_Paper_Source_MAX = Paper_Tray_CASSETTE;
const int Printer_Paper_Source_ARRAYSIZE = Printer_Paper_Source_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* Printer_Paper_Source_descriptor();
inline const ::std::string& Printer_Paper_Source_Name(Printer_Paper_Source value) {
  return ::google::protobuf::internal::NameOfEnum(
    Printer_Paper_Source_descriptor(), value);
}
inline bool Printer_Paper_Source_Parse(
    const ::std::string& name, Printer_Paper_Source* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Printer_Paper_Source>(
    Printer_Paper_Source_descriptor(), name, value);
}
enum Print_Job_Type {
  Print_Job_Type_Normal = 0,
  Print_Job_Type_Cloud = 1,
  Print_Job_Type_USB = 2,
  Print_Job_Type_TRANSCRIPT = 3,
  Print_Job_Type_ADMISSION = 4,
  Print_Job_Type_LEAVESCHOOL = 5,
  Print_Job_Type_Thrid = 6
};
LIBPROTOBUF_EXPORT bool Print_Job_Type_IsValid(int value);
const Print_Job_Type Print_Job_Type_MIN = Print_Job_Type_Normal;
const Print_Job_Type Print_Job_Type_MAX = Print_Job_Type_Thrid;
const int Print_Job_Type_ARRAYSIZE = Print_Job_Type_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* Print_Job_Type_descriptor();
inline const ::std::string& Print_Job_Type_Name(Print_Job_Type value) {
  return ::google::protobuf::internal::NameOfEnum(
    Print_Job_Type_descriptor(), value);
}
inline bool Print_Job_Type_Parse(
    const ::std::string& name, Print_Job_Type* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Print_Job_Type>(
    Print_Job_Type_descriptor(), name, value);
}
enum JOB_STORAGE_TYPE {
  JOb_SEC_NORMAL = 0,
  JOB_SEC_FILED = 1,
  JOB_SEC_ENCYPT = 2
};
LIBPROTOBUF_EXPORT bool JOB_STORAGE_TYPE_IsValid(int value);
const JOB_STORAGE_TYPE JOB_STORAGE_TYPE_MIN = JOb_SEC_NORMAL;
const JOB_STORAGE_TYPE JOB_STORAGE_TYPE_MAX = JOB_SEC_ENCYPT;
const int JOB_STORAGE_TYPE_ARRAYSIZE = JOB_STORAGE_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_STORAGE_TYPE_descriptor();
inline const ::std::string& JOB_STORAGE_TYPE_Name(JOB_STORAGE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_STORAGE_TYPE_descriptor(), value);
}
inline bool JOB_STORAGE_TYPE_Parse(
    const ::std::string& name, JOB_STORAGE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_STORAGE_TYPE>(
    JOB_STORAGE_TYPE_descriptor(), name, value);
}
enum JOB_PRICE_TYPE {
  JOb_PRICE_NULL = 0,
  JOb_PRICE_USER = 1,
  JOb_PRICE_DEP = 2,
  JOb_PRICE_PRINTER = 3
};
LIBPROTOBUF_EXPORT bool JOB_PRICE_TYPE_IsValid(int value);
const JOB_PRICE_TYPE JOB_PRICE_TYPE_MIN = JOb_PRICE_NULL;
const JOB_PRICE_TYPE JOB_PRICE_TYPE_MAX = JOb_PRICE_PRINTER;
const int JOB_PRICE_TYPE_ARRAYSIZE = JOB_PRICE_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_PRICE_TYPE_descriptor();
inline const ::std::string& JOB_PRICE_TYPE_Name(JOB_PRICE_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_PRICE_TYPE_descriptor(), value);
}
inline bool JOB_PRICE_TYPE_Parse(
    const ::std::string& name, JOB_PRICE_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_PRICE_TYPE>(
    JOB_PRICE_TYPE_descriptor(), name, value);
}
enum ScanChargeType {
  Scan_Charge_Type_NULL = 0,
  Scan_Charge_Type_Normal = 1,
  Scan_Charge_Type_Mobile = 2
};
LIBPROTOBUF_EXPORT bool ScanChargeType_IsValid(int value);
const ScanChargeType ScanChargeType_MIN = Scan_Charge_Type_NULL;
const ScanChargeType ScanChargeType_MAX = Scan_Charge_Type_Mobile;
const int ScanChargeType_ARRAYSIZE = ScanChargeType_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* ScanChargeType_descriptor();
inline const ::std::string& ScanChargeType_Name(ScanChargeType value) {
  return ::google::protobuf::internal::NameOfEnum(
    ScanChargeType_descriptor(), value);
}
inline bool ScanChargeType_Parse(
    const ::std::string& name, ScanChargeType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<ScanChargeType>(
    ScanChargeType_descriptor(), name, value);
}
enum JOb_CHECK_BY {
  JOB_CHECK_BY_NULL = 0,
  JOB_CHECK_BY_SYS = 1,
  JOB_CHECK_BY_MANUAL = 2
};
LIBPROTOBUF_EXPORT bool JOb_CHECK_BY_IsValid(int value);
const JOb_CHECK_BY JOb_CHECK_BY_MIN = JOB_CHECK_BY_NULL;
const JOb_CHECK_BY JOb_CHECK_BY_MAX = JOB_CHECK_BY_MANUAL;
const int JOb_CHECK_BY_ARRAYSIZE = JOb_CHECK_BY_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOb_CHECK_BY_descriptor();
inline const ::std::string& JOb_CHECK_BY_Name(JOb_CHECK_BY value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOb_CHECK_BY_descriptor(), value);
}
inline bool JOb_CHECK_BY_Parse(
    const ::std::string& name, JOb_CHECK_BY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOb_CHECK_BY>(
    JOb_CHECK_BY_descriptor(), name, value);
}
enum JOB_CHECK_FAILURE_ACTION_TYPE {
  JOB_CONTINE_PRT_AND_ALARM_ADMIN = 0,
  JOB_PAUSE_AND_ALARM_USER = 1
};
LIBPROTOBUF_EXPORT bool JOB_CHECK_FAILURE_ACTION_TYPE_IsValid(int value);
const JOB_CHECK_FAILURE_ACTION_TYPE JOB_CHECK_FAILURE_ACTION_TYPE_MIN = JOB_CONTINE_PRT_AND_ALARM_ADMIN;
const JOB_CHECK_FAILURE_ACTION_TYPE JOB_CHECK_FAILURE_ACTION_TYPE_MAX = JOB_PAUSE_AND_ALARM_USER;
const int JOB_CHECK_FAILURE_ACTION_TYPE_ARRAYSIZE = JOB_CHECK_FAILURE_ACTION_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_CHECK_FAILURE_ACTION_TYPE_descriptor();
inline const ::std::string& JOB_CHECK_FAILURE_ACTION_TYPE_Name(JOB_CHECK_FAILURE_ACTION_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_CHECK_FAILURE_ACTION_TYPE_descriptor(), value);
}
inline bool JOB_CHECK_FAILURE_ACTION_TYPE_Parse(
    const ::std::string& name, JOB_CHECK_FAILURE_ACTION_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_CHECK_FAILURE_ACTION_TYPE>(
    JOB_CHECK_FAILURE_ACTION_TYPE_descriptor(), name, value);
}
enum JOB_SUBMIT_MODE {
  ROAM_PRINTER = 0,
  FIXED_PRINTER_NOCHECK = 1,
  USER_SEL_PRINTER_CHECK = 2
};
LIBPROTOBUF_EXPORT bool JOB_SUBMIT_MODE_IsValid(int value);
const JOB_SUBMIT_MODE JOB_SUBMIT_MODE_MIN = ROAM_PRINTER;
const JOB_SUBMIT_MODE JOB_SUBMIT_MODE_MAX = USER_SEL_PRINTER_CHECK;
const int JOB_SUBMIT_MODE_ARRAYSIZE = JOB_SUBMIT_MODE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_SUBMIT_MODE_descriptor();
inline const ::std::string& JOB_SUBMIT_MODE_Name(JOB_SUBMIT_MODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_SUBMIT_MODE_descriptor(), value);
}
inline bool JOB_SUBMIT_MODE_Parse(
    const ::std::string& name, JOB_SUBMIT_MODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_SUBMIT_MODE>(
    JOB_SUBMIT_MODE_descriptor(), name, value);
}
enum JOB_PRINT_MODE {
  DIRECT_PRINT = 0,
  CHECK_USER_PRINT = 1
};
LIBPROTOBUF_EXPORT bool JOB_PRINT_MODE_IsValid(int value);
const JOB_PRINT_MODE JOB_PRINT_MODE_MIN = DIRECT_PRINT;
const JOB_PRINT_MODE JOB_PRINT_MODE_MAX = CHECK_USER_PRINT;
const int JOB_PRINT_MODE_ARRAYSIZE = JOB_PRINT_MODE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_PRINT_MODE_descriptor();
inline const ::std::string& JOB_PRINT_MODE_Name(JOB_PRINT_MODE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_PRINT_MODE_descriptor(), value);
}
inline bool JOB_PRINT_MODE_Parse(
    const ::std::string& name, JOB_PRINT_MODE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_PRINT_MODE>(
    JOB_PRINT_MODE_descriptor(), name, value);
}
enum JOB_FILTER_TYPE {
  JOB_FLT_BY_DOC_NAME = 0,
  JOB_FLT_BY_DOC_TYPE = 1,
  JOB_FLT_BY_DOC_CONTENT = 2
};
LIBPROTOBUF_EXPORT bool JOB_FILTER_TYPE_IsValid(int value);
const JOB_FILTER_TYPE JOB_FILTER_TYPE_MIN = JOB_FLT_BY_DOC_NAME;
const JOB_FILTER_TYPE JOB_FILTER_TYPE_MAX = JOB_FLT_BY_DOC_CONTENT;
const int JOB_FILTER_TYPE_ARRAYSIZE = JOB_FILTER_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_FILTER_TYPE_descriptor();
inline const ::std::string& JOB_FILTER_TYPE_Name(JOB_FILTER_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_FILTER_TYPE_descriptor(), value);
}
inline bool JOB_FILTER_TYPE_Parse(
    const ::std::string& name, JOB_FILTER_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_FILTER_TYPE>(
    JOB_FILTER_TYPE_descriptor(), name, value);
}
enum PRT_REQ_JOB_BY {
  PRT_REQ_JOB_BY_USER = 0,
  PRT_REQ_JOB_BY_ORDER = 1,
  PRT_REQ_JOB_BY_DIRECT = 2,
  PRT_REQ_JOB_BY_ASSISTANT = 3,
  PRT_REQ_JOB_BY_BreakPoint = 4
};
LIBPROTOBUF_EXPORT bool PRT_REQ_JOB_BY_IsValid(int value);
const PRT_REQ_JOB_BY PRT_REQ_JOB_BY_MIN = PRT_REQ_JOB_BY_USER;
const PRT_REQ_JOB_BY PRT_REQ_JOB_BY_MAX = PRT_REQ_JOB_BY_BreakPoint;
const int PRT_REQ_JOB_BY_ARRAYSIZE = PRT_REQ_JOB_BY_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* PRT_REQ_JOB_BY_descriptor();
inline const ::std::string& PRT_REQ_JOB_BY_Name(PRT_REQ_JOB_BY value) {
  return ::google::protobuf::internal::NameOfEnum(
    PRT_REQ_JOB_BY_descriptor(), value);
}
inline bool PRT_REQ_JOB_BY_Parse(
    const ::std::string& name, PRT_REQ_JOB_BY* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PRT_REQ_JOB_BY>(
    PRT_REQ_JOB_BY_descriptor(), name, value);
}
enum SUBMIT_JOB_STATE {
  JOB_SUBMITED_UNCHECK = 0,
  JOB_SUBMITED_CHECKED = 2,
  JOB_CHECKED_FAILED = 3,
  JOB_PRINTED = 4,
  JOB_DELETED = 5,
  JOB_PENDING_NOMONEY = 6,
  JOB_PENDING_PRINT_ERR = 7,
  JOB_PENDING_WAIT_RESUBMIT = 8,
  JOB_PENGING_WAIT_DELETE = 9,
  JOB_CLOUD_DEAL_WAIT = 10,
  JOB_CLOUD_DEAL_PENDING = 11,
  JOB_CLOUD_DEALING = 12,
  JOB_CLOUD_DEAL_SUCC = 13,
  JOB_CLOUD_DEAL_FAIL = 14
};
LIBPROTOBUF_EXPORT bool SUBMIT_JOB_STATE_IsValid(int value);
const SUBMIT_JOB_STATE SUBMIT_JOB_STATE_MIN = JOB_SUBMITED_UNCHECK;
const SUBMIT_JOB_STATE SUBMIT_JOB_STATE_MAX = JOB_CLOUD_DEAL_FAIL;
const int SUBMIT_JOB_STATE_ARRAYSIZE = SUBMIT_JOB_STATE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* SUBMIT_JOB_STATE_descriptor();
inline const ::std::string& SUBMIT_JOB_STATE_Name(SUBMIT_JOB_STATE value) {
  return ::google::protobuf::internal::NameOfEnum(
    SUBMIT_JOB_STATE_descriptor(), value);
}
inline bool SUBMIT_JOB_STATE_Parse(
    const ::std::string& name, SUBMIT_JOB_STATE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SUBMIT_JOB_STATE>(
    SUBMIT_JOB_STATE_descriptor(), name, value);
}
enum CHARGE_FOR {
  CHARGE_PRINT = 0,
  CHARGE_COPY = 1,
  CHARGE_SCAN = 2,
  CHARGE_DEBT = 3,
  CHARGE_PRE_PRINT = 4,
  CHARGE_TRANSCRIPT = 5,
  CHARGE_ADMISSION = 6,
  CHARGE_USBPRINT = 7,
  CHARGE_LEAVESCHOOL = 8,
  CHARGE_CLOUDPRINT = 9
};
LIBPROTOBUF_EXPORT bool CHARGE_FOR_IsValid(int value);
const CHARGE_FOR CHARGE_FOR_MIN = CHARGE_PRINT;
const CHARGE_FOR CHARGE_FOR_MAX = CHARGE_CLOUDPRINT;
const int CHARGE_FOR_ARRAYSIZE = CHARGE_FOR_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* CHARGE_FOR_descriptor();
inline const ::std::string& CHARGE_FOR_Name(CHARGE_FOR value) {
  return ::google::protobuf::internal::NameOfEnum(
    CHARGE_FOR_descriptor(), value);
}
inline bool CHARGE_FOR_Parse(
    const ::std::string& name, CHARGE_FOR* value) {
  return ::google::protobuf::internal::ParseNamedEnum<CHARGE_FOR>(
    CHARGE_FOR_descriptor(), name, value);
}
enum PRINT_POLICY_MASK {
  EnPrintPolicyMask_Disable = 0,
  EnPrintPolicyMask_EnableBlackWhite = 1,
  EnPrintPolicyMask_EnableColor = 2,
  EnPrintPolicyMask_EnableAll = 3
};
LIBPROTOBUF_EXPORT bool PRINT_POLICY_MASK_IsValid(int value);
const PRINT_POLICY_MASK PRINT_POLICY_MASK_MIN = EnPrintPolicyMask_Disable;
const PRINT_POLICY_MASK PRINT_POLICY_MASK_MAX = EnPrintPolicyMask_EnableAll;
const int PRINT_POLICY_MASK_ARRAYSIZE = PRINT_POLICY_MASK_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* PRINT_POLICY_MASK_descriptor();
inline const ::std::string& PRINT_POLICY_MASK_Name(PRINT_POLICY_MASK value) {
  return ::google::protobuf::internal::NameOfEnum(
    PRINT_POLICY_MASK_descriptor(), value);
}
inline bool PRINT_POLICY_MASK_Parse(
    const ::std::string& name, PRINT_POLICY_MASK* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PRINT_POLICY_MASK>(
    PRINT_POLICY_MASK_descriptor(), name, value);
}
enum COPY_POLICY_MASK {
  EnCopyPolicyMask_Disable = 0,
  EnCopyPolicyMask_Enable = 1
};
LIBPROTOBUF_EXPORT bool COPY_POLICY_MASK_IsValid(int value);
const COPY_POLICY_MASK COPY_POLICY_MASK_MIN = EnCopyPolicyMask_Disable;
const COPY_POLICY_MASK COPY_POLICY_MASK_MAX = EnCopyPolicyMask_Enable;
const int COPY_POLICY_MASK_ARRAYSIZE = COPY_POLICY_MASK_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* COPY_POLICY_MASK_descriptor();
inline const ::std::string& COPY_POLICY_MASK_Name(COPY_POLICY_MASK value) {
  return ::google::protobuf::internal::NameOfEnum(
    COPY_POLICY_MASK_descriptor(), value);
}
inline bool COPY_POLICY_MASK_Parse(
    const ::std::string& name, COPY_POLICY_MASK* value) {
  return ::google::protobuf::internal::ParseNamedEnum<COPY_POLICY_MASK>(
    COPY_POLICY_MASK_descriptor(), name, value);
}
enum SCAN_POLICY_MASK {
  EnScanPolicyMask_Disable = 0,
  EnScanPolicyMask_Enable = 1
};
LIBPROTOBUF_EXPORT bool SCAN_POLICY_MASK_IsValid(int value);
const SCAN_POLICY_MASK SCAN_POLICY_MASK_MIN = EnScanPolicyMask_Disable;
const SCAN_POLICY_MASK SCAN_POLICY_MASK_MAX = EnScanPolicyMask_Enable;
const int SCAN_POLICY_MASK_ARRAYSIZE = SCAN_POLICY_MASK_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* SCAN_POLICY_MASK_descriptor();
inline const ::std::string& SCAN_POLICY_MASK_Name(SCAN_POLICY_MASK value) {
  return ::google::protobuf::internal::NameOfEnum(
    SCAN_POLICY_MASK_descriptor(), value);
}
inline bool SCAN_POLICY_MASK_Parse(
    const ::std::string& name, SCAN_POLICY_MASK* value) {
  return ::google::protobuf::internal::ParseNamedEnum<SCAN_POLICY_MASK>(
    SCAN_POLICY_MASK_descriptor(), name, value);
}
enum FAX_POLICY_MASK {
  EnFaxPolicyMask_Disable = 0,
  EnFaxPolicyMask_Enable = 1
};
LIBPROTOBUF_EXPORT bool FAX_POLICY_MASK_IsValid(int value);
const FAX_POLICY_MASK FAX_POLICY_MASK_MIN = EnFaxPolicyMask_Disable;
const FAX_POLICY_MASK FAX_POLICY_MASK_MAX = EnFaxPolicyMask_Enable;
const int FAX_POLICY_MASK_ARRAYSIZE = FAX_POLICY_MASK_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* FAX_POLICY_MASK_descriptor();
inline const ::std::string& FAX_POLICY_MASK_Name(FAX_POLICY_MASK value) {
  return ::google::protobuf::internal::NameOfEnum(
    FAX_POLICY_MASK_descriptor(), value);
}
inline bool FAX_POLICY_MASK_Parse(
    const ::std::string& name, FAX_POLICY_MASK* value) {
  return ::google::protobuf::internal::ParseNamedEnum<FAX_POLICY_MASK>(
    FAX_POLICY_MASK_descriptor(), name, value);
}
enum PrtDbType {
  DbType_MSDE = 0,
  DbType_MSSQLSERVER = 1,
  DbType_ORACLESQL = 2,
  DbType_MYSQL = 3
};
LIBPROTOBUF_EXPORT bool PrtDbType_IsValid(int value);
const PrtDbType PrtDbType_MIN = DbType_MSDE;
const PrtDbType PrtDbType_MAX = DbType_MYSQL;
const int PrtDbType_ARRAYSIZE = PrtDbType_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* PrtDbType_descriptor();
inline const ::std::string& PrtDbType_Name(PrtDbType value) {
  return ::google::protobuf::internal::NameOfEnum(
    PrtDbType_descriptor(), value);
}
inline bool PrtDbType_Parse(
    const ::std::string& name, PrtDbType* value) {
  return ::google::protobuf::internal::ParseNamedEnum<PrtDbType>(
    PrtDbType_descriptor(), name, value);
}
enum JOB_TYPE {
  JOb_TYPE_NULL = 0,
  JOb_TYPE_PRINT = 1,
  JOb_TYPE_COPY = 2,
  JOb_TYPE_SCAN = 3,
  JOb_TYPE_FAX = 4,
  JOb_TYPE_CheckDebt = 5
};
LIBPROTOBUF_EXPORT bool JOB_TYPE_IsValid(int value);
const JOB_TYPE JOB_TYPE_MIN = JOb_TYPE_NULL;
const JOB_TYPE JOB_TYPE_MAX = JOb_TYPE_CheckDebt;
const int JOB_TYPE_ARRAYSIZE = JOB_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_TYPE_descriptor();
inline const ::std::string& JOB_TYPE_Name(JOB_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_TYPE_descriptor(), value);
}
inline bool JOB_TYPE_Parse(
    const ::std::string& name, JOB_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_TYPE>(
    JOB_TYPE_descriptor(), name, value);
}
enum JOB_LIMIT_TYPE {
  JOb_LIMIT_PRINTER = 0,
  JOb_LIMIT_DEP = 1,
  JOb_LIMIT_USER = 2,
  JOb_LIMIT_NULL = 3
};
LIBPROTOBUF_EXPORT bool JOB_LIMIT_TYPE_IsValid(int value);
const JOB_LIMIT_TYPE JOB_LIMIT_TYPE_MIN = JOb_LIMIT_PRINTER;
const JOB_LIMIT_TYPE JOB_LIMIT_TYPE_MAX = JOb_LIMIT_NULL;
const int JOB_LIMIT_TYPE_ARRAYSIZE = JOB_LIMIT_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_LIMIT_TYPE_descriptor();
inline const ::std::string& JOB_LIMIT_TYPE_Name(JOB_LIMIT_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_LIMIT_TYPE_descriptor(), value);
}
inline bool JOB_LIMIT_TYPE_Parse(
    const ::std::string& name, JOB_LIMIT_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_LIMIT_TYPE>(
    JOB_LIMIT_TYPE_descriptor(), name, value);
}
enum JOB_LIMIT_PERIOD_TYPE {
  JOb_LIMIT_PERIOD_NULL = 0,
  JOb_LIMIT_PERIOD_DAY = 1,
  JOb_LIMIT_PERIOD_WEEK = 2,
  JOb_LIMIT_PERIOD_MONTH = 3,
  JOB_LIMIT_PERIOD_QUARTER = 4
};
LIBPROTOBUF_EXPORT bool JOB_LIMIT_PERIOD_TYPE_IsValid(int value);
const JOB_LIMIT_PERIOD_TYPE JOB_LIMIT_PERIOD_TYPE_MIN = JOb_LIMIT_PERIOD_NULL;
const JOB_LIMIT_PERIOD_TYPE JOB_LIMIT_PERIOD_TYPE_MAX = JOB_LIMIT_PERIOD_QUARTER;
const int JOB_LIMIT_PERIOD_TYPE_ARRAYSIZE = JOB_LIMIT_PERIOD_TYPE_MAX + 1;

LIBPROTOBUF_EXPORT const ::google::protobuf::EnumDescriptor* JOB_LIMIT_PERIOD_TYPE_descriptor();
inline const ::std::string& JOB_LIMIT_PERIOD_TYPE_Name(JOB_LIMIT_PERIOD_TYPE value) {
  return ::google::protobuf::internal::NameOfEnum(
    JOB_LIMIT_PERIOD_TYPE_descriptor(), value);
}
inline bool JOB_LIMIT_PERIOD_TYPE_Parse(
    const ::std::string& name, JOB_LIMIT_PERIOD_TYPE* value) {
  return ::google::protobuf::internal::ParseNamedEnum<JOB_LIMIT_PERIOD_TYPE>(
    JOB_LIMIT_PERIOD_TYPE_descriptor(), name, value);
}
// ===================================================================

class LIBPROTOBUF_EXPORT PrintSecPolicy : public ::google::protobuf::Message {
 public:
  PrintSecPolicy();
  virtual ~PrintSecPolicy();
  
  PrintSecPolicy(const PrintSecPolicy& from);
  
  inline PrintSecPolicy& operator=(const PrintSecPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintSecPolicy& default_instance();
  
  void Swap(PrintSecPolicy* other);
  
  // implements Message ----------------------------------------------
  
  PrintSecPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintSecPolicy& from);
  void MergeFrom(const PrintSecPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 active_footer = 1;
  inline bool has_active_footer() const;
  inline void clear_active_footer();
  static const int kActiveFooterFieldNumber = 1;
  inline ::google::protobuf::int32 active_footer() const;
  inline void set_active_footer(::google::protobuf::int32 value);
  
  // optional int32 active_header = 2;
  inline bool has_active_header() const;
  inline void clear_active_header();
  static const int kActiveHeaderFieldNumber = 2;
  inline ::google::protobuf::int32 active_header() const;
  inline void set_active_header(::google::protobuf::int32 value);
  
  // optional int32 active_watermark = 3;
  inline bool has_active_watermark() const;
  inline void clear_active_watermark();
  static const int kActiveWatermarkFieldNumber = 3;
  inline ::google::protobuf::int32 active_watermark() const;
  inline void set_active_watermark(::google::protobuf::int32 value);
  
  // optional string footer = 4;
  inline bool has_footer() const;
  inline void clear_footer();
  static const int kFooterFieldNumber = 4;
  inline const ::std::string& footer() const;
  inline void set_footer(const ::std::string& value);
  inline void set_footer(const char* value);
  inline void set_footer(const char* value, size_t size);
  inline ::std::string* mutable_footer();
  inline ::std::string* release_footer();
  
  // optional string header = 5;
  inline bool has_header() const;
  inline void clear_header();
  static const int kHeaderFieldNumber = 5;
  inline const ::std::string& header() const;
  inline void set_header(const ::std::string& value);
  inline void set_header(const char* value);
  inline void set_header(const char* value, size_t size);
  inline ::std::string* mutable_header();
  inline ::std::string* release_header();
  
  // optional string watermark = 6;
  inline bool has_watermark() const;
  inline void clear_watermark();
  static const int kWatermarkFieldNumber = 6;
  inline const ::std::string& watermark() const;
  inline void set_watermark(const ::std::string& value);
  inline void set_watermark(const char* value);
  inline void set_watermark(const char* value, size_t size);
  inline ::std::string* mutable_watermark();
  inline ::std::string* release_watermark();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintSecPolicy)
 private:
  inline void set_has_active_footer();
  inline void clear_has_active_footer();
  inline void set_has_active_header();
  inline void clear_has_active_header();
  inline void set_has_active_watermark();
  inline void clear_has_active_watermark();
  inline void set_has_footer();
  inline void clear_has_footer();
  inline void set_has_header();
  inline void clear_has_header();
  inline void set_has_watermark();
  inline void clear_has_watermark();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 active_footer_;
  ::google::protobuf::int32 active_header_;
  ::std::string* footer_;
  ::std::string* header_;
  ::std::string* watermark_;
  ::google::protobuf::int32 active_watermark_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintSecPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT JobSubmitCtrl : public ::google::protobuf::Message {
 public:
  JobSubmitCtrl();
  virtual ~JobSubmitCtrl();
  
  JobSubmitCtrl(const JobSubmitCtrl& from);
  
  inline JobSubmitCtrl& operator=(const JobSubmitCtrl& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobSubmitCtrl& default_instance();
  
  void Swap(JobSubmitCtrl* other);
  
  // implements Message ----------------------------------------------
  
  JobSubmitCtrl* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobSubmitCtrl& from);
  void MergeFrom(const JobSubmitCtrl& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 max_page_each_time = 1;
  inline bool has_max_page_each_time() const;
  inline void clear_max_page_each_time();
  static const int kMaxPageEachTimeFieldNumber = 1;
  inline ::google::protobuf::int32 max_page_each_time() const;
  inline void set_max_page_each_time(::google::protobuf::int32 value);
  
  // optional int32 max_size_each_time = 2;
  inline bool has_max_size_each_time() const;
  inline void clear_max_size_each_time();
  static const int kMaxSizeEachTimeFieldNumber = 2;
  inline ::google::protobuf::int32 max_size_each_time() const;
  inline void set_max_size_each_time(::google::protobuf::int32 value);
  
  // optional int32 max_size_all = 3;
  inline bool has_max_size_all() const;
  inline void clear_max_size_all();
  static const int kMaxSizeAllFieldNumber = 3;
  inline ::google::protobuf::int32 max_size_all() const;
  inline void set_max_size_all(::google::protobuf::int32 value);
  
  // optional int32 cur_all_size = 4;
  inline bool has_cur_all_size() const;
  inline void clear_cur_all_size();
  static const int kCurAllSizeFieldNumber = 4;
  inline ::google::protobuf::int32 cur_all_size() const;
  inline void set_cur_all_size(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.JobSubmitCtrl)
 private:
  inline void set_has_max_page_each_time();
  inline void clear_has_max_page_each_time();
  inline void set_has_max_size_each_time();
  inline void clear_has_max_size_each_time();
  inline void set_has_max_size_all();
  inline void clear_has_max_size_all();
  inline void set_has_cur_all_size();
  inline void clear_has_cur_all_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 max_page_each_time_;
  ::google::protobuf::int32 max_size_each_time_;
  ::google::protobuf::int32 max_size_all_;
  ::google::protobuf::int32 cur_all_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static JobSubmitCtrl* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT JobFilterPolciy : public ::google::protobuf::Message {
 public:
  JobFilterPolciy();
  virtual ~JobFilterPolciy();
  
  JobFilterPolciy(const JobFilterPolciy& from);
  
  inline JobFilterPolciy& operator=(const JobFilterPolciy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobFilterPolciy& default_instance();
  
  void Swap(JobFilterPolciy* other);
  
  // implements Message ----------------------------------------------
  
  JobFilterPolciy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobFilterPolciy& from);
  void MergeFrom(const JobFilterPolciy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_FILTER_TYPE type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline isafetec::JOB_FILTER_TYPE type() const;
  inline void set_type(isafetec::JOB_FILTER_TYPE value);
  
  // optional string key_word = 2;
  inline bool has_key_word() const;
  inline void clear_key_word();
  static const int kKeyWordFieldNumber = 2;
  inline const ::std::string& key_word() const;
  inline void set_key_word(const ::std::string& value);
  inline void set_key_word(const char* value);
  inline void set_key_word(const char* value, size_t size);
  inline ::std::string* mutable_key_word();
  inline ::std::string* release_key_word();
  
  // @@protoc_insertion_point(class_scope:isafetec.JobFilterPolciy)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_key_word();
  inline void clear_has_key_word();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* key_word_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static JobFilterPolciy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT JobAuditProcess : public ::google::protobuf::Message {
 public:
  JobAuditProcess();
  virtual ~JobAuditProcess();
  
  JobAuditProcess(const JobAuditProcess& from);
  
  inline JobAuditProcess& operator=(const JobAuditProcess& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const JobAuditProcess& default_instance();
  
  void Swap(JobAuditProcess* other);
  
  // implements Message ----------------------------------------------
  
  JobAuditProcess* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const JobAuditProcess& from);
  void MergeFrom(const JobAuditProcess& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOb_CHECK_BY check_by = 1;
  inline bool has_check_by() const;
  inline void clear_check_by();
  static const int kCheckByFieldNumber = 1;
  inline isafetec::JOb_CHECK_BY check_by() const;
  inline void set_check_by(isafetec::JOb_CHECK_BY value);
  
  // optional int32 admin_id = 2;
  inline bool has_admin_id() const;
  inline void clear_admin_id();
  static const int kAdminIdFieldNumber = 2;
  inline ::google::protobuf::int32 admin_id() const;
  inline void set_admin_id(::google::protobuf::int32 value);
  
  // optional .isafetec.JobFilterPolciy flt_policy = 3;
  inline bool has_flt_policy() const;
  inline void clear_flt_policy();
  static const int kFltPolicyFieldNumber = 3;
  inline const ::isafetec::JobFilterPolciy& flt_policy() const;
  inline ::isafetec::JobFilterPolciy* mutable_flt_policy();
  inline ::isafetec::JobFilterPolciy* release_flt_policy();
  
  // optional .isafetec.JOB_CHECK_FAILURE_ACTION_TYPE next_action = 4;
  inline bool has_next_action() const;
  inline void clear_next_action();
  static const int kNextActionFieldNumber = 4;
  inline isafetec::JOB_CHECK_FAILURE_ACTION_TYPE next_action() const;
  inline void set_next_action(isafetec::JOB_CHECK_FAILURE_ACTION_TYPE value);
  
  // @@protoc_insertion_point(class_scope:isafetec.JobAuditProcess)
 private:
  inline void set_has_check_by();
  inline void clear_has_check_by();
  inline void set_has_admin_id();
  inline void clear_has_admin_id();
  inline void set_has_flt_policy();
  inline void clear_has_flt_policy();
  inline void set_has_next_action();
  inline void clear_has_next_action();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int check_by_;
  ::google::protobuf::int32 admin_id_;
  ::isafetec::JobFilterPolciy* flt_policy_;
  int next_action_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static JobAuditProcess* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT SubmitPrintJob : public ::google::protobuf::Message {
 public:
  SubmitPrintJob();
  virtual ~SubmitPrintJob();
  
  SubmitPrintJob(const SubmitPrintJob& from);
  
  inline SubmitPrintJob& operator=(const SubmitPrintJob& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitPrintJob& default_instance();
  
  void Swap(SubmitPrintJob* other);
  
  // implements Message ----------------------------------------------
  
  SubmitPrintJob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitPrintJob& from);
  void MergeFrom(const SubmitPrintJob& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 equip_id = 1;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::int32 equip_id() const;
  inline void set_equip_id(::google::protobuf::int32 value);
  
  // optional string equip_host = 2;
  inline bool has_equip_host() const;
  inline void clear_equip_host();
  static const int kEquipHostFieldNumber = 2;
  inline const ::std::string& equip_host() const;
  inline void set_equip_host(const ::std::string& value);
  inline void set_equip_host(const char* value);
  inline void set_equip_host(const char* value, size_t size);
  inline ::std::string* mutable_equip_host();
  inline ::std::string* release_equip_host();
  
  // optional string win_user = 3;
  inline bool has_win_user() const;
  inline void clear_win_user();
  static const int kWinUserFieldNumber = 3;
  inline const ::std::string& win_user() const;
  inline void set_win_user(const ::std::string& value);
  inline void set_win_user(const char* value);
  inline void set_win_user(const char* value, size_t size);
  inline ::std::string* mutable_win_user();
  inline ::std::string* release_win_user();
  
  // optional int32 user_id = 4;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 job_id = 5;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 5;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // optional int32 paper_size = 6;
  inline bool has_paper_size() const;
  inline void clear_paper_size();
  static const int kPaperSizeFieldNumber = 6;
  inline ::google::protobuf::int32 paper_size() const;
  inline void set_paper_size(::google::protobuf::int32 value);
  
  // optional string page_type = 7;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 7;
  inline const ::std::string& page_type() const;
  inline void set_page_type(const ::std::string& value);
  inline void set_page_type(const char* value);
  inline void set_page_type(const char* value, size_t size);
  inline ::std::string* mutable_page_type();
  inline ::std::string* release_page_type();
  
  // optional int32 copies = 8;
  inline bool has_copies() const;
  inline void clear_copies();
  static const int kCopiesFieldNumber = 8;
  inline ::google::protobuf::int32 copies() const;
  inline void set_copies(::google::protobuf::int32 value);
  
  // optional int32 color = 9;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 9;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional int32 total_page = 10;
  inline bool has_total_page() const;
  inline void clear_total_page();
  static const int kTotalPageFieldNumber = 10;
  inline ::google::protobuf::int32 total_page() const;
  inline void set_total_page(::google::protobuf::int32 value);
  
  // optional int32 orientation = 11;
  inline bool has_orientation() const;
  inline void clear_orientation();
  static const int kOrientationFieldNumber = 11;
  inline ::google::protobuf::int32 orientation() const;
  inline void set_orientation(::google::protobuf::int32 value);
  
  // optional int32 double_print = 12;
  inline bool has_double_print() const;
  inline void clear_double_print();
  static const int kDoublePrintFieldNumber = 12;
  inline ::google::protobuf::int32 double_print() const;
  inline void set_double_print(::google::protobuf::int32 value);
  
  // optional string doc_name = 13;
  inline bool has_doc_name() const;
  inline void clear_doc_name();
  static const int kDocNameFieldNumber = 13;
  inline const ::std::string& doc_name() const;
  inline void set_doc_name(const ::std::string& value);
  inline void set_doc_name(const char* value);
  inline void set_doc_name(const char* value, size_t size);
  inline ::std::string* mutable_doc_name();
  inline ::std::string* release_doc_name();
  
  // optional string printer_name = 14;
  inline bool has_printer_name() const;
  inline void clear_printer_name();
  static const int kPrinterNameFieldNumber = 14;
  inline const ::std::string& printer_name() const;
  inline void set_printer_name(const ::std::string& value);
  inline void set_printer_name(const char* value);
  inline void set_printer_name(const char* value, size_t size);
  inline ::std::string* mutable_printer_name();
  inline ::std::string* release_printer_name();
  
  // optional double submit_time = 15;
  inline bool has_submit_time() const;
  inline void clear_submit_time();
  static const int kSubmitTimeFieldNumber = 15;
  inline double submit_time() const;
  inline void set_submit_time(double value);
  
  // optional int32 doc_size = 16;
  inline bool has_doc_size() const;
  inline void clear_doc_size();
  static const int kDocSizeFieldNumber = 16;
  inline ::google::protobuf::int32 doc_size() const;
  inline void set_doc_size(::google::protobuf::int32 value);
  
  // optional int32 zip_job_size = 17;
  inline bool has_zip_job_size() const;
  inline void clear_zip_job_size();
  static const int kZipJobSizeFieldNumber = 17;
  inline ::google::protobuf::int32 zip_job_size() const;
  inline void set_zip_job_size(::google::protobuf::int32 value);
  
  // optional string job_path = 18;
  inline bool has_job_path() const;
  inline void clear_job_path();
  static const int kJobPathFieldNumber = 18;
  inline const ::std::string& job_path() const;
  inline void set_job_path(const ::std::string& value);
  inline void set_job_path(const char* value);
  inline void set_job_path(const char* value, size_t size);
  inline ::std::string* mutable_job_path();
  inline ::std::string* release_job_path();
  
  // optional string job_dir = 19;
  inline bool has_job_dir() const;
  inline void clear_job_dir();
  static const int kJobDirFieldNumber = 19;
  inline const ::std::string& job_dir() const;
  inline void set_job_dir(const ::std::string& value);
  inline void set_job_dir(const char* value);
  inline void set_job_dir(const char* value, size_t size);
  inline ::std::string* mutable_job_dir();
  inline ::std::string* release_job_dir();
  
  // optional int32 project_id = 20;
  inline bool has_project_id() const;
  inline void clear_project_id();
  static const int kProjectIdFieldNumber = 20;
  inline ::google::protobuf::int32 project_id() const;
  inline void set_project_id(::google::protobuf::int32 value);
  
  // optional int32 order_PrtStation_id = 21;
  inline bool has_order_prtstation_id() const;
  inline void clear_order_prtstation_id();
  static const int kOrderPrtStationIdFieldNumber = 21;
  inline ::google::protobuf::int32 order_prtstation_id() const;
  inline void set_order_prtstation_id(::google::protobuf::int32 value);
  
  // optional int32 direct_PrtStation_id = 22;
  inline bool has_direct_prtstation_id() const;
  inline void clear_direct_prtstation_id();
  static const int kDirectPrtStationIdFieldNumber = 22;
  inline ::google::protobuf::int32 direct_prtstation_id() const;
  inline void set_direct_prtstation_id(::google::protobuf::int32 value);
  
  // optional .isafetec.JOB_STORAGE_TYPE sec_type = 23;
  inline bool has_sec_type() const;
  inline void clear_sec_type();
  static const int kSecTypeFieldNumber = 23;
  inline isafetec::JOB_STORAGE_TYPE sec_type() const;
  inline void set_sec_type(isafetec::JOB_STORAGE_TYPE value);
  
  // optional .isafetec.Printer_Paper_Source paper_source = 24;
  inline bool has_paper_source() const;
  inline void clear_paper_source();
  static const int kPaperSourceFieldNumber = 24;
  inline isafetec::Printer_Paper_Source paper_source() const;
  inline void set_paper_source(isafetec::Printer_Paper_Source value);
  
  // optional bool image_use_physical_area = 25;
  inline bool has_image_use_physical_area() const;
  inline void clear_image_use_physical_area();
  static const int kImageUsePhysicalAreaFieldNumber = 25;
  inline bool image_use_physical_area() const;
  inline void set_image_use_physical_area(bool value);
  
  // optional int32 collate = 26;
  inline bool has_collate() const;
  inline void clear_collate();
  static const int kCollateFieldNumber = 26;
  inline ::google::protobuf::int32 collate() const;
  inline void set_collate(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.SubmitPrintJob)
 private:
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_equip_host();
  inline void clear_has_equip_host();
  inline void set_has_win_user();
  inline void clear_has_win_user();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_paper_size();
  inline void clear_has_paper_size();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_copies();
  inline void clear_has_copies();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_total_page();
  inline void clear_has_total_page();
  inline void set_has_orientation();
  inline void clear_has_orientation();
  inline void set_has_double_print();
  inline void clear_has_double_print();
  inline void set_has_doc_name();
  inline void clear_has_doc_name();
  inline void set_has_printer_name();
  inline void clear_has_printer_name();
  inline void set_has_submit_time();
  inline void clear_has_submit_time();
  inline void set_has_doc_size();
  inline void clear_has_doc_size();
  inline void set_has_zip_job_size();
  inline void clear_has_zip_job_size();
  inline void set_has_job_path();
  inline void clear_has_job_path();
  inline void set_has_job_dir();
  inline void clear_has_job_dir();
  inline void set_has_project_id();
  inline void clear_has_project_id();
  inline void set_has_order_prtstation_id();
  inline void clear_has_order_prtstation_id();
  inline void set_has_direct_prtstation_id();
  inline void clear_has_direct_prtstation_id();
  inline void set_has_sec_type();
  inline void clear_has_sec_type();
  inline void set_has_paper_source();
  inline void clear_has_paper_source();
  inline void set_has_image_use_physical_area();
  inline void clear_has_image_use_physical_area();
  inline void set_has_collate();
  inline void clear_has_collate();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* equip_host_;
  ::google::protobuf::int32 equip_id_;
  ::google::protobuf::int32 user_id_;
  ::std::string* win_user_;
  ::google::protobuf::int32 job_id_;
  ::google::protobuf::int32 paper_size_;
  ::std::string* page_type_;
  ::google::protobuf::int32 copies_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 total_page_;
  ::google::protobuf::int32 orientation_;
  ::std::string* doc_name_;
  ::std::string* printer_name_;
  ::google::protobuf::int32 double_print_;
  ::google::protobuf::int32 doc_size_;
  double submit_time_;
  ::std::string* job_path_;
  ::google::protobuf::int32 zip_job_size_;
  ::google::protobuf::int32 project_id_;
  ::std::string* job_dir_;
  ::google::protobuf::int32 order_prtstation_id_;
  ::google::protobuf::int32 direct_prtstation_id_;
  int sec_type_;
  int paper_source_;
  bool image_use_physical_area_;
  ::google::protobuf::int32 collate_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(26 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static SubmitPrintJob* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT SubmitPrintJobList : public ::google::protobuf::Message {
 public:
  SubmitPrintJobList();
  virtual ~SubmitPrintJobList();
  
  SubmitPrintJobList(const SubmitPrintJobList& from);
  
  inline SubmitPrintJobList& operator=(const SubmitPrintJobList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const SubmitPrintJobList& default_instance();
  
  void Swap(SubmitPrintJobList* other);
  
  // implements Message ----------------------------------------------
  
  SubmitPrintJobList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const SubmitPrintJobList& from);
  void MergeFrom(const SubmitPrintJobList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.SubmitPrintJob list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::SubmitPrintJob& list(int index) const;
  inline ::isafetec::SubmitPrintJob* mutable_list(int index);
  inline ::isafetec::SubmitPrintJob* SubmitPrintJobList::list_ReleaseAt(int index); 
  inline void SubmitPrintJobList::list_RemoveAt(int index); 
  inline ::isafetec::SubmitPrintJob* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::SubmitPrintJob >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::SubmitPrintJob >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.SubmitPrintJobList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::SubmitPrintJob > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static SubmitPrintJobList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtSationReqPrintJob : public ::google::protobuf::Message {
 public:
  PrtSationReqPrintJob();
  virtual ~PrtSationReqPrintJob();
  
  PrtSationReqPrintJob(const PrtSationReqPrintJob& from);
  
  inline PrtSationReqPrintJob& operator=(const PrtSationReqPrintJob& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtSationReqPrintJob& default_instance();
  
  void Swap(PrtSationReqPrintJob* other);
  
  // implements Message ----------------------------------------------
  
  PrtSationReqPrintJob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtSationReqPrintJob& from);
  void MergeFrom(const PrtSationReqPrintJob& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string job_path = 2;
  inline bool has_job_path() const;
  inline void clear_job_path();
  static const int kJobPathFieldNumber = 2;
  inline const ::std::string& job_path() const;
  inline void set_job_path(const ::std::string& value);
  inline void set_job_path(const char* value);
  inline void set_job_path(const char* value, size_t size);
  inline ::std::string* mutable_job_path();
  inline ::std::string* release_job_path();
  
  // optional string job_dir = 3;
  inline bool has_job_dir() const;
  inline void clear_job_dir();
  static const int kJobDirFieldNumber = 3;
  inline const ::std::string& job_dir() const;
  inline void set_job_dir(const ::std::string& value);
  inline void set_job_dir(const char* value);
  inline void set_job_dir(const char* value, size_t size);
  inline ::std::string* mutable_job_dir();
  inline ::std::string* release_job_dir();
  
  // optional double submit_time = 4;
  inline bool has_submit_time() const;
  inline void clear_submit_time();
  static const int kSubmitTimeFieldNumber = 4;
  inline double submit_time() const;
  inline void set_submit_time(double value);
  
  // optional int32 job_size = 5;
  inline bool has_job_size() const;
  inline void clear_job_size();
  static const int kJobSizeFieldNumber = 5;
  inline ::google::protobuf::int32 job_size() const;
  inline void set_job_size(::google::protobuf::int32 value);
  
  // optional int32 zip_job_size = 6;
  inline bool has_zip_job_size() const;
  inline void clear_zip_job_size();
  static const int kZipJobSizeFieldNumber = 6;
  inline ::google::protobuf::int32 zip_job_size() const;
  inline void set_zip_job_size(::google::protobuf::int32 value);
  
  // optional string doc_name = 7;
  inline bool has_doc_name() const;
  inline void clear_doc_name();
  static const int kDocNameFieldNumber = 7;
  inline const ::std::string& doc_name() const;
  inline void set_doc_name(const ::std::string& value);
  inline void set_doc_name(const char* value);
  inline void set_doc_name(const char* value, size_t size);
  inline ::std::string* mutable_doc_name();
  inline ::std::string* release_doc_name();
  
  // optional int32 paper_size = 8;
  inline bool has_paper_size() const;
  inline void clear_paper_size();
  static const int kPaperSizeFieldNumber = 8;
  inline ::google::protobuf::int32 paper_size() const;
  inline void set_paper_size(::google::protobuf::int32 value);
  
  // optional string page_type = 9;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 9;
  inline const ::std::string& page_type() const;
  inline void set_page_type(const ::std::string& value);
  inline void set_page_type(const char* value);
  inline void set_page_type(const char* value, size_t size);
  inline ::std::string* mutable_page_type();
  inline ::std::string* release_page_type();
  
  // optional int32 copies = 10;
  inline bool has_copies() const;
  inline void clear_copies();
  static const int kCopiesFieldNumber = 10;
  inline ::google::protobuf::int32 copies() const;
  inline void set_copies(::google::protobuf::int32 value);
  
  // optional int32 color = 11;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 11;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional int32 total_page = 12;
  inline bool has_total_page() const;
  inline void clear_total_page();
  static const int kTotalPageFieldNumber = 12;
  inline ::google::protobuf::int32 total_page() const;
  inline void set_total_page(::google::protobuf::int32 value);
  
  // optional int32 orientation = 13;
  inline bool has_orientation() const;
  inline void clear_orientation();
  static const int kOrientationFieldNumber = 13;
  inline ::google::protobuf::int32 orientation() const;
  inline void set_orientation(::google::protobuf::int32 value);
  
  // optional int32 double_print = 14;
  inline bool has_double_print() const;
  inline void clear_double_print();
  static const int kDoublePrintFieldNumber = 14;
  inline ::google::protobuf::int32 double_print() const;
  inline void set_double_print(::google::protobuf::int32 value);
  
  // optional string equip_host = 15;
  inline bool has_equip_host() const;
  inline void clear_equip_host();
  static const int kEquipHostFieldNumber = 15;
  inline const ::std::string& equip_host() const;
  inline void set_equip_host(const ::std::string& value);
  inline void set_equip_host(const char* value);
  inline void set_equip_host(const char* value, size_t size);
  inline ::std::string* mutable_equip_host();
  inline ::std::string* release_equip_host();
  
  // optional string win_user = 16;
  inline bool has_win_user() const;
  inline void clear_win_user();
  static const int kWinUserFieldNumber = 16;
  inline const ::std::string& win_user() const;
  inline void set_win_user(const ::std::string& value);
  inline void set_win_user(const char* value);
  inline void set_win_user(const char* value, size_t size);
  inline ::std::string* mutable_win_user();
  inline ::std::string* release_win_user();
  
  // optional string equip_ip = 17;
  inline bool has_equip_ip() const;
  inline void clear_equip_ip();
  static const int kEquipIpFieldNumber = 17;
  inline const ::std::string& equip_ip() const;
  inline void set_equip_ip(const ::std::string& value);
  inline void set_equip_ip(const char* value);
  inline void set_equip_ip(const char* value, size_t size);
  inline ::std::string* mutable_equip_ip();
  inline ::std::string* release_equip_ip();
  
  // optional string user_name = 18;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 18;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  
  // optional .isafetec.PRT_REQ_JOB_BY job_req_by = 19;
  inline bool has_job_req_by() const;
  inline void clear_job_req_by();
  static const int kJobReqByFieldNumber = 19;
  inline isafetec::PRT_REQ_JOB_BY job_req_by() const;
  inline void set_job_req_by(isafetec::PRT_REQ_JOB_BY value);
  
  // optional int32 user_id = 20;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 20;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional double left_money = 22;
  inline bool has_left_money() const;
  inline void clear_left_money();
  static const int kLeftMoneyFieldNumber = 22;
  inline double left_money() const;
  inline void set_left_money(double value);
  
  // optional double special_left_money = 23;
  inline bool has_special_left_money() const;
  inline void clear_special_left_money();
  static const int kSpecialLeftMoneyFieldNumber = 23;
  inline double special_left_money() const;
  inline void set_special_left_money(double value);
  
  // optional .isafetec.JOB_PRICE_TYPE price_type = 24;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 24;
  inline isafetec::JOB_PRICE_TYPE price_type() const;
  inline void set_price_type(isafetec::JOB_PRICE_TYPE value);
  
  // optional double price = 25;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 25;
  inline double price() const;
  inline void set_price(double value);
  
  // optional int32 project_id = 26;
  inline bool has_project_id() const;
  inline void clear_project_id();
  static const int kProjectIdFieldNumber = 26;
  inline ::google::protobuf::int32 project_id() const;
  inline void set_project_id(::google::protobuf::int32 value);
  
  // optional string project_name = 27;
  inline bool has_project_name() const;
  inline void clear_project_name();
  static const int kProjectNameFieldNumber = 27;
  inline const ::std::string& project_name() const;
  inline void set_project_name(const ::std::string& value);
  inline void set_project_name(const char* value);
  inline void set_project_name(const char* value, size_t size);
  inline ::std::string* mutable_project_name();
  inline ::std::string* release_project_name();
  
  // optional .isafetec.PrintSecPolicy sec_policy = 28;
  inline bool has_sec_policy() const;
  inline void clear_sec_policy();
  static const int kSecPolicyFieldNumber = 28;
  inline const ::isafetec::PrintSecPolicy& sec_policy() const;
  inline ::isafetec::PrintSecPolicy* mutable_sec_policy();
  inline ::isafetec::PrintSecPolicy* release_sec_policy();
  
  // optional int32 printed = 29;
  inline bool has_printed() const;
  inline void clear_printed();
  static const int kPrintedFieldNumber = 29;
  inline ::google::protobuf::int32 printed() const;
  inline void set_printed(::google::protobuf::int32 value);
  
  // optional string guid = 30;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 30;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  
  // optional int32 printed_id = 31;
  inline bool has_printed_id() const;
  inline void clear_printed_id();
  static const int kPrintedIdFieldNumber = 31;
  inline ::google::protobuf::int32 printed_id() const;
  inline void set_printed_id(::google::protobuf::int32 value);
  
  // optional .isafetec.Printer_Paper_Source paper_source = 32;
  inline bool has_paper_source() const;
  inline void clear_paper_source();
  static const int kPaperSourceFieldNumber = 32;
  inline isafetec::Printer_Paper_Source paper_source() const;
  inline void set_paper_source(isafetec::Printer_Paper_Source value);
  
  // optional .isafetec.Print_Job_Type print_job_type = 33;
  inline bool has_print_job_type() const;
  inline void clear_print_job_type();
  static const int kPrintJobTypeFieldNumber = 33;
  inline isafetec::Print_Job_Type print_job_type() const;
  inline void set_print_job_type(isafetec::Print_Job_Type value);
  
  // optional int32 print_from = 34;
  inline bool has_print_from() const;
  inline void clear_print_from();
  static const int kPrintFromFieldNumber = 34;
  inline ::google::protobuf::int32 print_from() const;
  inline void set_print_from(::google::protobuf::int32 value);
  
  // optional int32 print_to = 35;
  inline bool has_print_to() const;
  inline void clear_print_to();
  static const int kPrintToFieldNumber = 35;
  inline ::google::protobuf::int32 print_to() const;
  inline void set_print_to(::google::protobuf::int32 value);
  
  // optional int32 tiff_use_physical_area = 36;
  inline bool has_tiff_use_physical_area() const;
  inline void clear_tiff_use_physical_area();
  static const int kTiffUsePhysicalAreaFieldNumber = 36;
  inline ::google::protobuf::int32 tiff_use_physical_area() const;
  inline void set_tiff_use_physical_area(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtSationReqPrintJob)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_job_path();
  inline void clear_has_job_path();
  inline void set_has_job_dir();
  inline void clear_has_job_dir();
  inline void set_has_submit_time();
  inline void clear_has_submit_time();
  inline void set_has_job_size();
  inline void clear_has_job_size();
  inline void set_has_zip_job_size();
  inline void clear_has_zip_job_size();
  inline void set_has_doc_name();
  inline void clear_has_doc_name();
  inline void set_has_paper_size();
  inline void clear_has_paper_size();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_copies();
  inline void clear_has_copies();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_total_page();
  inline void clear_has_total_page();
  inline void set_has_orientation();
  inline void clear_has_orientation();
  inline void set_has_double_print();
  inline void clear_has_double_print();
  inline void set_has_equip_host();
  inline void clear_has_equip_host();
  inline void set_has_win_user();
  inline void clear_has_win_user();
  inline void set_has_equip_ip();
  inline void clear_has_equip_ip();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_job_req_by();
  inline void clear_has_job_req_by();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_left_money();
  inline void clear_has_left_money();
  inline void set_has_special_left_money();
  inline void clear_has_special_left_money();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_project_id();
  inline void clear_has_project_id();
  inline void set_has_project_name();
  inline void clear_has_project_name();
  inline void set_has_sec_policy();
  inline void clear_has_sec_policy();
  inline void set_has_printed();
  inline void clear_has_printed();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_printed_id();
  inline void clear_has_printed_id();
  inline void set_has_paper_source();
  inline void clear_has_paper_source();
  inline void set_has_print_job_type();
  inline void clear_has_print_job_type();
  inline void set_has_print_from();
  inline void clear_has_print_from();
  inline void set_has_print_to();
  inline void clear_has_print_to();
  inline void set_has_tiff_use_physical_area();
  inline void clear_has_tiff_use_physical_area();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* job_path_;
  ::std::string* job_dir_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 job_size_;
  double submit_time_;
  ::std::string* doc_name_;
  ::google::protobuf::int32 zip_job_size_;
  ::google::protobuf::int32 paper_size_;
  ::std::string* page_type_;
  ::google::protobuf::int32 copies_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 total_page_;
  ::google::protobuf::int32 orientation_;
  ::std::string* equip_host_;
  ::std::string* win_user_;
  ::google::protobuf::int32 double_print_;
  int job_req_by_;
  ::std::string* equip_ip_;
  ::std::string* user_name_;
  double left_money_;
  ::google::protobuf::int32 user_id_;
  int price_type_;
  double special_left_money_;
  double price_;
  ::std::string* project_name_;
  ::google::protobuf::int32 project_id_;
  ::google::protobuf::int32 printed_;
  ::isafetec::PrintSecPolicy* sec_policy_;
  ::std::string* guid_;
  ::google::protobuf::int32 printed_id_;
  int paper_source_;
  int print_job_type_;
  ::google::protobuf::int32 print_from_;
  ::google::protobuf::int32 print_to_;
  ::google::protobuf::int32 tiff_use_physical_area_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(35 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtSationReqPrintJob* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtSationReqPrintJobList : public ::google::protobuf::Message {
 public:
  PrtSationReqPrintJobList();
  virtual ~PrtSationReqPrintJobList();
  
  PrtSationReqPrintJobList(const PrtSationReqPrintJobList& from);
  
  inline PrtSationReqPrintJobList& operator=(const PrtSationReqPrintJobList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtSationReqPrintJobList& default_instance();
  
  void Swap(PrtSationReqPrintJobList* other);
  
  // implements Message ----------------------------------------------
  
  PrtSationReqPrintJobList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtSationReqPrintJobList& from);
  void MergeFrom(const PrtSationReqPrintJobList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrtSationReqPrintJob list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::PrtSationReqPrintJob& list(int index) const;
  inline ::isafetec::PrtSationReqPrintJob* mutable_list(int index);
  inline ::isafetec::PrtSationReqPrintJob* PrtSationReqPrintJobList::list_ReleaseAt(int index); 
  inline void PrtSationReqPrintJobList::list_RemoveAt(int index); 
  inline ::isafetec::PrtSationReqPrintJob* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrtSationReqPrintJob >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrtSationReqPrintJob >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtSationReqPrintJobList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrtSationReqPrintJob > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtSationReqPrintJobList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtSationReqPrintHistoryJob : public ::google::protobuf::Message {
 public:
  PrtSationReqPrintHistoryJob();
  virtual ~PrtSationReqPrintHistoryJob();
  
  PrtSationReqPrintHistoryJob(const PrtSationReqPrintHistoryJob& from);
  
  inline PrtSationReqPrintHistoryJob& operator=(const PrtSationReqPrintHistoryJob& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtSationReqPrintHistoryJob& default_instance();
  
  void Swap(PrtSationReqPrintHistoryJob* other);
  
  // implements Message ----------------------------------------------
  
  PrtSationReqPrintHistoryJob* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtSationReqPrintHistoryJob& from);
  void MergeFrom(const PrtSationReqPrintHistoryJob& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.PrtSationReqPrintJob job = 1;
  inline bool has_job() const;
  inline void clear_job();
  static const int kJobFieldNumber = 1;
  inline const ::isafetec::PrtSationReqPrintJob& job() const;
  inline ::isafetec::PrtSationReqPrintJob* mutable_job();
  inline ::isafetec::PrtSationReqPrintJob* release_job();
  
  // optional int32 job_state = 2;
  inline bool has_job_state() const;
  inline void clear_job_state();
  static const int kJobStateFieldNumber = 2;
  inline ::google::protobuf::int32 job_state() const;
  inline void set_job_state(::google::protobuf::int32 value);
  
  // optional int32 job_file_deleted = 3;
  inline bool has_job_file_deleted() const;
  inline void clear_job_file_deleted();
  static const int kJobFileDeletedFieldNumber = 3;
  inline ::google::protobuf::int32 job_file_deleted() const;
  inline void set_job_file_deleted(::google::protobuf::int32 value);
  
  // optional double job_last_print_time = 4;
  inline bool has_job_last_print_time() const;
  inline void clear_job_last_print_time();
  static const int kJobLastPrintTimeFieldNumber = 4;
  inline double job_last_print_time() const;
  inline void set_job_last_print_time(double value);
  
  // optional double job_delete_time = 5;
  inline bool has_job_delete_time() const;
  inline void clear_job_delete_time();
  static const int kJobDeleteTimeFieldNumber = 5;
  inline double job_delete_time() const;
  inline void set_job_delete_time(double value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtSationReqPrintHistoryJob)
 private:
  inline void set_has_job();
  inline void clear_has_job();
  inline void set_has_job_state();
  inline void clear_has_job_state();
  inline void set_has_job_file_deleted();
  inline void clear_has_job_file_deleted();
  inline void set_has_job_last_print_time();
  inline void clear_has_job_last_print_time();
  inline void set_has_job_delete_time();
  inline void clear_has_job_delete_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::isafetec::PrtSationReqPrintJob* job_;
  ::google::protobuf::int32 job_state_;
  ::google::protobuf::int32 job_file_deleted_;
  double job_last_print_time_;
  double job_delete_time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtSationReqPrintHistoryJob* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtSationReqPrintHistoryJobList : public ::google::protobuf::Message {
 public:
  PrtSationReqPrintHistoryJobList();
  virtual ~PrtSationReqPrintHistoryJobList();
  
  PrtSationReqPrintHistoryJobList(const PrtSationReqPrintHistoryJobList& from);
  
  inline PrtSationReqPrintHistoryJobList& operator=(const PrtSationReqPrintHistoryJobList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtSationReqPrintHistoryJobList& default_instance();
  
  void Swap(PrtSationReqPrintHistoryJobList* other);
  
  // implements Message ----------------------------------------------
  
  PrtSationReqPrintHistoryJobList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtSationReqPrintHistoryJobList& from);
  void MergeFrom(const PrtSationReqPrintHistoryJobList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrtSationReqPrintHistoryJob list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::PrtSationReqPrintHistoryJob& list(int index) const;
  inline ::isafetec::PrtSationReqPrintHistoryJob* mutable_list(int index);
  inline ::isafetec::PrtSationReqPrintHistoryJob* PrtSationReqPrintHistoryJobList::list_ReleaseAt(int index); 
  inline void PrtSationReqPrintHistoryJobList::list_RemoveAt(int index); 
  inline ::isafetec::PrtSationReqPrintHistoryJob* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrtSationReqPrintHistoryJob >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrtSationReqPrintHistoryJob >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtSationReqPrintHistoryJobList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrtSationReqPrintHistoryJob > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtSationReqPrintHistoryJobList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CardInfo : public ::google::protobuf::Message {
 public:
  CardInfo();
  virtual ~CardInfo();
  
  CardInfo(const CardInfo& from);
  
  inline CardInfo& operator=(const CardInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CardInfo& default_instance();
  
  void Swap(CardInfo* other);
  
  // implements Message ----------------------------------------------
  
  CardInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CardInfo& from);
  void MergeFrom(const CardInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string code = 1;
  inline bool has_code() const;
  inline void clear_code();
  static const int kCodeFieldNumber = 1;
  inline const ::std::string& code() const;
  inline void set_code(const ::std::string& value);
  inline void set_code(const char* value);
  inline void set_code(const char* value, size_t size);
  inline ::std::string* mutable_code();
  inline ::std::string* release_code();
  
  // optional string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  
  // optional string dep_name = 3;
  inline bool has_dep_name() const;
  inline void clear_dep_name();
  static const int kDepNameFieldNumber = 3;
  inline const ::std::string& dep_name() const;
  inline void set_dep_name(const ::std::string& value);
  inline void set_dep_name(const char* value);
  inline void set_dep_name(const char* value, size_t size);
  inline ::std::string* mutable_dep_name();
  inline ::std::string* release_dep_name();
  
  // optional double left_money = 4;
  inline bool has_left_money() const;
  inline void clear_left_money();
  static const int kLeftMoneyFieldNumber = 4;
  inline double left_money() const;
  inline void set_left_money(double value);
  
  // optional string pwd = 5;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 5;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // optional string id_card_no = 6;
  inline bool has_id_card_no() const;
  inline void clear_id_card_no();
  static const int kIdCardNoFieldNumber = 6;
  inline const ::std::string& id_card_no() const;
  inline void set_id_card_no(const ::std::string& value);
  inline void set_id_card_no(const char* value);
  inline void set_id_card_no(const char* value, size_t size);
  inline ::std::string* mutable_id_card_no();
  inline ::std::string* release_id_card_no();
  
  // optional string citizen_card_no = 7;
  inline bool has_citizen_card_no() const;
  inline void clear_citizen_card_no();
  static const int kCitizenCardNoFieldNumber = 7;
  inline const ::std::string& citizen_card_no() const;
  inline void set_citizen_card_no(const ::std::string& value);
  inline void set_citizen_card_no(const char* value);
  inline void set_citizen_card_no(const char* value, size_t size);
  inline ::std::string* mutable_citizen_card_no();
  inline ::std::string* release_citizen_card_no();
  
  // optional string mobile_no = 8;
  inline bool has_mobile_no() const;
  inline void clear_mobile_no();
  static const int kMobileNoFieldNumber = 8;
  inline const ::std::string& mobile_no() const;
  inline void set_mobile_no(const ::std::string& value);
  inline void set_mobile_no(const char* value);
  inline void set_mobile_no(const char* value, size_t size);
  inline ::std::string* mutable_mobile_no();
  inline ::std::string* release_mobile_no();
  
  // @@protoc_insertion_point(class_scope:isafetec.CardInfo)
 private:
  inline void set_has_code();
  inline void clear_has_code();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_dep_name();
  inline void clear_has_dep_name();
  inline void set_has_left_money();
  inline void clear_has_left_money();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  inline void set_has_id_card_no();
  inline void clear_has_id_card_no();
  inline void set_has_citizen_card_no();
  inline void clear_has_citizen_card_no();
  inline void set_has_mobile_no();
  inline void clear_has_mobile_no();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* code_;
  ::std::string* user_name_;
  ::std::string* dep_name_;
  double left_money_;
  ::std::string* pwd_;
  ::std::string* id_card_no_;
  ::std::string* citizen_card_no_;
  ::std::string* mobile_no_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(8 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static CardInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationLogon : public ::google::protobuf::Message {
 public:
  PrtStationLogon();
  virtual ~PrtStationLogon();
  
  PrtStationLogon(const PrtStationLogon& from);
  
  inline PrtStationLogon& operator=(const PrtStationLogon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationLogon& default_instance();
  
  void Swap(PrtStationLogon* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationLogon& from);
  void MergeFrom(const PrtStationLogon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 ptr_id = 1;
  inline bool has_ptr_id() const;
  inline void clear_ptr_id();
  static const int kPtrIdFieldNumber = 1;
  inline ::google::protobuf::int32 ptr_id() const;
  inline void set_ptr_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string pwd = 3;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // optional int32 audit_ok = 4;
  inline bool has_audit_ok() const;
  inline void clear_audit_ok();
  static const int kAuditOkFieldNumber = 4;
  inline ::google::protobuf::int32 audit_ok() const;
  inline void set_audit_ok(::google::protobuf::int32 value);
  
  // optional .isafetec.CardInfo card = 5;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 5;
  inline const ::isafetec::CardInfo& card() const;
  inline ::isafetec::CardInfo* mutable_card();
  inline ::isafetec::CardInfo* release_card();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationLogon)
 private:
  inline void set_has_ptr_id();
  inline void clear_has_ptr_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  inline void set_has_audit_ok();
  inline void clear_has_audit_ok();
  inline void set_has_card();
  inline void clear_has_card();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 ptr_id_;
  ::google::protobuf::int32 audit_ok_;
  ::std::string* pwd_;
  ::isafetec::CardInfo* card_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationLogon* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationUserAccount : public ::google::protobuf::Message {
 public:
  PrtStationUserAccount();
  virtual ~PrtStationUserAccount();
  
  PrtStationUserAccount(const PrtStationUserAccount& from);
  
  inline PrtStationUserAccount& operator=(const PrtStationUserAccount& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationUserAccount& default_instance();
  
  void Swap(PrtStationUserAccount* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationUserAccount* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationUserAccount& from);
  void MergeFrom(const PrtStationUserAccount& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int32 account_id() const;
  inline void set_account_id(::google::protobuf::int32 value);
  
  // optional double left_money = 3;
  inline bool has_left_money() const;
  inline void clear_left_money();
  static const int kLeftMoneyFieldNumber = 3;
  inline double left_money() const;
  inline void set_left_money(double value);
  
  // optional double special_left_money = 4;
  inline bool has_special_left_money() const;
  inline void clear_special_left_money();
  static const int kSpecialLeftMoneyFieldNumber = 4;
  inline double special_left_money() const;
  inline void set_special_left_money(double value);
  
  // optional string account_name = 5;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 5;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  
  // optional string real_name = 6;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 6;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  
  // optional string card_no = 7;
  inline bool has_card_no() const;
  inline void clear_card_no();
  static const int kCardNoFieldNumber = 7;
  inline const ::std::string& card_no() const;
  inline void set_card_no(const ::std::string& value);
  inline void set_card_no(const char* value);
  inline void set_card_no(const char* value, size_t size);
  inline ::std::string* mutable_card_no();
  inline ::std::string* release_card_no();
  
  // optional string id_card_no = 8;
  inline bool has_id_card_no() const;
  inline void clear_id_card_no();
  static const int kIdCardNoFieldNumber = 8;
  inline const ::std::string& id_card_no() const;
  inline void set_id_card_no(const ::std::string& value);
  inline void set_id_card_no(const char* value);
  inline void set_id_card_no(const char* value, size_t size);
  inline ::std::string* mutable_id_card_no();
  inline ::std::string* release_id_card_no();
  
  // optional string citizen_card_no = 9;
  inline bool has_citizen_card_no() const;
  inline void clear_citizen_card_no();
  static const int kCitizenCardNoFieldNumber = 9;
  inline const ::std::string& citizen_card_no() const;
  inline void set_citizen_card_no(const ::std::string& value);
  inline void set_citizen_card_no(const char* value);
  inline void set_citizen_card_no(const char* value, size_t size);
  inline ::std::string* mutable_citizen_card_no();
  inline ::std::string* release_citizen_card_no();
  
  // optional string mobile_no = 10;
  inline bool has_mobile_no() const;
  inline void clear_mobile_no();
  static const int kMobileNoFieldNumber = 10;
  inline const ::std::string& mobile_no() const;
  inline void set_mobile_no(const ::std::string& value);
  inline void set_mobile_no(const char* value);
  inline void set_mobile_no(const char* value, size_t size);
  inline ::std::string* mutable_mobile_no();
  inline ::std::string* release_mobile_no();
  
  // optional string dep_name = 11;
  inline bool has_dep_name() const;
  inline void clear_dep_name();
  static const int kDepNameFieldNumber = 11;
  inline const ::std::string& dep_name() const;
  inline void set_dep_name(const ::std::string& value);
  inline void set_dep_name(const char* value);
  inline void set_dep_name(const char* value, size_t size);
  inline ::std::string* mutable_dep_name();
  inline ::std::string* release_dep_name();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationUserAccount)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_left_money();
  inline void clear_has_left_money();
  inline void set_has_special_left_money();
  inline void clear_has_special_left_money();
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_real_name();
  inline void clear_has_real_name();
  inline void set_has_card_no();
  inline void clear_has_card_no();
  inline void set_has_id_card_no();
  inline void clear_has_id_card_no();
  inline void set_has_citizen_card_no();
  inline void clear_has_citizen_card_no();
  inline void set_has_mobile_no();
  inline void clear_has_mobile_no();
  inline void set_has_dep_name();
  inline void clear_has_dep_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 account_id_;
  double left_money_;
  double special_left_money_;
  ::std::string* account_name_;
  ::std::string* real_name_;
  ::std::string* card_no_;
  ::std::string* id_card_no_;
  ::std::string* citizen_card_no_;
  ::std::string* mobile_no_;
  ::std::string* dep_name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationUserAccount* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationPrice : public ::google::protobuf::Message {
 public:
  PrtStationPrice();
  virtual ~PrtStationPrice();
  
  PrtStationPrice(const PrtStationPrice& from);
  
  inline PrtStationPrice& operator=(const PrtStationPrice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationPrice& default_instance();
  
  void Swap(PrtStationPrice* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationPrice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationPrice& from);
  void MergeFrom(const PrtStationPrice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_PRICE_TYPE price_type = 1;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 1;
  inline isafetec::JOB_PRICE_TYPE price_type() const;
  inline void set_price_type(isafetec::JOB_PRICE_TYPE value);
  
  // optional double a3_hb_price = 2;
  inline bool has_a3_hb_price() const;
  inline void clear_a3_hb_price();
  static const int kA3HbPriceFieldNumber = 2;
  inline double a3_hb_price() const;
  inline void set_a3_hb_price(double value);
  
  // optional double a3_color_price = 3;
  inline bool has_a3_color_price() const;
  inline void clear_a3_color_price();
  static const int kA3ColorPriceFieldNumber = 3;
  inline double a3_color_price() const;
  inline void set_a3_color_price(double value);
  
  // optional double a4_hb_price = 4;
  inline bool has_a4_hb_price() const;
  inline void clear_a4_hb_price();
  static const int kA4HbPriceFieldNumber = 4;
  inline double a4_hb_price() const;
  inline void set_a4_hb_price(double value);
  
  // optional double a4_color_price = 5;
  inline bool has_a4_color_price() const;
  inline void clear_a4_color_price();
  static const int kA4ColorPriceFieldNumber = 5;
  inline double a4_color_price() const;
  inline void set_a4_color_price(double value);
  
  // optional double a3_hb_price_duplex = 6;
  inline bool has_a3_hb_price_duplex() const;
  inline void clear_a3_hb_price_duplex();
  static const int kA3HbPriceDuplexFieldNumber = 6;
  inline double a3_hb_price_duplex() const;
  inline void set_a3_hb_price_duplex(double value);
  
  // optional double a3_color_price_duplex = 7;
  inline bool has_a3_color_price_duplex() const;
  inline void clear_a3_color_price_duplex();
  static const int kA3ColorPriceDuplexFieldNumber = 7;
  inline double a3_color_price_duplex() const;
  inline void set_a3_color_price_duplex(double value);
  
  // optional double a4_hb_price_duplex = 8;
  inline bool has_a4_hb_price_duplex() const;
  inline void clear_a4_hb_price_duplex();
  static const int kA4HbPriceDuplexFieldNumber = 8;
  inline double a4_hb_price_duplex() const;
  inline void set_a4_hb_price_duplex(double value);
  
  // optional double a4_color_price_duplex = 9;
  inline bool has_a4_color_price_duplex() const;
  inline void clear_a4_color_price_duplex();
  static const int kA4ColorPriceDuplexFieldNumber = 9;
  inline double a4_color_price_duplex() const;
  inline void set_a4_color_price_duplex(double value);
  
  // optional int32 IsSupportPrintDuplexPrice = 10;
  inline bool has_issupportprintduplexprice() const;
  inline void clear_issupportprintduplexprice();
  static const int kIsSupportPrintDuplexPriceFieldNumber = 10;
  inline ::google::protobuf::int32 issupportprintduplexprice() const;
  inline void set_issupportprintduplexprice(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationPrice)
 private:
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_a3_hb_price();
  inline void clear_has_a3_hb_price();
  inline void set_has_a3_color_price();
  inline void clear_has_a3_color_price();
  inline void set_has_a4_hb_price();
  inline void clear_has_a4_hb_price();
  inline void set_has_a4_color_price();
  inline void clear_has_a4_color_price();
  inline void set_has_a3_hb_price_duplex();
  inline void clear_has_a3_hb_price_duplex();
  inline void set_has_a3_color_price_duplex();
  inline void clear_has_a3_color_price_duplex();
  inline void set_has_a4_hb_price_duplex();
  inline void clear_has_a4_hb_price_duplex();
  inline void set_has_a4_color_price_duplex();
  inline void clear_has_a4_color_price_duplex();
  inline void set_has_issupportprintduplexprice();
  inline void clear_has_issupportprintduplexprice();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double a3_hb_price_;
  double a3_color_price_;
  double a4_hb_price_;
  double a4_color_price_;
  int price_type_;
  ::google::protobuf::int32 issupportprintduplexprice_;
  double a3_hb_price_duplex_;
  double a3_color_price_duplex_;
  double a4_hb_price_duplex_;
  double a4_color_price_duplex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationPrice* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationPriceStep : public ::google::protobuf::Message {
 public:
  PrtStationPriceStep();
  virtual ~PrtStationPriceStep();
  
  PrtStationPriceStep(const PrtStationPriceStep& from);
  
  inline PrtStationPriceStep& operator=(const PrtStationPriceStep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationPriceStep& default_instance();
  
  void Swap(PrtStationPriceStep* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationPriceStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationPriceStep& from);
  void MergeFrom(const PrtStationPriceStep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.PrtStationPrice price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline const ::isafetec::PrtStationPrice& price() const;
  inline ::isafetec::PrtStationPrice* mutable_price();
  inline ::isafetec::PrtStationPrice* release_price();
  
  // optional string PriceDesc = 2;
  inline bool has_pricedesc() const;
  inline void clear_pricedesc();
  static const int kPriceDescFieldNumber = 2;
  inline const ::std::string& pricedesc() const;
  inline void set_pricedesc(const ::std::string& value);
  inline void set_pricedesc(const char* value);
  inline void set_pricedesc(const char* value, size_t size);
  inline ::std::string* mutable_pricedesc();
  inline ::std::string* release_pricedesc();
  
  // optional int32 PageMin = 3;
  inline bool has_pagemin() const;
  inline void clear_pagemin();
  static const int kPageMinFieldNumber = 3;
  inline ::google::protobuf::int32 pagemin() const;
  inline void set_pagemin(::google::protobuf::int32 value);
  
  // optional int32 PageMax = 4;
  inline bool has_pagemax() const;
  inline void clear_pagemax();
  static const int kPageMaxFieldNumber = 4;
  inline ::google::protobuf::int32 pagemax() const;
  inline void set_pagemax(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationPriceStep)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_pricedesc();
  inline void clear_has_pricedesc();
  inline void set_has_pagemin();
  inline void clear_has_pagemin();
  inline void set_has_pagemax();
  inline void clear_has_pagemax();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::isafetec::PrtStationPrice* price_;
  ::std::string* pricedesc_;
  ::google::protobuf::int32 pagemin_;
  ::google::protobuf::int32 pagemax_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationPriceStep* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationPriceStepList : public ::google::protobuf::Message {
 public:
  PrtStationPriceStepList();
  virtual ~PrtStationPriceStepList();
  
  PrtStationPriceStepList(const PrtStationPriceStepList& from);
  
  inline PrtStationPriceStepList& operator=(const PrtStationPriceStepList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationPriceStepList& default_instance();
  
  void Swap(PrtStationPriceStepList* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationPriceStepList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationPriceStepList& from);
  void MergeFrom(const PrtStationPriceStepList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrtStationPriceStep list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::PrtStationPriceStep& list(int index) const;
  inline ::isafetec::PrtStationPriceStep* mutable_list(int index);
  inline ::isafetec::PrtStationPriceStep* PrtStationPriceStepList::list_ReleaseAt(int index); 
  inline void PrtStationPriceStepList::list_RemoveAt(int index); 
  inline ::isafetec::PrtStationPriceStep* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrtStationPriceStep >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrtStationPriceStep >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationPriceStepList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrtStationPriceStep > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationPriceStepList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtCopyPrice : public ::google::protobuf::Message {
 public:
  PrtCopyPrice();
  virtual ~PrtCopyPrice();
  
  PrtCopyPrice(const PrtCopyPrice& from);
  
  inline PrtCopyPrice& operator=(const PrtCopyPrice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtCopyPrice& default_instance();
  
  void Swap(PrtCopyPrice* other);
  
  // implements Message ----------------------------------------------
  
  PrtCopyPrice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtCopyPrice& from);
  void MergeFrom(const PrtCopyPrice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_PRICE_TYPE price_type = 1;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 1;
  inline isafetec::JOB_PRICE_TYPE price_type() const;
  inline void set_price_type(isafetec::JOB_PRICE_TYPE value);
  
  // optional double a3_hb_price = 2;
  inline bool has_a3_hb_price() const;
  inline void clear_a3_hb_price();
  static const int kA3HbPriceFieldNumber = 2;
  inline double a3_hb_price() const;
  inline void set_a3_hb_price(double value);
  
  // optional double a3_color_price = 3;
  inline bool has_a3_color_price() const;
  inline void clear_a3_color_price();
  static const int kA3ColorPriceFieldNumber = 3;
  inline double a3_color_price() const;
  inline void set_a3_color_price(double value);
  
  // optional double a4_hb_price = 4;
  inline bool has_a4_hb_price() const;
  inline void clear_a4_hb_price();
  static const int kA4HbPriceFieldNumber = 4;
  inline double a4_hb_price() const;
  inline void set_a4_hb_price(double value);
  
  // optional double a4_color_price = 5;
  inline bool has_a4_color_price() const;
  inline void clear_a4_color_price();
  static const int kA4ColorPriceFieldNumber = 5;
  inline double a4_color_price() const;
  inline void set_a4_color_price(double value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtCopyPrice)
 private:
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_a3_hb_price();
  inline void clear_has_a3_hb_price();
  inline void set_has_a3_color_price();
  inline void clear_has_a3_color_price();
  inline void set_has_a4_hb_price();
  inline void clear_has_a4_hb_price();
  inline void set_has_a4_color_price();
  inline void clear_has_a4_color_price();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double a3_hb_price_;
  double a3_color_price_;
  double a4_hb_price_;
  double a4_color_price_;
  int price_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtCopyPrice* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtCopyPriceStep : public ::google::protobuf::Message {
 public:
  PrtCopyPriceStep();
  virtual ~PrtCopyPriceStep();
  
  PrtCopyPriceStep(const PrtCopyPriceStep& from);
  
  inline PrtCopyPriceStep& operator=(const PrtCopyPriceStep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtCopyPriceStep& default_instance();
  
  void Swap(PrtCopyPriceStep* other);
  
  // implements Message ----------------------------------------------
  
  PrtCopyPriceStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtCopyPriceStep& from);
  void MergeFrom(const PrtCopyPriceStep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.PrtCopyPrice price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline const ::isafetec::PrtCopyPrice& price() const;
  inline ::isafetec::PrtCopyPrice* mutable_price();
  inline ::isafetec::PrtCopyPrice* release_price();
  
  // optional string PriceDesc = 2;
  inline bool has_pricedesc() const;
  inline void clear_pricedesc();
  static const int kPriceDescFieldNumber = 2;
  inline const ::std::string& pricedesc() const;
  inline void set_pricedesc(const ::std::string& value);
  inline void set_pricedesc(const char* value);
  inline void set_pricedesc(const char* value, size_t size);
  inline ::std::string* mutable_pricedesc();
  inline ::std::string* release_pricedesc();
  
  // optional int32 PageMin = 3;
  inline bool has_pagemin() const;
  inline void clear_pagemin();
  static const int kPageMinFieldNumber = 3;
  inline ::google::protobuf::int32 pagemin() const;
  inline void set_pagemin(::google::protobuf::int32 value);
  
  // optional int32 PageMax = 4;
  inline bool has_pagemax() const;
  inline void clear_pagemax();
  static const int kPageMaxFieldNumber = 4;
  inline ::google::protobuf::int32 pagemax() const;
  inline void set_pagemax(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtCopyPriceStep)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_pricedesc();
  inline void clear_has_pricedesc();
  inline void set_has_pagemin();
  inline void clear_has_pagemin();
  inline void set_has_pagemax();
  inline void clear_has_pagemax();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::isafetec::PrtCopyPrice* price_;
  ::std::string* pricedesc_;
  ::google::protobuf::int32 pagemin_;
  ::google::protobuf::int32 pagemax_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtCopyPriceStep* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtCopyPriceStepList : public ::google::protobuf::Message {
 public:
  PrtCopyPriceStepList();
  virtual ~PrtCopyPriceStepList();
  
  PrtCopyPriceStepList(const PrtCopyPriceStepList& from);
  
  inline PrtCopyPriceStepList& operator=(const PrtCopyPriceStepList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtCopyPriceStepList& default_instance();
  
  void Swap(PrtCopyPriceStepList* other);
  
  // implements Message ----------------------------------------------
  
  PrtCopyPriceStepList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtCopyPriceStepList& from);
  void MergeFrom(const PrtCopyPriceStepList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrtCopyPriceStep list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::PrtCopyPriceStep& list(int index) const;
  inline ::isafetec::PrtCopyPriceStep* mutable_list(int index);
  inline ::isafetec::PrtCopyPriceStep* PrtCopyPriceStepList::list_ReleaseAt(int index); 
  inline void PrtCopyPriceStepList::list_RemoveAt(int index); 
  inline ::isafetec::PrtCopyPriceStep* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrtCopyPriceStep >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrtCopyPriceStep >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtCopyPriceStepList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrtCopyPriceStep > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtCopyPriceStepList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtScanPrice : public ::google::protobuf::Message {
 public:
  PrtScanPrice();
  virtual ~PrtScanPrice();
  
  PrtScanPrice(const PrtScanPrice& from);
  
  inline PrtScanPrice& operator=(const PrtScanPrice& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtScanPrice& default_instance();
  
  void Swap(PrtScanPrice* other);
  
  // implements Message ----------------------------------------------
  
  PrtScanPrice* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtScanPrice& from);
  void MergeFrom(const PrtScanPrice& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_PRICE_TYPE price_type = 1;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 1;
  inline isafetec::JOB_PRICE_TYPE price_type() const;
  inline void set_price_type(isafetec::JOB_PRICE_TYPE value);
  
  // optional double hb_price = 2;
  inline bool has_hb_price() const;
  inline void clear_hb_price();
  static const int kHbPriceFieldNumber = 2;
  inline double hb_price() const;
  inline void set_hb_price(double value);
  
  // optional double color_price = 3;
  inline bool has_color_price() const;
  inline void clear_color_price();
  static const int kColorPriceFieldNumber = 3;
  inline double color_price() const;
  inline void set_color_price(double value);
  
  // optional int32 unit = 4;
  inline bool has_unit() const;
  inline void clear_unit();
  static const int kUnitFieldNumber = 4;
  inline ::google::protobuf::int32 unit() const;
  inline void set_unit(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtScanPrice)
 private:
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_hb_price();
  inline void clear_has_hb_price();
  inline void set_has_color_price();
  inline void clear_has_color_price();
  inline void set_has_unit();
  inline void clear_has_unit();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double hb_price_;
  int price_type_;
  ::google::protobuf::int32 unit_;
  double color_price_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtScanPrice* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtScanPriceStep : public ::google::protobuf::Message {
 public:
  PrtScanPriceStep();
  virtual ~PrtScanPriceStep();
  
  PrtScanPriceStep(const PrtScanPriceStep& from);
  
  inline PrtScanPriceStep& operator=(const PrtScanPriceStep& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtScanPriceStep& default_instance();
  
  void Swap(PrtScanPriceStep* other);
  
  // implements Message ----------------------------------------------
  
  PrtScanPriceStep* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtScanPriceStep& from);
  void MergeFrom(const PrtScanPriceStep& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.PrtScanPrice price = 1;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 1;
  inline const ::isafetec::PrtScanPrice& price() const;
  inline ::isafetec::PrtScanPrice* mutable_price();
  inline ::isafetec::PrtScanPrice* release_price();
  
  // optional string PriceDesc = 2;
  inline bool has_pricedesc() const;
  inline void clear_pricedesc();
  static const int kPriceDescFieldNumber = 2;
  inline const ::std::string& pricedesc() const;
  inline void set_pricedesc(const ::std::string& value);
  inline void set_pricedesc(const char* value);
  inline void set_pricedesc(const char* value, size_t size);
  inline ::std::string* mutable_pricedesc();
  inline ::std::string* release_pricedesc();
  
  // optional int32 PageMin = 3;
  inline bool has_pagemin() const;
  inline void clear_pagemin();
  static const int kPageMinFieldNumber = 3;
  inline ::google::protobuf::int32 pagemin() const;
  inline void set_pagemin(::google::protobuf::int32 value);
  
  // optional int32 PageMax = 4;
  inline bool has_pagemax() const;
  inline void clear_pagemax();
  static const int kPageMaxFieldNumber = 4;
  inline ::google::protobuf::int32 pagemax() const;
  inline void set_pagemax(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtScanPriceStep)
 private:
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_pricedesc();
  inline void clear_has_pricedesc();
  inline void set_has_pagemin();
  inline void clear_has_pagemin();
  inline void set_has_pagemax();
  inline void clear_has_pagemax();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::isafetec::PrtScanPrice* price_;
  ::std::string* pricedesc_;
  ::google::protobuf::int32 pagemin_;
  ::google::protobuf::int32 pagemax_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtScanPriceStep* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtScanPriceStepList : public ::google::protobuf::Message {
 public:
  PrtScanPriceStepList();
  virtual ~PrtScanPriceStepList();
  
  PrtScanPriceStepList(const PrtScanPriceStepList& from);
  
  inline PrtScanPriceStepList& operator=(const PrtScanPriceStepList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtScanPriceStepList& default_instance();
  
  void Swap(PrtScanPriceStepList* other);
  
  // implements Message ----------------------------------------------
  
  PrtScanPriceStepList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtScanPriceStepList& from);
  void MergeFrom(const PrtScanPriceStepList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrtScanPriceStep list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::PrtScanPriceStep& list(int index) const;
  inline ::isafetec::PrtScanPriceStep* mutable_list(int index);
  inline ::isafetec::PrtScanPriceStep* PrtScanPriceStepList::list_ReleaseAt(int index); 
  inline void PrtScanPriceStepList::list_RemoveAt(int index); 
  inline ::isafetec::PrtScanPriceStep* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrtScanPriceStep >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrtScanPriceStep >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtScanPriceStepList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrtScanPriceStep > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtScanPriceStepList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationCheckUserResult : public ::google::protobuf::Message {
 public:
  PrtStationCheckUserResult();
  virtual ~PrtStationCheckUserResult();
  
  PrtStationCheckUserResult(const PrtStationCheckUserResult& from);
  
  inline PrtStationCheckUserResult& operator=(const PrtStationCheckUserResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationCheckUserResult& default_instance();
  
  void Swap(PrtStationCheckUserResult* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationCheckUserResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationCheckUserResult& from);
  void MergeFrom(const PrtStationCheckUserResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.PrtStationUserAccount account = 1;
  inline bool has_account() const;
  inline void clear_account();
  static const int kAccountFieldNumber = 1;
  inline const ::isafetec::PrtStationUserAccount& account() const;
  inline ::isafetec::PrtStationUserAccount* mutable_account();
  inline ::isafetec::PrtStationUserAccount* release_account();
  
  // optional .isafetec.PrtStationPrice price = 2;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 2;
  inline const ::isafetec::PrtStationPrice& price() const;
  inline ::isafetec::PrtStationPrice* mutable_price();
  inline ::isafetec::PrtStationPrice* release_price();
  
  // optional .isafetec.PrtCopyPrice copy_price = 3;
  inline bool has_copy_price() const;
  inline void clear_copy_price();
  static const int kCopyPriceFieldNumber = 3;
  inline const ::isafetec::PrtCopyPrice& copy_price() const;
  inline ::isafetec::PrtCopyPrice* mutable_copy_price();
  inline ::isafetec::PrtCopyPrice* release_copy_price();
  
  // optional .isafetec.PrtScanPrice scan_price = 4;
  inline bool has_scan_price() const;
  inline void clear_scan_price();
  static const int kScanPriceFieldNumber = 4;
  inline const ::isafetec::PrtScanPrice& scan_price() const;
  inline ::isafetec::PrtScanPrice* mutable_scan_price();
  inline ::isafetec::PrtScanPrice* release_scan_price();
  
  // optional int32 prt_id = 8;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 8;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional .isafetec.PrtStationPriceStepList print_price_step_list = 9;
  inline bool has_print_price_step_list() const;
  inline void clear_print_price_step_list();
  static const int kPrintPriceStepListFieldNumber = 9;
  inline const ::isafetec::PrtStationPriceStepList& print_price_step_list() const;
  inline ::isafetec::PrtStationPriceStepList* mutable_print_price_step_list();
  inline ::isafetec::PrtStationPriceStepList* release_print_price_step_list();
  
  // optional .isafetec.PrtCopyPriceStepList copy_price_step_list = 10;
  inline bool has_copy_price_step_list() const;
  inline void clear_copy_price_step_list();
  static const int kCopyPriceStepListFieldNumber = 10;
  inline const ::isafetec::PrtCopyPriceStepList& copy_price_step_list() const;
  inline ::isafetec::PrtCopyPriceStepList* mutable_copy_price_step_list();
  inline ::isafetec::PrtCopyPriceStepList* release_copy_price_step_list();
  
  // optional .isafetec.PrtScanPriceStepList scan_price_step_list = 11;
  inline bool has_scan_price_step_list() const;
  inline void clear_scan_price_step_list();
  static const int kScanPriceStepListFieldNumber = 11;
  inline const ::isafetec::PrtScanPriceStepList& scan_price_step_list() const;
  inline ::isafetec::PrtScanPriceStepList* mutable_scan_price_step_list();
  inline ::isafetec::PrtScanPriceStepList* release_scan_price_step_list();
  
  // optional .isafetec.PrintLimitPolicy print_limit_policy = 12;
  inline bool has_print_limit_policy() const;
  inline void clear_print_limit_policy();
  static const int kPrintLimitPolicyFieldNumber = 12;
  inline const ::isafetec::PrintLimitPolicy& print_limit_policy() const;
  inline ::isafetec::PrintLimitPolicy* mutable_print_limit_policy();
  inline ::isafetec::PrintLimitPolicy* release_print_limit_policy();
  
  // optional .isafetec.CopyLimitPolicy copy_limit_policy = 13;
  inline bool has_copy_limit_policy() const;
  inline void clear_copy_limit_policy();
  static const int kCopyLimitPolicyFieldNumber = 13;
  inline const ::isafetec::CopyLimitPolicy& copy_limit_policy() const;
  inline ::isafetec::CopyLimitPolicy* mutable_copy_limit_policy();
  inline ::isafetec::CopyLimitPolicy* release_copy_limit_policy();
  
  // optional .isafetec.ScanLimitPolicy scan_limit_policy = 14;
  inline bool has_scan_limit_policy() const;
  inline void clear_scan_limit_policy();
  static const int kScanLimitPolicyFieldNumber = 14;
  inline const ::isafetec::ScanLimitPolicy& scan_limit_policy() const;
  inline ::isafetec::ScanLimitPolicy* mutable_scan_limit_policy();
  inline ::isafetec::ScanLimitPolicy* release_scan_limit_policy();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationCheckUserResult)
 private:
  inline void set_has_account();
  inline void clear_has_account();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_copy_price();
  inline void clear_has_copy_price();
  inline void set_has_scan_price();
  inline void clear_has_scan_price();
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_print_price_step_list();
  inline void clear_has_print_price_step_list();
  inline void set_has_copy_price_step_list();
  inline void clear_has_copy_price_step_list();
  inline void set_has_scan_price_step_list();
  inline void clear_has_scan_price_step_list();
  inline void set_has_print_limit_policy();
  inline void clear_has_print_limit_policy();
  inline void set_has_copy_limit_policy();
  inline void clear_has_copy_limit_policy();
  inline void set_has_scan_limit_policy();
  inline void clear_has_scan_limit_policy();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::isafetec::PrtStationUserAccount* account_;
  ::isafetec::PrtStationPrice* price_;
  ::isafetec::PrtCopyPrice* copy_price_;
  ::isafetec::PrtScanPrice* scan_price_;
  ::isafetec::PrtStationPriceStepList* print_price_step_list_;
  ::isafetec::PrtCopyPriceStepList* copy_price_step_list_;
  ::isafetec::PrtScanPriceStepList* scan_price_step_list_;
  ::isafetec::PrintLimitPolicy* print_limit_policy_;
  ::isafetec::CopyLimitPolicy* copy_limit_policy_;
  ::isafetec::ScanLimitPolicy* scan_limit_policy_;
  ::google::protobuf::int32 prt_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationCheckUserResult* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationChargeErr : public ::google::protobuf::Message {
 public:
  PrtStationChargeErr();
  virtual ~PrtStationChargeErr();
  
  PrtStationChargeErr(const PrtStationChargeErr& from);
  
  inline PrtStationChargeErr& operator=(const PrtStationChargeErr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationChargeErr& default_instance();
  
  void Swap(PrtStationChargeErr* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationChargeErr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationChargeErr& from);
  void MergeFrom(const PrtStationChargeErr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 job_id = 1;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 1;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // optional int32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional bool need_update_job_state = 3;
  inline bool has_need_update_job_state() const;
  inline void clear_need_update_job_state();
  static const int kNeedUpdateJobStateFieldNumber = 3;
  inline bool need_update_job_state() const;
  inline void set_need_update_job_state(bool value);
  
  // optional .isafetec.SUBMIT_JOB_STATE job_new_state = 4;
  inline bool has_job_new_state() const;
  inline void clear_job_new_state();
  static const int kJobNewStateFieldNumber = 4;
  inline isafetec::SUBMIT_JOB_STATE job_new_state() const;
  inline void set_job_new_state(isafetec::SUBMIT_JOB_STATE value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationChargeErr)
 private:
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_need_update_job_state();
  inline void clear_has_need_update_job_state();
  inline void set_has_job_new_state();
  inline void clear_has_job_new_state();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 job_id_;
  ::google::protobuf::int32 user_id_;
  bool need_update_job_state_;
  int job_new_state_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationChargeErr* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationInfo : public ::google::protobuf::Message {
 public:
  PrtStationInfo();
  virtual ~PrtStationInfo();
  
  PrtStationInfo(const PrtStationInfo& from);
  
  inline PrtStationInfo& operator=(const PrtStationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationInfo& default_instance();
  
  void Swap(PrtStationInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationInfo& from);
  void MergeFrom(const PrtStationInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional int32 allow_order = 2;
  inline bool has_allow_order() const;
  inline void clear_allow_order();
  static const int kAllowOrderFieldNumber = 2;
  inline ::google::protobuf::int32 allow_order() const;
  inline void set_allow_order(::google::protobuf::int32 value);
  
  // optional int32 check_order_internal = 3;
  inline bool has_check_order_internal() const;
  inline void clear_check_order_internal();
  static const int kCheckOrderInternalFieldNumber = 3;
  inline ::google::protobuf::int32 check_order_internal() const;
  inline void set_check_order_internal(::google::protobuf::int32 value);
  
  // optional int32 allow_direct_print = 4;
  inline bool has_allow_direct_print() const;
  inline void clear_allow_direct_print();
  static const int kAllowDirectPrintFieldNumber = 4;
  inline ::google::protobuf::int32 allow_direct_print() const;
  inline void set_allow_direct_print(::google::protobuf::int32 value);
  
  // optional int32 check_direct_job_internal = 5;
  inline bool has_check_direct_job_internal() const;
  inline void clear_check_direct_job_internal();
  static const int kCheckDirectJobInternalFieldNumber = 5;
  inline ::google::protobuf::int32 check_direct_job_internal() const;
  inline void set_check_direct_job_internal(::google::protobuf::int32 value);
  
  // optional bool on_server = 6;
  inline bool has_on_server() const;
  inline void clear_on_server();
  static const int kOnServerFieldNumber = 6;
  inline bool on_server() const;
  inline void set_on_server(bool value);
  
  // optional string printer_name = 7;
  inline bool has_printer_name() const;
  inline void clear_printer_name();
  static const int kPrinterNameFieldNumber = 7;
  inline const ::std::string& printer_name() const;
  inline void set_printer_name(const ::std::string& value);
  inline void set_printer_name(const char* value);
  inline void set_printer_name(const char* value, size_t size);
  inline ::std::string* mutable_printer_name();
  inline ::std::string* release_printer_name();
  
  // optional string fun_code = 8;
  inline bool has_fun_code() const;
  inline void clear_fun_code();
  static const int kFunCodeFieldNumber = 8;
  inline const ::std::string& fun_code() const;
  inline void set_fun_code(const ::std::string& value);
  inline void set_fun_code(const char* value);
  inline void set_fun_code(const char* value, size_t size);
  inline ::std::string* mutable_fun_code();
  inline ::std::string* release_fun_code();
  
  // optional bool support_color = 9;
  inline bool has_support_color() const;
  inline void clear_support_color();
  static const int kSupportColorFieldNumber = 9;
  inline bool support_color() const;
  inline void set_support_color(bool value);
  
  // optional double begin_time = 10;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 10;
  inline double begin_time() const;
  inline void set_begin_time(double value);
  
  // optional double end_time = 11;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 11;
  inline double end_time() const;
  inline void set_end_time(double value);
  
  // optional string prt_name = 12;
  inline bool has_prt_name() const;
  inline void clear_prt_name();
  static const int kPrtNameFieldNumber = 12;
  inline const ::std::string& prt_name() const;
  inline void set_prt_name(const ::std::string& value);
  inline void set_prt_name(const char* value);
  inline void set_prt_name(const char* value, size_t size);
  inline ::std::string* mutable_prt_name();
  inline ::std::string* release_prt_name();
  
  // optional int32 support_duplex = 13;
  inline bool has_support_duplex() const;
  inline void clear_support_duplex();
  static const int kSupportDuplexFieldNumber = 13;
  inline ::google::protobuf::int32 support_duplex() const;
  inline void set_support_duplex(::google::protobuf::int32 value);
  
  // optional .isafetec.PrtStationPrice print_price = 14;
  inline bool has_print_price() const;
  inline void clear_print_price();
  static const int kPrintPriceFieldNumber = 14;
  inline const ::isafetec::PrtStationPrice& print_price() const;
  inline ::isafetec::PrtStationPrice* mutable_print_price();
  inline ::isafetec::PrtStationPrice* release_print_price();
  
  // optional .isafetec.PrtCopyPrice copy_price = 15;
  inline bool has_copy_price() const;
  inline void clear_copy_price();
  static const int kCopyPriceFieldNumber = 15;
  inline const ::isafetec::PrtCopyPrice& copy_price() const;
  inline ::isafetec::PrtCopyPrice* mutable_copy_price();
  inline ::isafetec::PrtCopyPrice* release_copy_price();
  
  // optional .isafetec.PrtScanPrice scan_price = 16;
  inline bool has_scan_price() const;
  inline void clear_scan_price();
  static const int kScanPriceFieldNumber = 16;
  inline const ::isafetec::PrtScanPrice& scan_price() const;
  inline ::isafetec::PrtScanPrice* mutable_scan_price();
  inline ::isafetec::PrtScanPrice* release_scan_price();
  
  // optional string printer_ip = 17;
  inline bool has_printer_ip() const;
  inline void clear_printer_ip();
  static const int kPrinterIpFieldNumber = 17;
  inline const ::std::string& printer_ip() const;
  inline void set_printer_ip(const ::std::string& value);
  inline void set_printer_ip(const char* value);
  inline void set_printer_ip(const char* value, size_t size);
  inline ::std::string* mutable_printer_ip();
  inline ::std::string* release_printer_ip();
  
  // optional string print_station_ip = 18;
  inline bool has_print_station_ip() const;
  inline void clear_print_station_ip();
  static const int kPrintStationIpFieldNumber = 18;
  inline const ::std::string& print_station_ip() const;
  inline void set_print_station_ip(const ::std::string& value);
  inline void set_print_station_ip(const char* value);
  inline void set_print_station_ip(const char* value, size_t size);
  inline ::std::string* mutable_print_station_ip();
  inline ::std::string* release_print_station_ip();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_allow_order();
  inline void clear_has_allow_order();
  inline void set_has_check_order_internal();
  inline void clear_has_check_order_internal();
  inline void set_has_allow_direct_print();
  inline void clear_has_allow_direct_print();
  inline void set_has_check_direct_job_internal();
  inline void clear_has_check_direct_job_internal();
  inline void set_has_on_server();
  inline void clear_has_on_server();
  inline void set_has_printer_name();
  inline void clear_has_printer_name();
  inline void set_has_fun_code();
  inline void clear_has_fun_code();
  inline void set_has_support_color();
  inline void clear_has_support_color();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_prt_name();
  inline void clear_has_prt_name();
  inline void set_has_support_duplex();
  inline void clear_has_support_duplex();
  inline void set_has_print_price();
  inline void clear_has_print_price();
  inline void set_has_copy_price();
  inline void clear_has_copy_price();
  inline void set_has_scan_price();
  inline void clear_has_scan_price();
  inline void set_has_printer_ip();
  inline void clear_has_printer_ip();
  inline void set_has_print_station_ip();
  inline void clear_has_print_station_ip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 allow_order_;
  ::google::protobuf::int32 check_order_internal_;
  ::google::protobuf::int32 allow_direct_print_;
  ::google::protobuf::int32 check_direct_job_internal_;
  bool on_server_;
  bool support_color_;
  ::std::string* printer_name_;
  ::std::string* fun_code_;
  double begin_time_;
  double end_time_;
  ::std::string* prt_name_;
  ::isafetec::PrtStationPrice* print_price_;
  ::isafetec::PrtCopyPrice* copy_price_;
  ::isafetec::PrtScanPrice* scan_price_;
  ::std::string* printer_ip_;
  ::std::string* print_station_ip_;
  ::google::protobuf::int32 support_duplex_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(18 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT AutoAddPrtStationInfo : public ::google::protobuf::Message {
 public:
  AutoAddPrtStationInfo();
  virtual ~AutoAddPrtStationInfo();
  
  AutoAddPrtStationInfo(const AutoAddPrtStationInfo& from);
  
  inline AutoAddPrtStationInfo& operator=(const AutoAddPrtStationInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AutoAddPrtStationInfo& default_instance();
  
  void Swap(AutoAddPrtStationInfo* other);
  
  // implements Message ----------------------------------------------
  
  AutoAddPrtStationInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AutoAddPrtStationInfo& from);
  void MergeFrom(const AutoAddPrtStationInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string printer_name = 1;
  inline bool has_printer_name() const;
  inline void clear_printer_name();
  static const int kPrinterNameFieldNumber = 1;
  inline const ::std::string& printer_name() const;
  inline void set_printer_name(const ::std::string& value);
  inline void set_printer_name(const char* value);
  inline void set_printer_name(const char* value, size_t size);
  inline ::std::string* mutable_printer_name();
  inline ::std::string* release_printer_name();
  
  // optional int32 printer_resolution = 2;
  inline bool has_printer_resolution() const;
  inline void clear_printer_resolution();
  static const int kPrinterResolutionFieldNumber = 2;
  inline ::google::protobuf::int32 printer_resolution() const;
  inline void set_printer_resolution(::google::protobuf::int32 value);
  
  // optional int32 printer_speed = 3;
  inline bool has_printer_speed() const;
  inline void clear_printer_speed();
  static const int kPrinterSpeedFieldNumber = 3;
  inline ::google::protobuf::int32 printer_speed() const;
  inline void set_printer_speed(::google::protobuf::int32 value);
  
  // optional int32 printer_color = 4;
  inline bool has_printer_color() const;
  inline void clear_printer_color();
  static const int kPrinterColorFieldNumber = 4;
  inline ::google::protobuf::int32 printer_color() const;
  inline void set_printer_color(::google::protobuf::int32 value);
  
  // optional string prt_station_name = 5;
  inline bool has_prt_station_name() const;
  inline void clear_prt_station_name();
  static const int kPrtStationNameFieldNumber = 5;
  inline const ::std::string& prt_station_name() const;
  inline void set_prt_station_name(const ::std::string& value);
  inline void set_prt_station_name(const char* value);
  inline void set_prt_station_name(const char* value, size_t size);
  inline ::std::string* mutable_prt_station_name();
  inline ::std::string* release_prt_station_name();
  
  // optional string prt_station_comment = 6;
  inline bool has_prt_station_comment() const;
  inline void clear_prt_station_comment();
  static const int kPrtStationCommentFieldNumber = 6;
  inline const ::std::string& prt_station_comment() const;
  inline void set_prt_station_comment(const ::std::string& value);
  inline void set_prt_station_comment(const char* value);
  inline void set_prt_station_comment(const char* value, size_t size);
  inline ::std::string* mutable_prt_station_comment();
  inline ::std::string* release_prt_station_comment();
  
  // optional double a3_hb_price = 7;
  inline bool has_a3_hb_price() const;
  inline void clear_a3_hb_price();
  static const int kA3HbPriceFieldNumber = 7;
  inline double a3_hb_price() const;
  inline void set_a3_hb_price(double value);
  
  // optional double a3_color_price = 8;
  inline bool has_a3_color_price() const;
  inline void clear_a3_color_price();
  static const int kA3ColorPriceFieldNumber = 8;
  inline double a3_color_price() const;
  inline void set_a3_color_price(double value);
  
  // optional double a4_hb_price = 9;
  inline bool has_a4_hb_price() const;
  inline void clear_a4_hb_price();
  static const int kA4HbPriceFieldNumber = 9;
  inline double a4_hb_price() const;
  inline void set_a4_hb_price(double value);
  
  // optional double a4_color_price = 10;
  inline bool has_a4_color_price() const;
  inline void clear_a4_color_price();
  static const int kA4ColorPriceFieldNumber = 10;
  inline double a4_color_price() const;
  inline void set_a4_color_price(double value);
  
  // optional string printer_ip = 11;
  inline bool has_printer_ip() const;
  inline void clear_printer_ip();
  static const int kPrinterIpFieldNumber = 11;
  inline const ::std::string& printer_ip() const;
  inline void set_printer_ip(const ::std::string& value);
  inline void set_printer_ip(const char* value);
  inline void set_printer_ip(const char* value, size_t size);
  inline ::std::string* mutable_printer_ip();
  inline ::std::string* release_printer_ip();
  
  // @@protoc_insertion_point(class_scope:isafetec.AutoAddPrtStationInfo)
 private:
  inline void set_has_printer_name();
  inline void clear_has_printer_name();
  inline void set_has_printer_resolution();
  inline void clear_has_printer_resolution();
  inline void set_has_printer_speed();
  inline void clear_has_printer_speed();
  inline void set_has_printer_color();
  inline void clear_has_printer_color();
  inline void set_has_prt_station_name();
  inline void clear_has_prt_station_name();
  inline void set_has_prt_station_comment();
  inline void clear_has_prt_station_comment();
  inline void set_has_a3_hb_price();
  inline void clear_has_a3_hb_price();
  inline void set_has_a3_color_price();
  inline void clear_has_a3_color_price();
  inline void set_has_a4_hb_price();
  inline void clear_has_a4_hb_price();
  inline void set_has_a4_color_price();
  inline void clear_has_a4_color_price();
  inline void set_has_printer_ip();
  inline void clear_has_printer_ip();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* printer_name_;
  ::google::protobuf::int32 printer_resolution_;
  ::google::protobuf::int32 printer_speed_;
  ::std::string* prt_station_name_;
  ::std::string* prt_station_comment_;
  double a3_hb_price_;
  double a3_color_price_;
  double a4_hb_price_;
  double a4_color_price_;
  ::std::string* printer_ip_;
  ::google::protobuf::int32 printer_color_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static AutoAddPrtStationInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintProjectSampleInfo : public ::google::protobuf::Message {
 public:
  PrintProjectSampleInfo();
  virtual ~PrintProjectSampleInfo();
  
  PrintProjectSampleInfo(const PrintProjectSampleInfo& from);
  
  inline PrintProjectSampleInfo& operator=(const PrintProjectSampleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintProjectSampleInfo& default_instance();
  
  void Swap(PrintProjectSampleInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrintProjectSampleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintProjectSampleInfo& from);
  void MergeFrom(const PrintProjectSampleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintProjectSampleInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintProjectSampleInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintStationSampleInfo : public ::google::protobuf::Message {
 public:
  PrintStationSampleInfo();
  virtual ~PrintStationSampleInfo();
  
  PrintStationSampleInfo(const PrintStationSampleInfo& from);
  
  inline PrintStationSampleInfo& operator=(const PrintStationSampleInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintStationSampleInfo& default_instance();
  
  void Swap(PrintStationSampleInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrintStationSampleInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintStationSampleInfo& from);
  void MergeFrom(const PrintStationSampleInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string addr = 3;
  inline bool has_addr() const;
  inline void clear_addr();
  static const int kAddrFieldNumber = 3;
  inline const ::std::string& addr() const;
  inline void set_addr(const ::std::string& value);
  inline void set_addr(const char* value);
  inline void set_addr(const char* value, size_t size);
  inline ::std::string* mutable_addr();
  inline ::std::string* release_addr();
  
  // optional string comment = 4;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 4;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintStationSampleInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_addr();
  inline void clear_has_addr();
  inline void set_has_comment();
  inline void clear_has_comment();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* addr_;
  ::std::string* comment_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintStationSampleInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintJobSecTypeInfo : public ::google::protobuf::Message {
 public:
  PrintJobSecTypeInfo();
  virtual ~PrintJobSecTypeInfo();
  
  PrintJobSecTypeInfo(const PrintJobSecTypeInfo& from);
  
  inline PrintJobSecTypeInfo& operator=(const PrintJobSecTypeInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintJobSecTypeInfo& default_instance();
  
  void Swap(PrintJobSecTypeInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrintJobSecTypeInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintJobSecTypeInfo& from);
  void MergeFrom(const PrintJobSecTypeInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_STORAGE_TYPE type = 1;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 1;
  inline isafetec::JOB_STORAGE_TYPE type() const;
  inline void set_type(isafetec::JOB_STORAGE_TYPE value);
  
  // optional string desc = 2;
  inline bool has_desc() const;
  inline void clear_desc();
  static const int kDescFieldNumber = 2;
  inline const ::std::string& desc() const;
  inline void set_desc(const ::std::string& value);
  inline void set_desc(const char* value);
  inline void set_desc(const char* value, size_t size);
  inline ::std::string* mutable_desc();
  inline ::std::string* release_desc();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintJobSecTypeInfo)
 private:
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_desc();
  inline void clear_has_desc();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* desc_;
  int type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintJobSecTypeInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintCtlReqInfo : public ::google::protobuf::Message {
 public:
  PrintCtlReqInfo();
  virtual ~PrintCtlReqInfo();
  
  PrintCtlReqInfo(const PrintCtlReqInfo& from);
  
  inline PrintCtlReqInfo& operator=(const PrintCtlReqInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintCtlReqInfo& default_instance();
  
  void Swap(PrintCtlReqInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrintCtlReqInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintCtlReqInfo& from);
  void MergeFrom(const PrintCtlReqInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrintStationSampleInfo order_print_list = 1;
  inline int order_print_list_size() const;
  inline void clear_order_print_list();
  static const int kOrderPrintListFieldNumber = 1;
  inline const ::isafetec::PrintStationSampleInfo& order_print_list(int index) const;
  inline ::isafetec::PrintStationSampleInfo* mutable_order_print_list(int index);
  inline ::isafetec::PrintStationSampleInfo* PrintCtlReqInfo::order_print_list_ReleaseAt(int index); 
  inline void PrintCtlReqInfo::order_print_list_RemoveAt(int index); 
  inline ::isafetec::PrintStationSampleInfo* add_order_print_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrintStationSampleInfo >&
      order_print_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrintStationSampleInfo >*
      mutable_order_print_list();
  
  // repeated .isafetec.PrintProjectSampleInfo project_list = 2;
  inline int project_list_size() const;
  inline void clear_project_list();
  static const int kProjectListFieldNumber = 2;
  inline const ::isafetec::PrintProjectSampleInfo& project_list(int index) const;
  inline ::isafetec::PrintProjectSampleInfo* mutable_project_list(int index);
  inline ::isafetec::PrintProjectSampleInfo* PrintCtlReqInfo::project_list_ReleaseAt(int index); 
  inline void PrintCtlReqInfo::project_list_RemoveAt(int index); 
  inline ::isafetec::PrintProjectSampleInfo* add_project_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrintProjectSampleInfo >&
      project_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrintProjectSampleInfo >*
      mutable_project_list();
  
  // repeated .isafetec.PrintStationSampleInfo direct_print_list = 3;
  inline int direct_print_list_size() const;
  inline void clear_direct_print_list();
  static const int kDirectPrintListFieldNumber = 3;
  inline const ::isafetec::PrintStationSampleInfo& direct_print_list(int index) const;
  inline ::isafetec::PrintStationSampleInfo* mutable_direct_print_list(int index);
  inline ::isafetec::PrintStationSampleInfo* PrintCtlReqInfo::direct_print_list_ReleaseAt(int index); 
  inline void PrintCtlReqInfo::direct_print_list_RemoveAt(int index); 
  inline ::isafetec::PrintStationSampleInfo* add_direct_print_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrintStationSampleInfo >&
      direct_print_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrintStationSampleInfo >*
      mutable_direct_print_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintCtlReqInfo)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrintStationSampleInfo > order_print_list_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrintProjectSampleInfo > project_list_;
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrintStationSampleInfo > direct_print_list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintCtlReqInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintCltLogon : public ::google::protobuf::Message {
 public:
  PrintCltLogon();
  virtual ~PrintCltLogon();
  
  PrintCltLogon(const PrintCltLogon& from);
  
  inline PrintCltLogon& operator=(const PrintCltLogon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintCltLogon& default_instance();
  
  void Swap(PrintCltLogon* other);
  
  // implements Message ----------------------------------------------
  
  PrintCltLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintCltLogon& from);
  void MergeFrom(const PrintCltLogon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string pwd = 3;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // optional int32 project_id = 4;
  inline bool has_project_id() const;
  inline void clear_project_id();
  static const int kProjectIdFieldNumber = 4;
  inline ::google::protobuf::int32 project_id() const;
  inline void set_project_id(::google::protobuf::int32 value);
  
  // optional int32 print_station_id = 5;
  inline bool has_print_station_id() const;
  inline void clear_print_station_id();
  static const int kPrintStationIdFieldNumber = 5;
  inline ::google::protobuf::int32 print_station_id() const;
  inline void set_print_station_id(::google::protobuf::int32 value);
  
  // optional int32 order_station_id = 6;
  inline bool has_order_station_id() const;
  inline void clear_order_station_id();
  static const int kOrderStationIdFieldNumber = 6;
  inline ::google::protobuf::int32 order_station_id() const;
  inline void set_order_station_id(::google::protobuf::int32 value);
  
  // optional int32 job_id = 7;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 7;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // optional string page_type = 8;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 8;
  inline const ::std::string& page_type() const;
  inline void set_page_type(const ::std::string& value);
  inline void set_page_type(const char* value);
  inline void set_page_type(const char* value, size_t size);
  inline ::std::string* mutable_page_type();
  inline ::std::string* release_page_type();
  
  // optional int32 page_count = 9;
  inline bool has_page_count() const;
  inline void clear_page_count();
  static const int kPageCountFieldNumber = 9;
  inline ::google::protobuf::int32 page_count() const;
  inline void set_page_count(::google::protobuf::int32 value);
  
  // optional int32 color = 10;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 10;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional int32 job_size = 11;
  inline bool has_job_size() const;
  inline void clear_job_size();
  static const int kJobSizeFieldNumber = 11;
  inline ::google::protobuf::int32 job_size() const;
  inline void set_job_size(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintCltLogon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  inline void set_has_project_id();
  inline void clear_has_project_id();
  inline void set_has_print_station_id();
  inline void clear_has_print_station_id();
  inline void set_has_order_station_id();
  inline void clear_has_order_station_id();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_page_count();
  inline void clear_has_page_count();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_job_size();
  inline void clear_has_job_size();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 project_id_;
  ::std::string* pwd_;
  ::google::protobuf::int32 print_station_id_;
  ::google::protobuf::int32 order_station_id_;
  ::std::string* page_type_;
  ::google::protobuf::int32 job_id_;
  ::google::protobuf::int32 page_count_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 job_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(11 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintCltLogon* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintCltLoginVerifyCode : public ::google::protobuf::Message {
 public:
  PrintCltLoginVerifyCode();
  virtual ~PrintCltLoginVerifyCode();
  
  PrintCltLoginVerifyCode(const PrintCltLoginVerifyCode& from);
  
  inline PrintCltLoginVerifyCode& operator=(const PrintCltLoginVerifyCode& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintCltLoginVerifyCode& default_instance();
  
  void Swap(PrintCltLoginVerifyCode* other);
  
  // implements Message ----------------------------------------------
  
  PrintCltLoginVerifyCode* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintCltLoginVerifyCode& from);
  void MergeFrom(const PrintCltLoginVerifyCode& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional int32 loginType = 3;
  inline bool has_logintype() const;
  inline void clear_logintype();
  static const int kLoginTypeFieldNumber = 3;
  inline ::google::protobuf::int32 logintype() const;
  inline void set_logintype(::google::protobuf::int32 value);
  
  // optional string verifyCode = 4;
  inline bool has_verifycode() const;
  inline void clear_verifycode();
  static const int kVerifyCodeFieldNumber = 4;
  inline const ::std::string& verifycode() const;
  inline void set_verifycode(const ::std::string& value);
  inline void set_verifycode(const char* value);
  inline void set_verifycode(const char* value, size_t size);
  inline ::std::string* mutable_verifycode();
  inline ::std::string* release_verifycode();
  
  // optional int32 job_id = 5;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 5;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintCltLoginVerifyCode)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_logintype();
  inline void clear_has_logintype();
  inline void set_has_verifycode();
  inline void clear_has_verifycode();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 logintype_;
  ::std::string* verifycode_;
  ::google::protobuf::int32 job_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintCltLoginVerifyCode* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintCltCheckUserResult : public ::google::protobuf::Message {
 public:
  PrintCltCheckUserResult();
  virtual ~PrintCltCheckUserResult();
  
  PrintCltCheckUserResult(const PrintCltCheckUserResult& from);
  
  inline PrintCltCheckUserResult& operator=(const PrintCltCheckUserResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintCltCheckUserResult& default_instance();
  
  void Swap(PrintCltCheckUserResult* other);
  
  // implements Message ----------------------------------------------
  
  PrintCltCheckUserResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintCltCheckUserResult& from);
  void MergeFrom(const PrintCltCheckUserResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 account_id = 3;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 3;
  inline ::google::protobuf::int32 account_id() const;
  inline void set_account_id(::google::protobuf::int32 value);
  
  // optional double left_money = 4;
  inline bool has_left_money() const;
  inline void clear_left_money();
  static const int kLeftMoneyFieldNumber = 4;
  inline double left_money() const;
  inline void set_left_money(double value);
  
  // optional double special_left_money = 5;
  inline bool has_special_left_money() const;
  inline void clear_special_left_money();
  static const int kSpecialLeftMoneyFieldNumber = 5;
  inline double special_left_money() const;
  inline void set_special_left_money(double value);
  
  // optional int32 a3_quota = 6;
  inline bool has_a3_quota() const;
  inline void clear_a3_quota();
  static const int kA3QuotaFieldNumber = 6;
  inline ::google::protobuf::int32 a3_quota() const;
  inline void set_a3_quota(::google::protobuf::int32 value);
  
  // optional int32 a4_quota = 7;
  inline bool has_a4_quota() const;
  inline void clear_a4_quota();
  static const int kA4QuotaFieldNumber = 7;
  inline ::google::protobuf::int32 a4_quota() const;
  inline void set_a4_quota(::google::protobuf::int32 value);
  
  // optional int32 period_type = 8;
  inline bool has_period_type() const;
  inline void clear_period_type();
  static const int kPeriodTypeFieldNumber = 8;
  inline ::google::protobuf::int32 period_type() const;
  inline void set_period_type(::google::protobuf::int32 value);
  
  // optional int32 a3_printed_count = 9;
  inline bool has_a3_printed_count() const;
  inline void clear_a3_printed_count();
  static const int kA3PrintedCountFieldNumber = 9;
  inline ::google::protobuf::int32 a3_printed_count() const;
  inline void set_a3_printed_count(::google::protobuf::int32 value);
  
  // optional int32 a4_printed_count = 10;
  inline bool has_a4_printed_count() const;
  inline void clear_a4_printed_count();
  static const int kA4PrintedCountFieldNumber = 10;
  inline ::google::protobuf::int32 a4_printed_count() const;
  inline void set_a4_printed_count(::google::protobuf::int32 value);
  
  // optional int32 project_id = 11;
  inline bool has_project_id() const;
  inline void clear_project_id();
  static const int kProjectIdFieldNumber = 11;
  inline ::google::protobuf::int32 project_id() const;
  inline void set_project_id(::google::protobuf::int32 value);
  
  // optional int32 print_station_id = 12;
  inline bool has_print_station_id() const;
  inline void clear_print_station_id();
  static const int kPrintStationIdFieldNumber = 12;
  inline ::google::protobuf::int32 print_station_id() const;
  inline void set_print_station_id(::google::protobuf::int32 value);
  
  // optional int32 order_station_id = 13;
  inline bool has_order_station_id() const;
  inline void clear_order_station_id();
  static const int kOrderStationIdFieldNumber = 13;
  inline ::google::protobuf::int32 order_station_id() const;
  inline void set_order_station_id(::google::protobuf::int32 value);
  
  // optional int32 job_id = 14;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 14;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // optional .isafetec.JobFilterPolciy filter = 15;
  inline bool has_filter() const;
  inline void clear_filter();
  static const int kFilterFieldNumber = 15;
  inline const ::isafetec::JobFilterPolciy& filter() const;
  inline ::isafetec::JobFilterPolciy* mutable_filter();
  inline ::isafetec::JobFilterPolciy* release_filter();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintCltCheckUserResult)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_left_money();
  inline void clear_has_left_money();
  inline void set_has_special_left_money();
  inline void clear_has_special_left_money();
  inline void set_has_a3_quota();
  inline void clear_has_a3_quota();
  inline void set_has_a4_quota();
  inline void clear_has_a4_quota();
  inline void set_has_period_type();
  inline void clear_has_period_type();
  inline void set_has_a3_printed_count();
  inline void clear_has_a3_printed_count();
  inline void set_has_a4_printed_count();
  inline void clear_has_a4_printed_count();
  inline void set_has_project_id();
  inline void clear_has_project_id();
  inline void set_has_print_station_id();
  inline void clear_has_print_station_id();
  inline void set_has_order_station_id();
  inline void clear_has_order_station_id();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_filter();
  inline void clear_has_filter();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 account_id_;
  double left_money_;
  double special_left_money_;
  ::google::protobuf::int32 a3_quota_;
  ::google::protobuf::int32 a4_quota_;
  ::google::protobuf::int32 period_type_;
  ::google::protobuf::int32 a3_printed_count_;
  ::google::protobuf::int32 a4_printed_count_;
  ::google::protobuf::int32 project_id_;
  ::google::protobuf::int32 print_station_id_;
  ::google::protobuf::int32 order_station_id_;
  ::isafetec::JobFilterPolciy* filter_;
  ::google::protobuf::int32 job_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintCltCheckUserResult* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintCtrlPolicy : public ::google::protobuf::Message {
 public:
  PrintCtrlPolicy();
  virtual ~PrintCtrlPolicy();
  
  PrintCtrlPolicy(const PrintCtrlPolicy& from);
  
  inline PrintCtrlPolicy& operator=(const PrintCtrlPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintCtrlPolicy& default_instance();
  
  void Swap(PrintCtrlPolicy* other);
  
  // implements Message ----------------------------------------------
  
  PrintCtrlPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintCtrlPolicy& from);
  void MergeFrom(const PrintCtrlPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_SUBMIT_MODE submit_mode = 1;
  inline bool has_submit_mode() const;
  inline void clear_submit_mode();
  static const int kSubmitModeFieldNumber = 1;
  inline isafetec::JOB_SUBMIT_MODE submit_mode() const;
  inline void set_submit_mode(isafetec::JOB_SUBMIT_MODE value);
  
  // optional .isafetec.JOB_PRINT_MODE print_mode = 2;
  inline bool has_print_mode() const;
  inline void clear_print_mode();
  static const int kPrintModeFieldNumber = 2;
  inline isafetec::JOB_PRINT_MODE print_mode() const;
  inline void set_print_mode(isafetec::JOB_PRINT_MODE value);
  
  // optional int32 prt_id = 3;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 3;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional string url = 4;
  inline bool has_url() const;
  inline void clear_url();
  static const int kUrlFieldNumber = 4;
  inline const ::std::string& url() const;
  inline void set_url(const ::std::string& value);
  inline void set_url(const char* value);
  inline void set_url(const char* value, size_t size);
  inline ::std::string* mutable_url();
  inline ::std::string* release_url();
  
  // optional bool enable_doc_log = 5;
  inline bool has_enable_doc_log() const;
  inline void clear_enable_doc_log();
  static const int kEnableDocLogFieldNumber = 5;
  inline bool enable_doc_log() const;
  inline void set_enable_doc_log(bool value);
  
  // optional string doc_type = 6;
  inline bool has_doc_type() const;
  inline void clear_doc_type();
  static const int kDocTypeFieldNumber = 6;
  inline const ::std::string& doc_type() const;
  inline void set_doc_type(const ::std::string& value);
  inline void set_doc_type(const char* value);
  inline void set_doc_type(const char* value, size_t size);
  inline ::std::string* mutable_doc_type();
  inline ::std::string* release_doc_type();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintCtrlPolicy)
 private:
  inline void set_has_submit_mode();
  inline void clear_has_submit_mode();
  inline void set_has_print_mode();
  inline void clear_has_print_mode();
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_url();
  inline void clear_has_url();
  inline void set_has_enable_doc_log();
  inline void clear_has_enable_doc_log();
  inline void set_has_doc_type();
  inline void clear_has_doc_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int submit_mode_;
  int print_mode_;
  ::std::string* url_;
  ::google::protobuf::int32 prt_id_;
  bool enable_doc_log_;
  ::std::string* doc_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintCtrlPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtOrderCmpltInfo : public ::google::protobuf::Message {
 public:
  PrtOrderCmpltInfo();
  virtual ~PrtOrderCmpltInfo();
  
  PrtOrderCmpltInfo(const PrtOrderCmpltInfo& from);
  
  inline PrtOrderCmpltInfo& operator=(const PrtOrderCmpltInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtOrderCmpltInfo& default_instance();
  
  void Swap(PrtOrderCmpltInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrtOrderCmpltInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtOrderCmpltInfo& from);
  void MergeFrom(const PrtOrderCmpltInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 prt_id = 1;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 1;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 job_id = 2;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtOrderCmpltInfo)
 private:
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 job_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtOrderCmpltInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT RechargeFromCard : public ::google::protobuf::Message {
 public:
  RechargeFromCard();
  virtual ~RechargeFromCard();
  
  RechargeFromCard(const RechargeFromCard& from);
  
  inline RechargeFromCard& operator=(const RechargeFromCard& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeFromCard& default_instance();
  
  void Swap(RechargeFromCard* other);
  
  // implements Message ----------------------------------------------
  
  RechargeFromCard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeFromCard& from);
  void MergeFrom(const RechargeFromCard& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 prt_id = 1;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 1;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional string card_no = 3;
  inline bool has_card_no() const;
  inline void clear_card_no();
  static const int kCardNoFieldNumber = 3;
  inline const ::std::string& card_no() const;
  inline void set_card_no(const ::std::string& value);
  inline void set_card_no(const char* value);
  inline void set_card_no(const char* value, size_t size);
  inline ::std::string* mutable_card_no();
  inline ::std::string* release_card_no();
  
  // optional double left_money = 4;
  inline bool has_left_money() const;
  inline void clear_left_money();
  static const int kLeftMoneyFieldNumber = 4;
  inline double left_money() const;
  inline void set_left_money(double value);
  
  // optional double should_spend = 5;
  inline bool has_should_spend() const;
  inline void clear_should_spend();
  static const int kShouldSpendFieldNumber = 5;
  inline double should_spend() const;
  inline void set_should_spend(double value);
  
  // optional double recharge_money = 6;
  inline bool has_recharge_money() const;
  inline void clear_recharge_money();
  static const int kRechargeMoneyFieldNumber = 6;
  inline double recharge_money() const;
  inline void set_recharge_money(double value);
  
  // optional int32 recharge_for = 7;
  inline bool has_recharge_for() const;
  inline void clear_recharge_for();
  static const int kRechargeForFieldNumber = 7;
  inline ::google::protobuf::int32 recharge_for() const;
  inline void set_recharge_for(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.RechargeFromCard)
 private:
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_card_no();
  inline void clear_has_card_no();
  inline void set_has_left_money();
  inline void clear_has_left_money();
  inline void set_has_should_spend();
  inline void clear_has_should_spend();
  inline void set_has_recharge_money();
  inline void clear_has_recharge_money();
  inline void set_has_recharge_for();
  inline void clear_has_recharge_for();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 user_id_;
  ::std::string* card_no_;
  double left_money_;
  double should_spend_;
  double recharge_money_;
  ::google::protobuf::int32 recharge_for_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static RechargeFromCard* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT RechargeFromCardErr : public ::google::protobuf::Message {
 public:
  RechargeFromCardErr();
  virtual ~RechargeFromCardErr();
  
  RechargeFromCardErr(const RechargeFromCardErr& from);
  
  inline RechargeFromCardErr& operator=(const RechargeFromCardErr& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const RechargeFromCardErr& default_instance();
  
  void Swap(RechargeFromCardErr* other);
  
  // implements Message ----------------------------------------------
  
  RechargeFromCardErr* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RechargeFromCardErr& from);
  void MergeFrom(const RechargeFromCardErr& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 prt_id = 1;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 1;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional string card_no = 3;
  inline bool has_card_no() const;
  inline void clear_card_no();
  static const int kCardNoFieldNumber = 3;
  inline const ::std::string& card_no() const;
  inline void set_card_no(const ::std::string& value);
  inline void set_card_no(const char* value);
  inline void set_card_no(const char* value, size_t size);
  inline ::std::string* mutable_card_no();
  inline ::std::string* release_card_no();
  
  // optional string err_desc = 4;
  inline bool has_err_desc() const;
  inline void clear_err_desc();
  static const int kErrDescFieldNumber = 4;
  inline const ::std::string& err_desc() const;
  inline void set_err_desc(const ::std::string& value);
  inline void set_err_desc(const char* value);
  inline void set_err_desc(const char* value, size_t size);
  inline ::std::string* mutable_err_desc();
  inline ::std::string* release_err_desc();
  
  // optional double should_spend = 5;
  inline bool has_should_spend() const;
  inline void clear_should_spend();
  static const int kShouldSpendFieldNumber = 5;
  inline double should_spend() const;
  inline void set_should_spend(double value);
  
  // optional double recharge_money = 6;
  inline bool has_recharge_money() const;
  inline void clear_recharge_money();
  static const int kRechargeMoneyFieldNumber = 6;
  inline double recharge_money() const;
  inline void set_recharge_money(double value);
  
  // optional int32 recharge_for = 7;
  inline bool has_recharge_for() const;
  inline void clear_recharge_for();
  static const int kRechargeForFieldNumber = 7;
  inline ::google::protobuf::int32 recharge_for() const;
  inline void set_recharge_for(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.RechargeFromCardErr)
 private:
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_card_no();
  inline void clear_has_card_no();
  inline void set_has_err_desc();
  inline void clear_has_err_desc();
  inline void set_has_should_spend();
  inline void clear_has_should_spend();
  inline void set_has_recharge_money();
  inline void clear_has_recharge_money();
  inline void set_has_recharge_for();
  inline void clear_has_recharge_for();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 user_id_;
  ::std::string* card_no_;
  ::std::string* err_desc_;
  double should_spend_;
  double recharge_money_;
  ::google::protobuf::int32 recharge_for_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static RechargeFromCardErr* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtChargeResult : public ::google::protobuf::Message {
 public:
  PrtChargeResult();
  virtual ~PrtChargeResult();
  
  PrtChargeResult(const PrtChargeResult& from);
  
  inline PrtChargeResult& operator=(const PrtChargeResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtChargeResult& default_instance();
  
  void Swap(PrtChargeResult* other);
  
  // implements Message ----------------------------------------------
  
  PrtChargeResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtChargeResult& from);
  void MergeFrom(const PrtChargeResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string seed = 1;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 1;
  inline const ::std::string& seed() const;
  inline void set_seed(const ::std::string& value);
  inline void set_seed(const char* value);
  inline void set_seed(const char* value, size_t size);
  inline ::std::string* mutable_seed();
  inline ::std::string* release_seed();
  
  // optional int32 res_code = 2;
  inline bool has_res_code() const;
  inline void clear_res_code();
  static const int kResCodeFieldNumber = 2;
  inline ::google::protobuf::int32 res_code() const;
  inline void set_res_code(::google::protobuf::int32 value);
  
  // optional .isafetec.CHARGE_FOR charge_for = 3;
  inline bool has_charge_for() const;
  inline void clear_charge_for();
  static const int kChargeForFieldNumber = 3;
  inline isafetec::CHARGE_FOR charge_for() const;
  inline void set_charge_for(isafetec::CHARGE_FOR value);
  
  // optional .isafetec.PrtStationCheckUserResult res = 4;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 4;
  inline const ::isafetec::PrtStationCheckUserResult& res() const;
  inline ::isafetec::PrtStationCheckUserResult* mutable_res();
  inline ::isafetec::PrtStationCheckUserResult* release_res();
  
  // optional string file_path = 5;
  inline bool has_file_path() const;
  inline void clear_file_path();
  static const int kFilePathFieldNumber = 5;
  inline const ::std::string& file_path() const;
  inline void set_file_path(const ::std::string& value);
  inline void set_file_path(const char* value);
  inline void set_file_path(const char* value, size_t size);
  inline ::std::string* mutable_file_path();
  inline ::std::string* release_file_path();
  
  // optional string other_info = 6;
  inline bool has_other_info() const;
  inline void clear_other_info();
  static const int kOtherInfoFieldNumber = 6;
  inline const ::std::string& other_info() const;
  inline void set_other_info(const ::std::string& value);
  inline void set_other_info(const char* value);
  inline void set_other_info(const char* value, size_t size);
  inline ::std::string* mutable_other_info();
  inline ::std::string* release_other_info();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtChargeResult)
 private:
  inline void set_has_seed();
  inline void clear_has_seed();
  inline void set_has_res_code();
  inline void clear_has_res_code();
  inline void set_has_charge_for();
  inline void clear_has_charge_for();
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_file_path();
  inline void clear_has_file_path();
  inline void set_has_other_info();
  inline void clear_has_other_info();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* seed_;
  ::google::protobuf::int32 res_code_;
  int charge_for_;
  ::isafetec::PrtStationCheckUserResult* res_;
  ::std::string* file_path_;
  ::std::string* other_info_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtChargeResult* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtCopyCharge : public ::google::protobuf::Message {
 public:
  PrtCopyCharge();
  virtual ~PrtCopyCharge();
  
  PrtCopyCharge(const PrtCopyCharge& from);
  
  inline PrtCopyCharge& operator=(const PrtCopyCharge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtCopyCharge& default_instance();
  
  void Swap(PrtCopyCharge* other);
  
  // implements Message ----------------------------------------------
  
  PrtCopyCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtCopyCharge& from);
  void MergeFrom(const PrtCopyCharge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 prt_id = 1;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 1;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 user_id = 2;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 2;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional .isafetec.JOB_PRICE_TYPE price_type = 3;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 3;
  inline isafetec::JOB_PRICE_TYPE price_type() const;
  inline void set_price_type(isafetec::JOB_PRICE_TYPE value);
  
  // optional double price = 4;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 4;
  inline double price() const;
  inline void set_price(double value);
  
  // optional string page_type = 5;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 5;
  inline const ::std::string& page_type() const;
  inline void set_page_type(const ::std::string& value);
  inline void set_page_type(const char* value);
  inline void set_page_type(const char* value, size_t size);
  inline ::std::string* mutable_page_type();
  inline ::std::string* release_page_type();
  
  // optional int32 count = 6;
  inline bool has_count() const;
  inline void clear_count();
  static const int kCountFieldNumber = 6;
  inline ::google::protobuf::int32 count() const;
  inline void set_count(::google::protobuf::int32 value);
  
  // optional int32 color = 7;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 7;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional double time = 8;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 8;
  inline double time() const;
  inline void set_time(double value);
  
  // optional double should_spend = 9;
  inline bool has_should_spend() const;
  inline void clear_should_spend();
  static const int kShouldSpendFieldNumber = 9;
  inline double should_spend() const;
  inline void set_should_spend(double value);
  
  // optional double real_spend = 10;
  inline bool has_real_spend() const;
  inline void clear_real_spend();
  static const int kRealSpendFieldNumber = 10;
  inline double real_spend() const;
  inline void set_real_spend(double value);
  
  // optional .isafetec.RechargeFromCard card = 15;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 15;
  inline const ::isafetec::RechargeFromCard& card() const;
  inline ::isafetec::RechargeFromCard* mutable_card();
  inline ::isafetec::RechargeFromCard* release_card();
  
  // optional .isafetec.RechargeFromCardErr err = 16;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 16;
  inline const ::isafetec::RechargeFromCardErr& err() const;
  inline ::isafetec::RechargeFromCardErr* mutable_err();
  inline ::isafetec::RechargeFromCardErr* release_err();
  
  // optional string seed = 17;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 17;
  inline const ::std::string& seed() const;
  inline void set_seed(const ::std::string& value);
  inline void set_seed(const char* value);
  inline void set_seed(const char* value, size_t size);
  inline ::std::string* mutable_seed();
  inline ::std::string* release_seed();
  
  // optional int32 job_id = 18;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 18;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtCopyCharge)
 private:
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_count();
  inline void clear_has_count();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_should_spend();
  inline void clear_has_should_spend();
  inline void set_has_real_spend();
  inline void clear_has_real_spend();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_seed();
  inline void clear_has_seed();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 user_id_;
  double price_;
  int price_type_;
  ::google::protobuf::int32 count_;
  ::std::string* page_type_;
  double time_;
  double should_spend_;
  double real_spend_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 job_id_;
  ::isafetec::RechargeFromCard* card_;
  ::isafetec::RechargeFromCardErr* err_;
  ::std::string* seed_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(14 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtCopyCharge* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtScanCharge : public ::google::protobuf::Message {
 public:
  PrtScanCharge();
  virtual ~PrtScanCharge();
  
  PrtScanCharge(const PrtScanCharge& from);
  
  inline PrtScanCharge& operator=(const PrtScanCharge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtScanCharge& default_instance();
  
  void Swap(PrtScanCharge* other);
  
  // implements Message ----------------------------------------------
  
  PrtScanCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtScanCharge& from);
  void MergeFrom(const PrtScanCharge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  
  // optional int32 prt_id = 2;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 2;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 user_id = 3;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 3;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional .isafetec.JOB_PRICE_TYPE price_type = 4;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 4;
  inline isafetec::JOB_PRICE_TYPE price_type() const;
  inline void set_price_type(isafetec::JOB_PRICE_TYPE value);
  
  // optional double price = 5;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 5;
  inline double price() const;
  inline void set_price(double value);
  
  // optional int32 size = 7;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 7;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);
  
  // optional int32 color = 8;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 8;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional string path = 9;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 9;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // optional string dir = 10;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 10;
  inline const ::std::string& dir() const;
  inline void set_dir(const ::std::string& value);
  inline void set_dir(const char* value);
  inline void set_dir(const char* value, size_t size);
  inline ::std::string* mutable_dir();
  inline ::std::string* release_dir();
  
  // optional string http_dir = 14;
  inline bool has_http_dir() const;
  inline void clear_http_dir();
  static const int kHttpDirFieldNumber = 14;
  inline const ::std::string& http_dir() const;
  inline void set_http_dir(const ::std::string& value);
  inline void set_http_dir(const char* value);
  inline void set_http_dir(const char* value, size_t size);
  inline ::std::string* mutable_http_dir();
  inline ::std::string* release_http_dir();
  
  // optional double time = 11;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 11;
  inline double time() const;
  inline void set_time(double value);
  
  // optional double should_spend = 12;
  inline bool has_should_spend() const;
  inline void clear_should_spend();
  static const int kShouldSpendFieldNumber = 12;
  inline double should_spend() const;
  inline void set_should_spend(double value);
  
  // optional double real_spend = 13;
  inline bool has_real_spend() const;
  inline void clear_real_spend();
  static const int kRealSpendFieldNumber = 13;
  inline double real_spend() const;
  inline void set_real_spend(double value);
  
  // optional .isafetec.RechargeFromCard card = 15;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 15;
  inline const ::isafetec::RechargeFromCard& card() const;
  inline ::isafetec::RechargeFromCard* mutable_card();
  inline ::isafetec::RechargeFromCard* release_card();
  
  // optional .isafetec.RechargeFromCardErr err = 16;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 16;
  inline const ::isafetec::RechargeFromCardErr& err() const;
  inline ::isafetec::RechargeFromCardErr* mutable_err();
  inline ::isafetec::RechargeFromCardErr* release_err();
  
  // optional string seed = 17;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 17;
  inline const ::std::string& seed() const;
  inline void set_seed(const ::std::string& value);
  inline void set_seed(const char* value);
  inline void set_seed(const char* value, size_t size);
  inline ::std::string* mutable_seed();
  inline ::std::string* release_seed();
  
  // optional int32 job_id = 18;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 18;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // optional int32 page_count = 19;
  inline bool has_page_count() const;
  inline void clear_page_count();
  static const int kPageCountFieldNumber = 19;
  inline ::google::protobuf::int32 page_count() const;
  inline void set_page_count(::google::protobuf::int32 value);
  
  // optional .isafetec.ScanChargeType charge_type = 20;
  inline bool has_charge_type() const;
  inline void clear_charge_type();
  static const int kChargeTypeFieldNumber = 20;
  inline isafetec::ScanChargeType charge_type() const;
  inline void set_charge_type(isafetec::ScanChargeType value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtScanCharge)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_http_dir();
  inline void clear_has_http_dir();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_should_spend();
  inline void clear_has_should_spend();
  inline void set_has_real_spend();
  inline void clear_has_real_spend();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_seed();
  inline void clear_has_seed();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_page_count();
  inline void clear_has_page_count();
  inline void set_has_charge_type();
  inline void clear_has_charge_type();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* guid_;
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 user_id_;
  double price_;
  int price_type_;
  ::google::protobuf::int32 size_;
  ::std::string* path_;
  ::std::string* dir_;
  ::std::string* http_dir_;
  double time_;
  double should_spend_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 job_id_;
  double real_spend_;
  ::isafetec::RechargeFromCard* card_;
  ::isafetec::RechargeFromCardErr* err_;
  ::std::string* seed_;
  ::google::protobuf::int32 page_count_;
  int charge_type_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtScanCharge* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationCharge : public ::google::protobuf::Message {
 public:
  PrtStationCharge();
  virtual ~PrtStationCharge();
  
  PrtStationCharge(const PrtStationCharge& from);
  
  inline PrtStationCharge& operator=(const PrtStationCharge& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationCharge& default_instance();
  
  void Swap(PrtStationCharge* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationCharge* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationCharge& from);
  void MergeFrom(const PrtStationCharge& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  
  // optional int32 job_id = 2;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 2;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // optional int32 prt_id = 3;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 3;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 user_id = 4;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 color = 5;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 5;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional string page_type = 6;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 6;
  inline const ::std::string& page_type() const;
  inline void set_page_type(const ::std::string& value);
  inline void set_page_type(const char* value);
  inline void set_page_type(const char* value, size_t size);
  inline ::std::string* mutable_page_type();
  inline ::std::string* release_page_type();
  
  // optional .isafetec.JOB_PRICE_TYPE price_type = 7;
  inline bool has_price_type() const;
  inline void clear_price_type();
  static const int kPriceTypeFieldNumber = 7;
  inline isafetec::JOB_PRICE_TYPE price_type() const;
  inline void set_price_type(isafetec::JOB_PRICE_TYPE value);
  
  // optional double price = 8;
  inline bool has_price() const;
  inline void clear_price();
  static const int kPriceFieldNumber = 8;
  inline double price() const;
  inline void set_price(double value);
  
  // optional int32 total_page_count = 9;
  inline bool has_total_page_count() const;
  inline void clear_total_page_count();
  static const int kTotalPageCountFieldNumber = 9;
  inline ::google::protobuf::int32 total_page_count() const;
  inline void set_total_page_count(::google::protobuf::int32 value);
  
  // optional int32 printed_page_count = 10;
  inline bool has_printed_page_count() const;
  inline void clear_printed_page_count();
  static const int kPrintedPageCountFieldNumber = 10;
  inline ::google::protobuf::int32 printed_page_count() const;
  inline void set_printed_page_count(::google::protobuf::int32 value);
  
  // optional int32 printed_copies = 11;
  inline bool has_printed_copies() const;
  inline void clear_printed_copies();
  static const int kPrintedCopiesFieldNumber = 11;
  inline ::google::protobuf::int32 printed_copies() const;
  inline void set_printed_copies(::google::protobuf::int32 value);
  
  // optional int32 printed_from = 12;
  inline bool has_printed_from() const;
  inline void clear_printed_from();
  static const int kPrintedFromFieldNumber = 12;
  inline ::google::protobuf::int32 printed_from() const;
  inline void set_printed_from(::google::protobuf::int32 value);
  
  // optional int32 printed_to = 13;
  inline bool has_printed_to() const;
  inline void clear_printed_to();
  static const int kPrintedToFieldNumber = 13;
  inline ::google::protobuf::int32 printed_to() const;
  inline void set_printed_to(::google::protobuf::int32 value);
  
  // optional double should_spend = 14;
  inline bool has_should_spend() const;
  inline void clear_should_spend();
  static const int kShouldSpendFieldNumber = 14;
  inline double should_spend() const;
  inline void set_should_spend(double value);
  
  // optional double real_spend = 15;
  inline bool has_real_spend() const;
  inline void clear_real_spend();
  static const int kRealSpendFieldNumber = 15;
  inline double real_spend() const;
  inline void set_real_spend(double value);
  
  // optional double printed_time = 16;
  inline bool has_printed_time() const;
  inline void clear_printed_time();
  static const int kPrintedTimeFieldNumber = 16;
  inline double printed_time() const;
  inline void set_printed_time(double value);
  
  // optional int32 project_id = 17;
  inline bool has_project_id() const;
  inline void clear_project_id();
  static const int kProjectIdFieldNumber = 17;
  inline ::google::protobuf::int32 project_id() const;
  inline void set_project_id(::google::protobuf::int32 value);
  
  // optional string project_name = 18;
  inline bool has_project_name() const;
  inline void clear_project_name();
  static const int kProjectNameFieldNumber = 18;
  inline const ::std::string& project_name() const;
  inline void set_project_name(const ::std::string& value);
  inline void set_project_name(const char* value);
  inline void set_project_name(const char* value, size_t size);
  inline ::std::string* mutable_project_name();
  inline ::std::string* release_project_name();
  
  // optional .isafetec.PRT_REQ_JOB_BY job_req_by = 19;
  inline bool has_job_req_by() const;
  inline void clear_job_req_by();
  static const int kJobReqByFieldNumber = 19;
  inline isafetec::PRT_REQ_JOB_BY job_req_by() const;
  inline void set_job_req_by(isafetec::PRT_REQ_JOB_BY value);
  
  // optional string seed = 20;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 20;
  inline const ::std::string& seed() const;
  inline void set_seed(const ::std::string& value);
  inline void set_seed(const char* value);
  inline void set_seed(const char* value, size_t size);
  inline ::std::string* mutable_seed();
  inline ::std::string* release_seed();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationCharge)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_price_type();
  inline void clear_has_price_type();
  inline void set_has_price();
  inline void clear_has_price();
  inline void set_has_total_page_count();
  inline void clear_has_total_page_count();
  inline void set_has_printed_page_count();
  inline void clear_has_printed_page_count();
  inline void set_has_printed_copies();
  inline void clear_has_printed_copies();
  inline void set_has_printed_from();
  inline void clear_has_printed_from();
  inline void set_has_printed_to();
  inline void clear_has_printed_to();
  inline void set_has_should_spend();
  inline void clear_has_should_spend();
  inline void set_has_real_spend();
  inline void clear_has_real_spend();
  inline void set_has_printed_time();
  inline void clear_has_printed_time();
  inline void set_has_project_id();
  inline void clear_has_project_id();
  inline void set_has_project_name();
  inline void clear_has_project_name();
  inline void set_has_job_req_by();
  inline void clear_has_job_req_by();
  inline void set_has_seed();
  inline void clear_has_seed();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* guid_;
  ::google::protobuf::int32 job_id_;
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 color_;
  ::std::string* page_type_;
  double price_;
  int price_type_;
  ::google::protobuf::int32 total_page_count_;
  ::google::protobuf::int32 printed_page_count_;
  ::google::protobuf::int32 printed_copies_;
  ::google::protobuf::int32 printed_from_;
  ::google::protobuf::int32 printed_to_;
  double should_spend_;
  double real_spend_;
  double printed_time_;
  ::std::string* project_name_;
  ::google::protobuf::int32 project_id_;
  int job_req_by_;
  ::std::string* seed_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(20 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationCharge* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationChargeOnEveryPage : public ::google::protobuf::Message {
 public:
  PrtStationChargeOnEveryPage();
  virtual ~PrtStationChargeOnEveryPage();
  
  PrtStationChargeOnEveryPage(const PrtStationChargeOnEveryPage& from);
  
  inline PrtStationChargeOnEveryPage& operator=(const PrtStationChargeOnEveryPage& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationChargeOnEveryPage& default_instance();
  
  void Swap(PrtStationChargeOnEveryPage* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationChargeOnEveryPage* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationChargeOnEveryPage& from);
  void MergeFrom(const PrtStationChargeOnEveryPage& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string guid = 1;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 1;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  
  // optional int32 printed_page_count = 2;
  inline bool has_printed_page_count() const;
  inline void clear_printed_page_count();
  static const int kPrintedPageCountFieldNumber = 2;
  inline ::google::protobuf::int32 printed_page_count() const;
  inline void set_printed_page_count(::google::protobuf::int32 value);
  
  // optional double real_spend = 3;
  inline bool has_real_spend() const;
  inline void clear_real_spend();
  static const int kRealSpendFieldNumber = 3;
  inline double real_spend() const;
  inline void set_real_spend(double value);
  
  // optional int32 all_printed = 4;
  inline bool has_all_printed() const;
  inline void clear_all_printed();
  static const int kAllPrintedFieldNumber = 4;
  inline ::google::protobuf::int32 all_printed() const;
  inline void set_all_printed(::google::protobuf::int32 value);
  
  // optional int32 user_id = 5;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 5;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional .isafetec.PRT_REQ_JOB_BY job_req_by = 6;
  inline bool has_job_req_by() const;
  inline void clear_job_req_by();
  static const int kJobReqByFieldNumber = 6;
  inline isafetec::PRT_REQ_JOB_BY job_req_by() const;
  inline void set_job_req_by(isafetec::PRT_REQ_JOB_BY value);
  
  // optional int32 job_id = 7;
  inline bool has_job_id() const;
  inline void clear_job_id();
  static const int kJobIdFieldNumber = 7;
  inline ::google::protobuf::int32 job_id() const;
  inline void set_job_id(::google::protobuf::int32 value);
  
  // optional .isafetec.RechargeFromCard card = 15;
  inline bool has_card() const;
  inline void clear_card();
  static const int kCardFieldNumber = 15;
  inline const ::isafetec::RechargeFromCard& card() const;
  inline ::isafetec::RechargeFromCard* mutable_card();
  inline ::isafetec::RechargeFromCard* release_card();
  
  // optional .isafetec.RechargeFromCardErr err = 16;
  inline bool has_err() const;
  inline void clear_err();
  static const int kErrFieldNumber = 16;
  inline const ::isafetec::RechargeFromCardErr& err() const;
  inline ::isafetec::RechargeFromCardErr* mutable_err();
  inline ::isafetec::RechargeFromCardErr* release_err();
  
  // optional string seed = 17;
  inline bool has_seed() const;
  inline void clear_seed();
  static const int kSeedFieldNumber = 17;
  inline const ::std::string& seed() const;
  inline void set_seed(const ::std::string& value);
  inline void set_seed(const char* value);
  inline void set_seed(const char* value, size_t size);
  inline ::std::string* mutable_seed();
  inline ::std::string* release_seed();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationChargeOnEveryPage)
 private:
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_printed_page_count();
  inline void clear_has_printed_page_count();
  inline void set_has_real_spend();
  inline void clear_has_real_spend();
  inline void set_has_all_printed();
  inline void clear_has_all_printed();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_job_req_by();
  inline void clear_has_job_req_by();
  inline void set_has_job_id();
  inline void clear_has_job_id();
  inline void set_has_card();
  inline void clear_has_card();
  inline void set_has_err();
  inline void clear_has_err();
  inline void set_has_seed();
  inline void clear_has_seed();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* guid_;
  double real_spend_;
  ::google::protobuf::int32 printed_page_count_;
  ::google::protobuf::int32 all_printed_;
  ::google::protobuf::int32 user_id_;
  int job_req_by_;
  ::isafetec::RechargeFromCard* card_;
  ::isafetec::RechargeFromCardErr* err_;
  ::std::string* seed_;
  ::google::protobuf::int32 job_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationChargeOnEveryPage* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtStationAlarm : public ::google::protobuf::Message {
 public:
  PrtStationAlarm();
  virtual ~PrtStationAlarm();
  
  PrtStationAlarm(const PrtStationAlarm& from);
  
  inline PrtStationAlarm& operator=(const PrtStationAlarm& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtStationAlarm& default_instance();
  
  void Swap(PrtStationAlarm* other);
  
  // implements Message ----------------------------------------------
  
  PrtStationAlarm* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtStationAlarm& from);
  void MergeFrom(const PrtStationAlarm& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 prt_id = 1;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 1;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional string type = 2;
  inline bool has_type() const;
  inline void clear_type();
  static const int kTypeFieldNumber = 2;
  inline const ::std::string& type() const;
  inline void set_type(const ::std::string& value);
  inline void set_type(const char* value);
  inline void set_type(const char* value, size_t size);
  inline ::std::string* mutable_type();
  inline ::std::string* release_type();
  
  // optional string subject = 3;
  inline bool has_subject() const;
  inline void clear_subject();
  static const int kSubjectFieldNumber = 3;
  inline const ::std::string& subject() const;
  inline void set_subject(const ::std::string& value);
  inline void set_subject(const char* value);
  inline void set_subject(const char* value, size_t size);
  inline ::std::string* mutable_subject();
  inline ::std::string* release_subject();
  
  // optional string content = 4;
  inline bool has_content() const;
  inline void clear_content();
  static const int kContentFieldNumber = 4;
  inline const ::std::string& content() const;
  inline void set_content(const ::std::string& value);
  inline void set_content(const char* value);
  inline void set_content(const char* value, size_t size);
  inline ::std::string* mutable_content();
  inline ::std::string* release_content();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtStationAlarm)
 private:
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_type();
  inline void clear_has_type();
  inline void set_has_subject();
  inline void clear_has_subject();
  inline void set_has_content();
  inline void clear_has_content();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* type_;
  ::std::string* subject_;
  ::std::string* content_;
  ::google::protobuf::int32 prt_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtStationAlarm* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtChargeToolLogon : public ::google::protobuf::Message {
 public:
  PrtChargeToolLogon();
  virtual ~PrtChargeToolLogon();
  
  PrtChargeToolLogon(const PrtChargeToolLogon& from);
  
  inline PrtChargeToolLogon& operator=(const PrtChargeToolLogon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtChargeToolLogon& default_instance();
  
  void Swap(PrtChargeToolLogon* other);
  
  // implements Message ----------------------------------------------
  
  PrtChargeToolLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtChargeToolLogon& from);
  void MergeFrom(const PrtChargeToolLogon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string pwd = 3;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtChargeToolLogon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* pwd_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtChargeToolLogon* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtChargeToolCheckResult : public ::google::protobuf::Message {
 public:
  PrtChargeToolCheckResult();
  virtual ~PrtChargeToolCheckResult();
  
  PrtChargeToolCheckResult(const PrtChargeToolCheckResult& from);
  
  inline PrtChargeToolCheckResult& operator=(const PrtChargeToolCheckResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtChargeToolCheckResult& default_instance();
  
  void Swap(PrtChargeToolCheckResult* other);
  
  // implements Message ----------------------------------------------
  
  PrtChargeToolCheckResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtChargeToolCheckResult& from);
  void MergeFrom(const PrtChargeToolCheckResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string pwd = 3;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtChargeToolCheckResult)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* pwd_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtChargeToolCheckResult* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtChargeToolOPLog : public ::google::protobuf::Message {
 public:
  PrtChargeToolOPLog();
  virtual ~PrtChargeToolOPLog();
  
  PrtChargeToolOPLog(const PrtChargeToolOPLog& from);
  
  inline PrtChargeToolOPLog& operator=(const PrtChargeToolOPLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtChargeToolOPLog& default_instance();
  
  void Swap(PrtChargeToolOPLog* other);
  
  // implements Message ----------------------------------------------
  
  PrtChargeToolOPLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtChargeToolOPLog& from);
  void MergeFrom(const PrtChargeToolOPLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 admin_id = 1;
  inline bool has_admin_id() const;
  inline void clear_admin_id();
  static const int kAdminIdFieldNumber = 1;
  inline ::google::protobuf::int32 admin_id() const;
  inline void set_admin_id(::google::protobuf::int32 value);
  
  // optional string admin_name = 2;
  inline bool has_admin_name() const;
  inline void clear_admin_name();
  static const int kAdminNameFieldNumber = 2;
  inline const ::std::string& admin_name() const;
  inline void set_admin_name(const ::std::string& value);
  inline void set_admin_name(const char* value);
  inline void set_admin_name(const char* value, size_t size);
  inline ::std::string* mutable_admin_name();
  inline ::std::string* release_admin_name();
  
  // optional int32 op_type = 3;
  inline bool has_op_type() const;
  inline void clear_op_type();
  static const int kOpTypeFieldNumber = 3;
  inline ::google::protobuf::int32 op_type() const;
  inline void set_op_type(::google::protobuf::int32 value);
  
  // optional double amount = 4;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 4;
  inline double amount() const;
  inline void set_amount(double value);
  
  // optional double specail_money = 5;
  inline bool has_specail_money() const;
  inline void clear_specail_money();
  static const int kSpecailMoneyFieldNumber = 5;
  inline double specail_money() const;
  inline void set_specail_money(double value);
  
  // optional string card_no = 6;
  inline bool has_card_no() const;
  inline void clear_card_no();
  static const int kCardNoFieldNumber = 6;
  inline const ::std::string& card_no() const;
  inline void set_card_no(const ::std::string& value);
  inline void set_card_no(const char* value);
  inline void set_card_no(const char* value, size_t size);
  inline ::std::string* mutable_card_no();
  inline ::std::string* release_card_no();
  
  // optional string name = 7;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 7;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtChargeToolOPLog)
 private:
  inline void set_has_admin_id();
  inline void clear_has_admin_id();
  inline void set_has_admin_name();
  inline void clear_has_admin_name();
  inline void set_has_op_type();
  inline void clear_has_op_type();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_specail_money();
  inline void clear_has_specail_money();
  inline void set_has_card_no();
  inline void clear_has_card_no();
  inline void set_has_name();
  inline void clear_has_name();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* admin_name_;
  ::google::protobuf::int32 admin_id_;
  ::google::protobuf::int32 op_type_;
  double amount_;
  double specail_money_;
  ::std::string* card_no_;
  ::std::string* name_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtChargeToolOPLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtUserSelfChargeOPLog : public ::google::protobuf::Message {
 public:
  PrtUserSelfChargeOPLog();
  virtual ~PrtUserSelfChargeOPLog();
  
  PrtUserSelfChargeOPLog(const PrtUserSelfChargeOPLog& from);
  
  inline PrtUserSelfChargeOPLog& operator=(const PrtUserSelfChargeOPLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtUserSelfChargeOPLog& default_instance();
  
  void Swap(PrtUserSelfChargeOPLog* other);
  
  // implements Message ----------------------------------------------
  
  PrtUserSelfChargeOPLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtUserSelfChargeOPLog& from);
  void MergeFrom(const PrtUserSelfChargeOPLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional string user_name = 2;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 2;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  
  // optional int32 prt_id = 3;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 3;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 op_for = 4;
  inline bool has_op_for() const;
  inline void clear_op_for();
  static const int kOpForFieldNumber = 4;
  inline ::google::protobuf::int32 op_for() const;
  inline void set_op_for(::google::protobuf::int32 value);
  
  // optional int32 reserve1 = 5;
  inline bool has_reserve1() const;
  inline void clear_reserve1();
  static const int kReserve1FieldNumber = 5;
  inline ::google::protobuf::int32 reserve1() const;
  inline void set_reserve1(::google::protobuf::int32 value);
  
  // optional double amount = 6;
  inline bool has_amount() const;
  inline void clear_amount();
  static const int kAmountFieldNumber = 6;
  inline double amount() const;
  inline void set_amount(double value);
  
  // optional double specail_money = 7;
  inline bool has_specail_money() const;
  inline void clear_specail_money();
  static const int kSpecailMoneyFieldNumber = 7;
  inline double specail_money() const;
  inline void set_specail_money(double value);
  
  // optional string card_no = 8;
  inline bool has_card_no() const;
  inline void clear_card_no();
  static const int kCardNoFieldNumber = 8;
  inline const ::std::string& card_no() const;
  inline void set_card_no(const ::std::string& value);
  inline void set_card_no(const char* value);
  inline void set_card_no(const char* value, size_t size);
  inline ::std::string* mutable_card_no();
  inline ::std::string* release_card_no();
  
  // optional string guid = 9;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 9;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  
  // optional double time = 10;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 10;
  inline double time() const;
  inline void set_time(double value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtUserSelfChargeOPLog)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_op_for();
  inline void clear_has_op_for();
  inline void set_has_reserve1();
  inline void clear_has_reserve1();
  inline void set_has_amount();
  inline void clear_has_amount();
  inline void set_has_specail_money();
  inline void clear_has_specail_money();
  inline void set_has_card_no();
  inline void clear_has_card_no();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* user_name_;
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 op_for_;
  ::google::protobuf::int32 reserve1_;
  double amount_;
  double specail_money_;
  ::std::string* card_no_;
  ::std::string* guid_;
  double time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(10 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtUserSelfChargeOPLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtUserSelfChargeOpLogACK : public ::google::protobuf::Message {
 public:
  PrtUserSelfChargeOpLogACK();
  virtual ~PrtUserSelfChargeOpLogACK();
  
  PrtUserSelfChargeOpLogACK(const PrtUserSelfChargeOpLogACK& from);
  
  inline PrtUserSelfChargeOpLogACK& operator=(const PrtUserSelfChargeOpLogACK& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtUserSelfChargeOpLogACK& default_instance();
  
  void Swap(PrtUserSelfChargeOpLogACK* other);
  
  // implements Message ----------------------------------------------
  
  PrtUserSelfChargeOpLogACK* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtUserSelfChargeOpLogACK& from);
  void MergeFrom(const PrtUserSelfChargeOpLogACK& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 prt_id = 2;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 2;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional int32 res_code = 3;
  inline bool has_res_code() const;
  inline void clear_res_code();
  static const int kResCodeFieldNumber = 3;
  inline ::google::protobuf::int32 res_code() const;
  inline void set_res_code(::google::protobuf::int32 value);
  
  // optional int32 op_for = 4;
  inline bool has_op_for() const;
  inline void clear_op_for();
  static const int kOpForFieldNumber = 4;
  inline ::google::protobuf::int32 op_for() const;
  inline void set_op_for(::google::protobuf::int32 value);
  
  // optional .isafetec.PrtStationCheckUserResult res = 5;
  inline bool has_res() const;
  inline void clear_res();
  static const int kResFieldNumber = 5;
  inline const ::isafetec::PrtStationCheckUserResult& res() const;
  inline ::isafetec::PrtStationCheckUserResult* mutable_res();
  inline ::isafetec::PrtStationCheckUserResult* release_res();
  
  // optional string guid = 6;
  inline bool has_guid() const;
  inline void clear_guid();
  static const int kGuidFieldNumber = 6;
  inline const ::std::string& guid() const;
  inline void set_guid(const ::std::string& value);
  inline void set_guid(const char* value);
  inline void set_guid(const char* value, size_t size);
  inline ::std::string* mutable_guid();
  inline ::std::string* release_guid();
  
  // optional double time = 7;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 7;
  inline double time() const;
  inline void set_time(double value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtUserSelfChargeOpLogACK)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_res_code();
  inline void clear_has_res_code();
  inline void set_has_op_for();
  inline void clear_has_op_for();
  inline void set_has_res();
  inline void clear_has_res();
  inline void set_has_guid();
  inline void clear_has_guid();
  inline void set_has_time();
  inline void clear_has_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 res_code_;
  ::google::protobuf::int32 op_for_;
  ::isafetec::PrtStationCheckUserResult* res_;
  ::std::string* guid_;
  double time_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(7 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtUserSelfChargeOpLogACK* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtAdminInfo : public ::google::protobuf::Message {
 public:
  PrtAdminInfo();
  virtual ~PrtAdminInfo();
  
  PrtAdminInfo(const PrtAdminInfo& from);
  
  inline PrtAdminInfo& operator=(const PrtAdminInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtAdminInfo& default_instance();
  
  void Swap(PrtAdminInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrtAdminInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtAdminInfo& from);
  void MergeFrom(const PrtAdminInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string realname = 3;
  inline bool has_realname() const;
  inline void clear_realname();
  static const int kRealnameFieldNumber = 3;
  inline const ::std::string& realname() const;
  inline void set_realname(const ::std::string& value);
  inline void set_realname(const char* value);
  inline void set_realname(const char* value, size_t size);
  inline ::std::string* mutable_realname();
  inline ::std::string* release_realname();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtAdminInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_realname();
  inline void clear_has_realname();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* realname_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtAdminInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtAdminInfoList : public ::google::protobuf::Message {
 public:
  PrtAdminInfoList();
  virtual ~PrtAdminInfoList();
  
  PrtAdminInfoList(const PrtAdminInfoList& from);
  
  inline PrtAdminInfoList& operator=(const PrtAdminInfoList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtAdminInfoList& default_instance();
  
  void Swap(PrtAdminInfoList* other);
  
  // implements Message ----------------------------------------------
  
  PrtAdminInfoList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtAdminInfoList& from);
  void MergeFrom(const PrtAdminInfoList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // repeated .isafetec.PrtAdminInfo list = 1;
  inline int list_size() const;
  inline void clear_list();
  static const int kListFieldNumber = 1;
  inline const ::isafetec::PrtAdminInfo& list(int index) const;
  inline ::isafetec::PrtAdminInfo* mutable_list(int index);
  inline ::isafetec::PrtAdminInfo* PrtAdminInfoList::list_ReleaseAt(int index); 
  inline void PrtAdminInfoList::list_RemoveAt(int index); 
  inline ::isafetec::PrtAdminInfo* add_list();
  inline const ::google::protobuf::RepeatedPtrField< ::isafetec::PrtAdminInfo >&
      list() const;
  inline ::google::protobuf::RepeatedPtrField< ::isafetec::PrtAdminInfo >*
      mutable_list();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtAdminInfoList)
 private:
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::isafetec::PrtAdminInfo > list_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtAdminInfoList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintDocumentInfo : public ::google::protobuf::Message {
 public:
  PrintDocumentInfo();
  virtual ~PrintDocumentInfo();
  
  PrintDocumentInfo(const PrintDocumentInfo& from);
  
  inline PrintDocumentInfo& operator=(const PrintDocumentInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintDocumentInfo& default_instance();
  
  void Swap(PrintDocumentInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrintDocumentInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintDocumentInfo& from);
  void MergeFrom(const PrintDocumentInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 equip_id = 1;
  inline bool has_equip_id() const;
  inline void clear_equip_id();
  static const int kEquipIdFieldNumber = 1;
  inline ::google::protobuf::int32 equip_id() const;
  inline void set_equip_id(::google::protobuf::int32 value);
  
  // optional string equip_host = 2;
  inline bool has_equip_host() const;
  inline void clear_equip_host();
  static const int kEquipHostFieldNumber = 2;
  inline const ::std::string& equip_host() const;
  inline void set_equip_host(const ::std::string& value);
  inline void set_equip_host(const char* value);
  inline void set_equip_host(const char* value, size_t size);
  inline ::std::string* mutable_equip_host();
  inline ::std::string* release_equip_host();
  
  // optional string win_user = 3;
  inline bool has_win_user() const;
  inline void clear_win_user();
  static const int kWinUserFieldNumber = 3;
  inline const ::std::string& win_user() const;
  inline void set_win_user(const ::std::string& value);
  inline void set_win_user(const char* value);
  inline void set_win_user(const char* value, size_t size);
  inline ::std::string* mutable_win_user();
  inline ::std::string* release_win_user();
  
  // optional int32 user_id = 4;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 4;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 id = 5;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 5;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string doc_name = 6;
  inline bool has_doc_name() const;
  inline void clear_doc_name();
  static const int kDocNameFieldNumber = 6;
  inline const ::std::string& doc_name() const;
  inline void set_doc_name(const ::std::string& value);
  inline void set_doc_name(const char* value);
  inline void set_doc_name(const char* value, size_t size);
  inline ::std::string* mutable_doc_name();
  inline ::std::string* release_doc_name();
  
  // optional string printer_name = 7;
  inline bool has_printer_name() const;
  inline void clear_printer_name();
  static const int kPrinterNameFieldNumber = 7;
  inline const ::std::string& printer_name() const;
  inline void set_printer_name(const ::std::string& value);
  inline void set_printer_name(const char* value);
  inline void set_printer_name(const char* value, size_t size);
  inline ::std::string* mutable_printer_name();
  inline ::std::string* release_printer_name();
  
  // optional double time = 8;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 8;
  inline double time() const;
  inline void set_time(double value);
  
  // optional int32 doc_size = 9;
  inline bool has_doc_size() const;
  inline void clear_doc_size();
  static const int kDocSizeFieldNumber = 9;
  inline ::google::protobuf::int32 doc_size() const;
  inline void set_doc_size(::google::protobuf::int32 value);
  
  // optional int32 zip_size = 10;
  inline bool has_zip_size() const;
  inline void clear_zip_size();
  static const int kZipSizeFieldNumber = 10;
  inline ::google::protobuf::int32 zip_size() const;
  inline void set_zip_size(::google::protobuf::int32 value);
  
  // optional string path = 11;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 11;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // optional string name = 12;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 12;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string orig_path = 13;
  inline bool has_orig_path() const;
  inline void clear_orig_path();
  static const int kOrigPathFieldNumber = 13;
  inline const ::std::string& orig_path() const;
  inline void set_orig_path(const ::std::string& value);
  inline void set_orig_path(const char* value);
  inline void set_orig_path(const char* value, size_t size);
  inline ::std::string* mutable_orig_path();
  inline ::std::string* release_orig_path();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintDocumentInfo)
 private:
  inline void set_has_equip_id();
  inline void clear_has_equip_id();
  inline void set_has_equip_host();
  inline void clear_has_equip_host();
  inline void set_has_win_user();
  inline void clear_has_win_user();
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_doc_name();
  inline void clear_has_doc_name();
  inline void set_has_printer_name();
  inline void clear_has_printer_name();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_doc_size();
  inline void clear_has_doc_size();
  inline void set_has_zip_size();
  inline void clear_has_zip_size();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_orig_path();
  inline void clear_has_orig_path();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* equip_host_;
  ::google::protobuf::int32 equip_id_;
  ::google::protobuf::int32 user_id_;
  ::std::string* win_user_;
  ::std::string* doc_name_;
  ::std::string* printer_name_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 doc_size_;
  double time_;
  ::std::string* path_;
  ::std::string* name_;
  ::std::string* orig_path_;
  ::google::protobuf::int32 zip_size_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(13 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintDocumentInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT FtpConfigInfo : public ::google::protobuf::Message {
 public:
  FtpConfigInfo();
  virtual ~FtpConfigInfo();
  
  FtpConfigInfo(const FtpConfigInfo& from);
  
  inline FtpConfigInfo& operator=(const FtpConfigInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const FtpConfigInfo& default_instance();
  
  void Swap(FtpConfigInfo* other);
  
  // implements Message ----------------------------------------------
  
  FtpConfigInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const FtpConfigInfo& from);
  void MergeFrom(const FtpConfigInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string ip = 1;
  inline bool has_ip() const;
  inline void clear_ip();
  static const int kIpFieldNumber = 1;
  inline const ::std::string& ip() const;
  inline void set_ip(const ::std::string& value);
  inline void set_ip(const char* value);
  inline void set_ip(const char* value, size_t size);
  inline ::std::string* mutable_ip();
  inline ::std::string* release_ip();
  
  // optional string port = 2;
  inline bool has_port() const;
  inline void clear_port();
  static const int kPortFieldNumber = 2;
  inline const ::std::string& port() const;
  inline void set_port(const ::std::string& value);
  inline void set_port(const char* value);
  inline void set_port(const char* value, size_t size);
  inline ::std::string* mutable_port();
  inline ::std::string* release_port();
  
  // optional string disk_path = 3;
  inline bool has_disk_path() const;
  inline void clear_disk_path();
  static const int kDiskPathFieldNumber = 3;
  inline const ::std::string& disk_path() const;
  inline void set_disk_path(const ::std::string& value);
  inline void set_disk_path(const char* value);
  inline void set_disk_path(const char* value, size_t size);
  inline ::std::string* mutable_disk_path();
  inline ::std::string* release_disk_path();
  
  // optional string dir = 4;
  inline bool has_dir() const;
  inline void clear_dir();
  static const int kDirFieldNumber = 4;
  inline const ::std::string& dir() const;
  inline void set_dir(const ::std::string& value);
  inline void set_dir(const char* value);
  inline void set_dir(const char* value, size_t size);
  inline ::std::string* mutable_dir();
  inline ::std::string* release_dir();
  
  // optional string user = 5;
  inline bool has_user() const;
  inline void clear_user();
  static const int kUserFieldNumber = 5;
  inline const ::std::string& user() const;
  inline void set_user(const ::std::string& value);
  inline void set_user(const char* value);
  inline void set_user(const char* value, size_t size);
  inline ::std::string* mutable_user();
  inline ::std::string* release_user();
  
  // optional string pwd = 6;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 6;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // @@protoc_insertion_point(class_scope:isafetec.FtpConfigInfo)
 private:
  inline void set_has_ip();
  inline void clear_has_ip();
  inline void set_has_port();
  inline void clear_has_port();
  inline void set_has_disk_path();
  inline void clear_has_disk_path();
  inline void set_has_dir();
  inline void clear_has_dir();
  inline void set_has_user();
  inline void clear_has_user();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* ip_;
  ::std::string* port_;
  ::std::string* disk_path_;
  ::std::string* dir_;
  ::std::string* user_;
  ::std::string* pwd_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static FtpConfigInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CFuncPolicy : public ::google::protobuf::Message {
 public:
  CFuncPolicy();
  virtual ~CFuncPolicy();
  
  CFuncPolicy(const CFuncPolicy& from);
  
  inline CFuncPolicy& operator=(const CFuncPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CFuncPolicy& default_instance();
  
  void Swap(CFuncPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CFuncPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CFuncPolicy& from);
  void MergeFrom(const CFuncPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 UserID = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUserIDFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 PrtID = 2;
  inline bool has_prtid() const;
  inline void clear_prtid();
  static const int kPrtIDFieldNumber = 2;
  inline ::google::protobuf::int32 prtid() const;
  inline void set_prtid(::google::protobuf::int32 value);
  
  // optional int32 PrintPolicyMask = 3;
  inline bool has_printpolicymask() const;
  inline void clear_printpolicymask();
  static const int kPrintPolicyMaskFieldNumber = 3;
  inline ::google::protobuf::int32 printpolicymask() const;
  inline void set_printpolicymask(::google::protobuf::int32 value);
  
  // optional int32 CopyPolicyMask = 4;
  inline bool has_copypolicymask() const;
  inline void clear_copypolicymask();
  static const int kCopyPolicyMaskFieldNumber = 4;
  inline ::google::protobuf::int32 copypolicymask() const;
  inline void set_copypolicymask(::google::protobuf::int32 value);
  
  // optional int32 ScanPolicyMask = 5;
  inline bool has_scanpolicymask() const;
  inline void clear_scanpolicymask();
  static const int kScanPolicyMaskFieldNumber = 5;
  inline ::google::protobuf::int32 scanpolicymask() const;
  inline void set_scanpolicymask(::google::protobuf::int32 value);
  
  // optional int32 FaxPolicyMask = 6;
  inline bool has_faxpolicymask() const;
  inline void clear_faxpolicymask();
  static const int kFaxPolicyMaskFieldNumber = 6;
  inline ::google::protobuf::int32 faxpolicymask() const;
  inline void set_faxpolicymask(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CFuncPolicy)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_prtid();
  inline void clear_has_prtid();
  inline void set_has_printpolicymask();
  inline void clear_has_printpolicymask();
  inline void set_has_copypolicymask();
  inline void clear_has_copypolicymask();
  inline void set_has_scanpolicymask();
  inline void clear_has_scanpolicymask();
  inline void set_has_faxpolicymask();
  inline void clear_has_faxpolicymask();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 prtid_;
  ::google::protobuf::int32 printpolicymask_;
  ::google::protobuf::int32 copypolicymask_;
  ::google::protobuf::int32 scanpolicymask_;
  ::google::protobuf::int32 faxpolicymask_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static CFuncPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtCenterSvr_UserPrintReq : public ::google::protobuf::Message {
 public:
  PrtCenterSvr_UserPrintReq();
  virtual ~PrtCenterSvr_UserPrintReq();
  
  PrtCenterSvr_UserPrintReq(const PrtCenterSvr_UserPrintReq& from);
  
  inline PrtCenterSvr_UserPrintReq& operator=(const PrtCenterSvr_UserPrintReq& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtCenterSvr_UserPrintReq& default_instance();
  
  void Swap(PrtCenterSvr_UserPrintReq* other);
  
  // implements Message ----------------------------------------------
  
  PrtCenterSvr_UserPrintReq* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtCenterSvr_UserPrintReq& from);
  void MergeFrom(const PrtCenterSvr_UserPrintReq& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 prt_id = 1;
  inline bool has_prt_id() const;
  inline void clear_prt_id();
  static const int kPrtIdFieldNumber = 1;
  inline ::google::protobuf::int32 prt_id() const;
  inline void set_prt_id(::google::protobuf::int32 value);
  
  // optional string prt_name = 2;
  inline bool has_prt_name() const;
  inline void clear_prt_name();
  static const int kPrtNameFieldNumber = 2;
  inline const ::std::string& prt_name() const;
  inline void set_prt_name(const ::std::string& value);
  inline void set_prt_name(const char* value);
  inline void set_prt_name(const char* value, size_t size);
  inline ::std::string* mutable_prt_name();
  inline ::std::string* release_prt_name();
  
  // optional string user_name = 3;
  inline bool has_user_name() const;
  inline void clear_user_name();
  static const int kUserNameFieldNumber = 3;
  inline const ::std::string& user_name() const;
  inline void set_user_name(const ::std::string& value);
  inline void set_user_name(const char* value);
  inline void set_user_name(const char* value, size_t size);
  inline ::std::string* mutable_user_name();
  inline ::std::string* release_user_name();
  
  // optional string doc_name = 4;
  inline bool has_doc_name() const;
  inline void clear_doc_name();
  static const int kDocNameFieldNumber = 4;
  inline const ::std::string& doc_name() const;
  inline void set_doc_name(const ::std::string& value);
  inline void set_doc_name(const char* value);
  inline void set_doc_name(const char* value, size_t size);
  inline ::std::string* mutable_doc_name();
  inline ::std::string* release_doc_name();
  
  // optional int32 doc_id = 5;
  inline bool has_doc_id() const;
  inline void clear_doc_id();
  static const int kDocIdFieldNumber = 5;
  inline ::google::protobuf::int32 doc_id() const;
  inline void set_doc_id(::google::protobuf::int32 value);
  
  // optional string page_type = 6;
  inline bool has_page_type() const;
  inline void clear_page_type();
  static const int kPageTypeFieldNumber = 6;
  inline const ::std::string& page_type() const;
  inline void set_page_type(const ::std::string& value);
  inline void set_page_type(const char* value);
  inline void set_page_type(const char* value, size_t size);
  inline ::std::string* mutable_page_type();
  inline ::std::string* release_page_type();
  
  // optional int32 page_count = 7;
  inline bool has_page_count() const;
  inline void clear_page_count();
  static const int kPageCountFieldNumber = 7;
  inline ::google::protobuf::int32 page_count() const;
  inline void set_page_count(::google::protobuf::int32 value);
  
  // optional int32 color = 8;
  inline bool has_color() const;
  inline void clear_color();
  static const int kColorFieldNumber = 8;
  inline ::google::protobuf::int32 color() const;
  inline void set_color(::google::protobuf::int32 value);
  
  // optional int32 job_size = 9;
  inline bool has_job_size() const;
  inline void clear_job_size();
  static const int kJobSizeFieldNumber = 9;
  inline ::google::protobuf::int32 job_size() const;
  inline void set_job_size(::google::protobuf::int32 value);
  
  // optional int32 job_id_SqlLite = 10;
  inline bool has_job_id_sqllite() const;
  inline void clear_job_id_sqllite();
  static const int kJobIdSqlLiteFieldNumber = 10;
  inline ::google::protobuf::int32 job_id_sqllite() const;
  inline void set_job_id_sqllite(::google::protobuf::int32 value);
  
  // optional int32 jobid_ji2 = 11;
  inline bool has_jobid_ji2() const;
  inline void clear_jobid_ji2();
  static const int kJobidJi2FieldNumber = 11;
  inline ::google::protobuf::int32 jobid_ji2() const;
  inline void set_jobid_ji2(::google::protobuf::int32 value);
  
  // optional string printername = 12;
  inline bool has_printername() const;
  inline void clear_printername();
  static const int kPrinternameFieldNumber = 12;
  inline const ::std::string& printername() const;
  inline void set_printername(const ::std::string& value);
  inline void set_printername(const char* value);
  inline void set_printername(const char* value, size_t size);
  inline ::std::string* mutable_printername();
  inline ::std::string* release_printername();
  
  // optional string machinename = 13;
  inline bool has_machinename() const;
  inline void clear_machinename();
  static const int kMachinenameFieldNumber = 13;
  inline const ::std::string& machinename() const;
  inline void set_machinename(const ::std::string& value);
  inline void set_machinename(const char* value);
  inline void set_machinename(const char* value, size_t size);
  inline ::std::string* mutable_machinename();
  inline ::std::string* release_machinename();
  
  // optional string username = 14;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUsernameFieldNumber = 14;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  
  // optional string doucment = 15;
  inline bool has_doucment() const;
  inline void clear_doucment();
  static const int kDoucmentFieldNumber = 15;
  inline const ::std::string& doucment() const;
  inline void set_doucment(const ::std::string& value);
  inline void set_doucment(const char* value);
  inline void set_doucment(const char* value, size_t size);
  inline ::std::string* mutable_doucment();
  inline ::std::string* release_doucment();
  
  // optional string notifyname = 16;
  inline bool has_notifyname() const;
  inline void clear_notifyname();
  static const int kNotifynameFieldNumber = 16;
  inline const ::std::string& notifyname() const;
  inline void set_notifyname(const ::std::string& value);
  inline void set_notifyname(const char* value);
  inline void set_notifyname(const char* value, size_t size);
  inline ::std::string* mutable_notifyname();
  inline ::std::string* release_notifyname();
  
  // optional string datatype = 17;
  inline bool has_datatype() const;
  inline void clear_datatype();
  static const int kDatatypeFieldNumber = 17;
  inline const ::std::string& datatype() const;
  inline void set_datatype(const ::std::string& value);
  inline void set_datatype(const char* value);
  inline void set_datatype(const char* value, size_t size);
  inline ::std::string* mutable_datatype();
  inline ::std::string* release_datatype();
  
  // optional string paramenters = 18;
  inline bool has_paramenters() const;
  inline void clear_paramenters();
  static const int kParamentersFieldNumber = 18;
  inline const ::std::string& paramenters() const;
  inline void set_paramenters(const ::std::string& value);
  inline void set_paramenters(const char* value);
  inline void set_paramenters(const char* value, size_t size);
  inline ::std::string* mutable_paramenters();
  inline ::std::string* release_paramenters();
  
  // optional string driver_name = 19;
  inline bool has_driver_name() const;
  inline void clear_driver_name();
  static const int kDriverNameFieldNumber = 19;
  inline const ::std::string& driver_name() const;
  inline void set_driver_name(const ::std::string& value);
  inline void set_driver_name(const char* value);
  inline void set_driver_name(const char* value, size_t size);
  inline ::std::string* mutable_driver_name();
  inline ::std::string* release_driver_name();
  
  // optional int32 device_mode = 20;
  inline bool has_device_mode() const;
  inline void clear_device_mode();
  static const int kDeviceModeFieldNumber = 20;
  inline ::google::protobuf::int32 device_mode() const;
  inline void set_device_mode(::google::protobuf::int32 value);
  
  // optional string pstatus = 21;
  inline bool has_pstatus() const;
  inline void clear_pstatus();
  static const int kPstatusFieldNumber = 21;
  inline const ::std::string& pstatus() const;
  inline void set_pstatus(const ::std::string& value);
  inline void set_pstatus(const char* value);
  inline void set_pstatus(const char* value, size_t size);
  inline ::std::string* mutable_pstatus();
  inline ::std::string* release_pstatus();
  
  // optional int32 status = 22;
  inline bool has_status() const;
  inline void clear_status();
  static const int kStatusFieldNumber = 22;
  inline ::google::protobuf::int32 status() const;
  inline void set_status(::google::protobuf::int32 value);
  
  // optional int32 priority = 23;
  inline bool has_priority() const;
  inline void clear_priority();
  static const int kPriorityFieldNumber = 23;
  inline ::google::protobuf::int32 priority() const;
  inline void set_priority(::google::protobuf::int32 value);
  
  // optional int32 position = 24;
  inline bool has_position() const;
  inline void clear_position();
  static const int kPositionFieldNumber = 24;
  inline ::google::protobuf::int32 position() const;
  inline void set_position(::google::protobuf::int32 value);
  
  // optional int32 starttime = 25;
  inline bool has_starttime() const;
  inline void clear_starttime();
  static const int kStarttimeFieldNumber = 25;
  inline ::google::protobuf::int32 starttime() const;
  inline void set_starttime(::google::protobuf::int32 value);
  
  // optional int32 untiltime = 26;
  inline bool has_untiltime() const;
  inline void clear_untiltime();
  static const int kUntiltimeFieldNumber = 26;
  inline ::google::protobuf::int32 untiltime() const;
  inline void set_untiltime(::google::protobuf::int32 value);
  
  // optional int32 totalpages = 27;
  inline bool has_totalpages() const;
  inline void clear_totalpages();
  static const int kTotalpagesFieldNumber = 27;
  inline ::google::protobuf::int32 totalpages() const;
  inline void set_totalpages(::google::protobuf::int32 value);
  
  // optional int32 size = 28;
  inline bool has_size() const;
  inline void clear_size();
  static const int kSizeFieldNumber = 28;
  inline ::google::protobuf::int32 size() const;
  inline void set_size(::google::protobuf::int32 value);
  
  // optional string submitted = 29;
  inline bool has_submitted() const;
  inline void clear_submitted();
  static const int kSubmittedFieldNumber = 29;
  inline const ::std::string& submitted() const;
  inline void set_submitted(const ::std::string& value);
  inline void set_submitted(const char* value);
  inline void set_submitted(const char* value, size_t size);
  inline ::std::string* mutable_submitted();
  inline ::std::string* release_submitted();
  
  // optional int32 time = 30;
  inline bool has_time() const;
  inline void clear_time();
  static const int kTimeFieldNumber = 30;
  inline ::google::protobuf::int32 time() const;
  inline void set_time(::google::protobuf::int32 value);
  
  // optional int32 pagesprinted = 31;
  inline bool has_pagesprinted() const;
  inline void clear_pagesprinted();
  static const int kPagesprintedFieldNumber = 31;
  inline ::google::protobuf::int32 pagesprinted() const;
  inline void set_pagesprinted(::google::protobuf::int32 value);
  
  // optional string spl_path = 32;
  inline bool has_spl_path() const;
  inline void clear_spl_path();
  static const int kSplPathFieldNumber = 32;
  inline const ::std::string& spl_path() const;
  inline void set_spl_path(const ::std::string& value);
  inline void set_spl_path(const char* value);
  inline void set_spl_path(const char* value, size_t size);
  inline ::std::string* mutable_spl_path();
  inline ::std::string* release_spl_path();
  
  // optional int32 ret_user_id = 33;
  inline bool has_ret_user_id() const;
  inline void clear_ret_user_id();
  static const int kRetUserIdFieldNumber = 33;
  inline ::google::protobuf::int32 ret_user_id() const;
  inline void set_ret_user_id(::google::protobuf::int32 value);
  
  // optional int32 ret_ack_type = 34;
  inline bool has_ret_ack_type() const;
  inline void clear_ret_ack_type();
  static const int kRetAckTypeFieldNumber = 34;
  inline ::google::protobuf::int32 ret_ack_type() const;
  inline void set_ret_ack_type(::google::protobuf::int32 value);
  
  // optional int32 paper_size = 50;
  inline bool has_paper_size() const;
  inline void clear_paper_size();
  static const int kPaperSizeFieldNumber = 50;
  inline ::google::protobuf::int32 paper_size() const;
  inline void set_paper_size(::google::protobuf::int32 value);
  
  // optional int32 dm_copies = 51;
  inline bool has_dm_copies() const;
  inline void clear_dm_copies();
  static const int kDmCopiesFieldNumber = 51;
  inline ::google::protobuf::int32 dm_copies() const;
  inline void set_dm_copies(::google::protobuf::int32 value);
  
  // optional int32 dm_Orientation = 52;
  inline bool has_dm_orientation() const;
  inline void clear_dm_orientation();
  static const int kDmOrientationFieldNumber = 52;
  inline ::google::protobuf::int32 dm_orientation() const;
  inline void set_dm_orientation(::google::protobuf::int32 value);
  
  // optional int32 double_print = 53;
  inline bool has_double_print() const;
  inline void clear_double_print();
  static const int kDoublePrintFieldNumber = 53;
  inline ::google::protobuf::int32 double_print() const;
  inline void set_double_print(::google::protobuf::int32 value);
  
  // optional double submit_time = 54;
  inline bool has_submit_time() const;
  inline void clear_submit_time();
  static const int kSubmitTimeFieldNumber = 54;
  inline double submit_time() const;
  inline void set_submit_time(double value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtCenterSvr_UserPrintReq)
 private:
  inline void set_has_prt_id();
  inline void clear_has_prt_id();
  inline void set_has_prt_name();
  inline void clear_has_prt_name();
  inline void set_has_user_name();
  inline void clear_has_user_name();
  inline void set_has_doc_name();
  inline void clear_has_doc_name();
  inline void set_has_doc_id();
  inline void clear_has_doc_id();
  inline void set_has_page_type();
  inline void clear_has_page_type();
  inline void set_has_page_count();
  inline void clear_has_page_count();
  inline void set_has_color();
  inline void clear_has_color();
  inline void set_has_job_size();
  inline void clear_has_job_size();
  inline void set_has_job_id_sqllite();
  inline void clear_has_job_id_sqllite();
  inline void set_has_jobid_ji2();
  inline void clear_has_jobid_ji2();
  inline void set_has_printername();
  inline void clear_has_printername();
  inline void set_has_machinename();
  inline void clear_has_machinename();
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_doucment();
  inline void clear_has_doucment();
  inline void set_has_notifyname();
  inline void clear_has_notifyname();
  inline void set_has_datatype();
  inline void clear_has_datatype();
  inline void set_has_paramenters();
  inline void clear_has_paramenters();
  inline void set_has_driver_name();
  inline void clear_has_driver_name();
  inline void set_has_device_mode();
  inline void clear_has_device_mode();
  inline void set_has_pstatus();
  inline void clear_has_pstatus();
  inline void set_has_status();
  inline void clear_has_status();
  inline void set_has_priority();
  inline void clear_has_priority();
  inline void set_has_position();
  inline void clear_has_position();
  inline void set_has_starttime();
  inline void clear_has_starttime();
  inline void set_has_untiltime();
  inline void clear_has_untiltime();
  inline void set_has_totalpages();
  inline void clear_has_totalpages();
  inline void set_has_size();
  inline void clear_has_size();
  inline void set_has_submitted();
  inline void clear_has_submitted();
  inline void set_has_time();
  inline void clear_has_time();
  inline void set_has_pagesprinted();
  inline void clear_has_pagesprinted();
  inline void set_has_spl_path();
  inline void clear_has_spl_path();
  inline void set_has_ret_user_id();
  inline void clear_has_ret_user_id();
  inline void set_has_ret_ack_type();
  inline void clear_has_ret_ack_type();
  inline void set_has_paper_size();
  inline void clear_has_paper_size();
  inline void set_has_dm_copies();
  inline void clear_has_dm_copies();
  inline void set_has_dm_orientation();
  inline void clear_has_dm_orientation();
  inline void set_has_double_print();
  inline void clear_has_double_print();
  inline void set_has_submit_time();
  inline void clear_has_submit_time();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* prt_name_;
  ::std::string* user_name_;
  ::google::protobuf::int32 prt_id_;
  ::google::protobuf::int32 doc_id_;
  ::std::string* doc_name_;
  ::std::string* page_type_;
  ::google::protobuf::int32 page_count_;
  ::google::protobuf::int32 color_;
  ::google::protobuf::int32 job_size_;
  ::google::protobuf::int32 job_id_sqllite_;
  ::std::string* printername_;
  ::std::string* machinename_;
  ::std::string* username_;
  ::std::string* doucment_;
  ::google::protobuf::int32 jobid_ji2_;
  ::google::protobuf::int32 device_mode_;
  ::std::string* notifyname_;
  ::std::string* datatype_;
  ::std::string* paramenters_;
  ::std::string* driver_name_;
  ::std::string* pstatus_;
  ::google::protobuf::int32 status_;
  ::google::protobuf::int32 priority_;
  ::google::protobuf::int32 position_;
  ::google::protobuf::int32 starttime_;
  ::google::protobuf::int32 untiltime_;
  ::google::protobuf::int32 totalpages_;
  ::std::string* submitted_;
  ::google::protobuf::int32 size_;
  ::google::protobuf::int32 time_;
  ::std::string* spl_path_;
  ::google::protobuf::int32 pagesprinted_;
  ::google::protobuf::int32 ret_user_id_;
  ::google::protobuf::int32 ret_ack_type_;
  ::google::protobuf::int32 paper_size_;
  ::google::protobuf::int32 dm_copies_;
  ::google::protobuf::int32 dm_orientation_;
  double submit_time_;
  ::google::protobuf::int32 double_print_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(39 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtCenterSvr_UserPrintReq* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT AdjustPrintCountInfo : public ::google::protobuf::Message {
 public:
  AdjustPrintCountInfo();
  virtual ~AdjustPrintCountInfo();
  
  AdjustPrintCountInfo(const AdjustPrintCountInfo& from);
  
  inline AdjustPrintCountInfo& operator=(const AdjustPrintCountInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const AdjustPrintCountInfo& default_instance();
  
  void Swap(AdjustPrintCountInfo* other);
  
  // implements Message ----------------------------------------------
  
  AdjustPrintCountInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AdjustPrintCountInfo& from);
  void MergeFrom(const AdjustPrintCountInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // optional int32 accountid = 2;
  inline bool has_accountid() const;
  inline void clear_accountid();
  static const int kAccountidFieldNumber = 2;
  inline ::google::protobuf::int32 accountid() const;
  inline void set_accountid(::google::protobuf::int32 value);
  
  // optional int32 shouldprintedcount = 3;
  inline bool has_shouldprintedcount() const;
  inline void clear_shouldprintedcount();
  static const int kShouldprintedcountFieldNumber = 3;
  inline ::google::protobuf::int32 shouldprintedcount() const;
  inline void set_shouldprintedcount(::google::protobuf::int32 value);
  
  // optional int32 printedcount = 4;
  inline bool has_printedcount() const;
  inline void clear_printedcount();
  static const int kPrintedcountFieldNumber = 4;
  inline ::google::protobuf::int32 printedcount() const;
  inline void set_printedcount(::google::protobuf::int32 value);
  
  // optional int32 printerid = 5;
  inline bool has_printerid() const;
  inline void clear_printerid();
  static const int kPrinteridFieldNumber = 5;
  inline ::google::protobuf::int32 printerid() const;
  inline void set_printerid(::google::protobuf::int32 value);
  
  // optional .isafetec.PrtSationReqPrintJob oriprintjob = 6;
  inline bool has_oriprintjob() const;
  inline void clear_oriprintjob();
  static const int kOriprintjobFieldNumber = 6;
  inline const ::isafetec::PrtSationReqPrintJob& oriprintjob() const;
  inline ::isafetec::PrtSationReqPrintJob* mutable_oriprintjob();
  inline ::isafetec::PrtSationReqPrintJob* release_oriprintjob();
  
  // optional double shouldspend = 7;
  inline bool has_shouldspend() const;
  inline void clear_shouldspend();
  static const int kShouldspendFieldNumber = 7;
  inline double shouldspend() const;
  inline void set_shouldspend(double value);
  
  // optional double printedspend = 8;
  inline bool has_printedspend() const;
  inline void clear_printedspend();
  static const int kPrintedspendFieldNumber = 8;
  inline double printedspend() const;
  inline void set_printedspend(double value);
  
  // optional int32 jobid = 9;
  inline bool has_jobid() const;
  inline void clear_jobid();
  static const int kJobidFieldNumber = 9;
  inline ::google::protobuf::int32 jobid() const;
  inline void set_jobid(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.AdjustPrintCountInfo)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  inline void set_has_accountid();
  inline void clear_has_accountid();
  inline void set_has_shouldprintedcount();
  inline void clear_has_shouldprintedcount();
  inline void set_has_printedcount();
  inline void clear_has_printedcount();
  inline void set_has_printerid();
  inline void clear_has_printerid();
  inline void set_has_oriprintjob();
  inline void clear_has_oriprintjob();
  inline void set_has_shouldspend();
  inline void clear_has_shouldspend();
  inline void set_has_printedspend();
  inline void clear_has_printedspend();
  inline void set_has_jobid();
  inline void clear_has_jobid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 userid_;
  ::google::protobuf::int32 accountid_;
  ::google::protobuf::int32 shouldprintedcount_;
  ::google::protobuf::int32 printedcount_;
  ::isafetec::PrtSationReqPrintJob* oriprintjob_;
  double shouldspend_;
  ::google::protobuf::int32 printerid_;
  ::google::protobuf::int32 jobid_;
  double printedspend_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(9 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static AdjustPrintCountInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ScanToMailAddrList : public ::google::protobuf::Message {
 public:
  ScanToMailAddrList();
  virtual ~ScanToMailAddrList();
  
  ScanToMailAddrList(const ScanToMailAddrList& from);
  
  inline ScanToMailAddrList& operator=(const ScanToMailAddrList& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanToMailAddrList& default_instance();
  
  void Swap(ScanToMailAddrList* other);
  
  // implements Message ----------------------------------------------
  
  ScanToMailAddrList* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScanToMailAddrList& from);
  void MergeFrom(const ScanToMailAddrList& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 userid = 1;
  inline bool has_userid() const;
  inline void clear_userid();
  static const int kUseridFieldNumber = 1;
  inline ::google::protobuf::int32 userid() const;
  inline void set_userid(::google::protobuf::int32 value);
  
  // repeated string mailaddress = 2;
  inline int mailaddress_size() const;
  inline void clear_mailaddress();
  static const int kMailaddressFieldNumber = 2;
  inline const ::std::string& mailaddress(int index) const;
  inline ::std::string* mutable_mailaddress(int index);
  inline void set_mailaddress(int index, const ::std::string& value);
  inline void set_mailaddress(int index, const char* value);
  inline void set_mailaddress(int index, const char* value, size_t size);
  inline ::std::string* add_mailaddress();
  inline void add_mailaddress(const ::std::string& value);
  inline void add_mailaddress(const char* value);
  inline void add_mailaddress(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& mailaddress() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_mailaddress();
  
  // @@protoc_insertion_point(class_scope:isafetec.ScanToMailAddrList)
 private:
  inline void set_has_userid();
  inline void clear_has_userid();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::RepeatedPtrField< ::std::string> mailaddress_;
  ::google::protobuf::int32 userid_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static ScanToMailAddrList* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtTranscriptIToolLogon : public ::google::protobuf::Message {
 public:
  PrtTranscriptIToolLogon();
  virtual ~PrtTranscriptIToolLogon();
  
  PrtTranscriptIToolLogon(const PrtTranscriptIToolLogon& from);
  
  inline PrtTranscriptIToolLogon& operator=(const PrtTranscriptIToolLogon& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtTranscriptIToolLogon& default_instance();
  
  void Swap(PrtTranscriptIToolLogon* other);
  
  // implements Message ----------------------------------------------
  
  PrtTranscriptIToolLogon* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtTranscriptIToolLogon& from);
  void MergeFrom(const PrtTranscriptIToolLogon& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string pwd = 3;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtTranscriptIToolLogon)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* pwd_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtTranscriptIToolLogon* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtTranscriptIToolCheckResult : public ::google::protobuf::Message {
 public:
  PrtTranscriptIToolCheckResult();
  virtual ~PrtTranscriptIToolCheckResult();
  
  PrtTranscriptIToolCheckResult(const PrtTranscriptIToolCheckResult& from);
  
  inline PrtTranscriptIToolCheckResult& operator=(const PrtTranscriptIToolCheckResult& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtTranscriptIToolCheckResult& default_instance();
  
  void Swap(PrtTranscriptIToolCheckResult* other);
  
  // implements Message ----------------------------------------------
  
  PrtTranscriptIToolCheckResult* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtTranscriptIToolCheckResult& from);
  void MergeFrom(const PrtTranscriptIToolCheckResult& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string pwd = 3;
  inline bool has_pwd() const;
  inline void clear_pwd();
  static const int kPwdFieldNumber = 3;
  inline const ::std::string& pwd() const;
  inline void set_pwd(const ::std::string& value);
  inline void set_pwd(const char* value);
  inline void set_pwd(const char* value, size_t size);
  inline ::std::string* mutable_pwd();
  inline ::std::string* release_pwd();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtTranscriptIToolCheckResult)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_pwd();
  inline void clear_has_pwd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* pwd_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtTranscriptIToolCheckResult* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrtDbConfigInfo : public ::google::protobuf::Message {
 public:
  PrtDbConfigInfo();
  virtual ~PrtDbConfigInfo();
  
  PrtDbConfigInfo(const PrtDbConfigInfo& from);
  
  inline PrtDbConfigInfo& operator=(const PrtDbConfigInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrtDbConfigInfo& default_instance();
  
  void Swap(PrtDbConfigInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrtDbConfigInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrtDbConfigInfo& from);
  void MergeFrom(const PrtDbConfigInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 DbType = 1;
  inline bool has_dbtype() const;
  inline void clear_dbtype();
  static const int kDbTypeFieldNumber = 1;
  inline ::google::protobuf::int32 dbtype() const;
  inline void set_dbtype(::google::protobuf::int32 value);
  
  // optional string DbIp = 2;
  inline bool has_dbip() const;
  inline void clear_dbip();
  static const int kDbIpFieldNumber = 2;
  inline const ::std::string& dbip() const;
  inline void set_dbip(const ::std::string& value);
  inline void set_dbip(const char* value);
  inline void set_dbip(const char* value, size_t size);
  inline ::std::string* mutable_dbip();
  inline ::std::string* release_dbip();
  
  // optional string DbPort = 3;
  inline bool has_dbport() const;
  inline void clear_dbport();
  static const int kDbPortFieldNumber = 3;
  inline const ::std::string& dbport() const;
  inline void set_dbport(const ::std::string& value);
  inline void set_dbport(const char* value);
  inline void set_dbport(const char* value, size_t size);
  inline ::std::string* mutable_dbport();
  inline ::std::string* release_dbport();
  
  // optional string DbName = 4;
  inline bool has_dbname() const;
  inline void clear_dbname();
  static const int kDbNameFieldNumber = 4;
  inline const ::std::string& dbname() const;
  inline void set_dbname(const ::std::string& value);
  inline void set_dbname(const char* value);
  inline void set_dbname(const char* value, size_t size);
  inline ::std::string* mutable_dbname();
  inline ::std::string* release_dbname();
  
  // optional string DbUser = 5;
  inline bool has_dbuser() const;
  inline void clear_dbuser();
  static const int kDbUserFieldNumber = 5;
  inline const ::std::string& dbuser() const;
  inline void set_dbuser(const ::std::string& value);
  inline void set_dbuser(const char* value);
  inline void set_dbuser(const char* value, size_t size);
  inline ::std::string* mutable_dbuser();
  inline ::std::string* release_dbuser();
  
  // optional string DbPwd = 6;
  inline bool has_dbpwd() const;
  inline void clear_dbpwd();
  static const int kDbPwdFieldNumber = 6;
  inline const ::std::string& dbpwd() const;
  inline void set_dbpwd(const ::std::string& value);
  inline void set_dbpwd(const char* value);
  inline void set_dbpwd(const char* value, size_t size);
  inline ::std::string* mutable_dbpwd();
  inline ::std::string* release_dbpwd();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrtDbConfigInfo)
 private:
  inline void set_has_dbtype();
  inline void clear_has_dbtype();
  inline void set_has_dbip();
  inline void clear_has_dbip();
  inline void set_has_dbport();
  inline void clear_has_dbport();
  inline void set_has_dbname();
  inline void clear_has_dbname();
  inline void set_has_dbuser();
  inline void clear_has_dbuser();
  inline void set_has_dbpwd();
  inline void clear_has_dbpwd();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* dbip_;
  ::std::string* dbport_;
  ::std::string* dbname_;
  ::std::string* dbuser_;
  ::std::string* dbpwd_;
  ::google::protobuf::int32 dbtype_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrtDbConfigInfo* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ReqChargePrintTicket : public ::google::protobuf::Message {
 public:
  ReqChargePrintTicket();
  virtual ~ReqChargePrintTicket();
  
  ReqChargePrintTicket(const ReqChargePrintTicket& from);
  
  inline ReqChargePrintTicket& operator=(const ReqChargePrintTicket& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ReqChargePrintTicket& default_instance();
  
  void Swap(ReqChargePrintTicket* other);
  
  // implements Message ----------------------------------------------
  
  ReqChargePrintTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ReqChargePrintTicket& from);
  void MergeFrom(const ReqChargePrintTicket& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional string account_name = 1;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 1;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  
  // optional string real_name = 2;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 2;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  
  // optional string card_no = 3;
  inline bool has_card_no() const;
  inline void clear_card_no();
  static const int kCardNoFieldNumber = 3;
  inline const ::std::string& card_no() const;
  inline void set_card_no(const ::std::string& value);
  inline void set_card_no(const char* value);
  inline void set_card_no(const char* value, size_t size);
  inline ::std::string* mutable_card_no();
  inline ::std::string* release_card_no();
  
  // @@protoc_insertion_point(class_scope:isafetec.ReqChargePrintTicket)
 private:
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_real_name();
  inline void clear_has_real_name();
  inline void set_has_card_no();
  inline void clear_has_card_no();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* account_name_;
  ::std::string* real_name_;
  ::std::string* card_no_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(3 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static ReqChargePrintTicket* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ChargePrintTicket : public ::google::protobuf::Message {
 public:
  ChargePrintTicket();
  virtual ~ChargePrintTicket();
  
  ChargePrintTicket(const ChargePrintTicket& from);
  
  inline ChargePrintTicket& operator=(const ChargePrintTicket& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ChargePrintTicket& default_instance();
  
  void Swap(ChargePrintTicket* other);
  
  // implements Message ----------------------------------------------
  
  ChargePrintTicket* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ChargePrintTicket& from);
  void MergeFrom(const ChargePrintTicket& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::int32 user_id() const;
  inline void set_user_id(::google::protobuf::int32 value);
  
  // optional int32 account_id = 2;
  inline bool has_account_id() const;
  inline void clear_account_id();
  static const int kAccountIdFieldNumber = 2;
  inline ::google::protobuf::int32 account_id() const;
  inline void set_account_id(::google::protobuf::int32 value);
  
  // optional double left_money = 3;
  inline bool has_left_money() const;
  inline void clear_left_money();
  static const int kLeftMoneyFieldNumber = 3;
  inline double left_money() const;
  inline void set_left_money(double value);
  
  // optional double special_left_money = 4;
  inline bool has_special_left_money() const;
  inline void clear_special_left_money();
  static const int kSpecialLeftMoneyFieldNumber = 4;
  inline double special_left_money() const;
  inline void set_special_left_money(double value);
  
  // optional string account_name = 5;
  inline bool has_account_name() const;
  inline void clear_account_name();
  static const int kAccountNameFieldNumber = 5;
  inline const ::std::string& account_name() const;
  inline void set_account_name(const ::std::string& value);
  inline void set_account_name(const char* value);
  inline void set_account_name(const char* value, size_t size);
  inline ::std::string* mutable_account_name();
  inline ::std::string* release_account_name();
  
  // optional string real_name = 6;
  inline bool has_real_name() const;
  inline void clear_real_name();
  static const int kRealNameFieldNumber = 6;
  inline const ::std::string& real_name() const;
  inline void set_real_name(const ::std::string& value);
  inline void set_real_name(const char* value);
  inline void set_real_name(const char* value, size_t size);
  inline ::std::string* mutable_real_name();
  inline ::std::string* release_real_name();
  
  // optional string card_no = 7;
  inline bool has_card_no() const;
  inline void clear_card_no();
  static const int kCardNoFieldNumber = 7;
  inline const ::std::string& card_no() const;
  inline void set_card_no(const ::std::string& value);
  inline void set_card_no(const char* value);
  inline void set_card_no(const char* value, size_t size);
  inline ::std::string* mutable_card_no();
  inline ::std::string* release_card_no();
  
  // optional int32 print_count_A4 = 8;
  inline bool has_print_count_a4() const;
  inline void clear_print_count_a4();
  static const int kPrintCountA4FieldNumber = 8;
  inline ::google::protobuf::int32 print_count_a4() const;
  inline void set_print_count_a4(::google::protobuf::int32 value);
  
  // optional int32 print_count_A3 = 9;
  inline bool has_print_count_a3() const;
  inline void clear_print_count_a3();
  static const int kPrintCountA3FieldNumber = 9;
  inline ::google::protobuf::int32 print_count_a3() const;
  inline void set_print_count_a3(::google::protobuf::int32 value);
  
  // optional double print_price_A4 = 10;
  inline bool has_print_price_a4() const;
  inline void clear_print_price_a4();
  static const int kPrintPriceA4FieldNumber = 10;
  inline double print_price_a4() const;
  inline void set_print_price_a4(double value);
  
  // optional double print_price_A3 = 11;
  inline bool has_print_price_a3() const;
  inline void clear_print_price_a3();
  static const int kPrintPriceA3FieldNumber = 11;
  inline double print_price_a3() const;
  inline void set_print_price_a3(double value);
  
  // optional double print_spend = 12;
  inline bool has_print_spend() const;
  inline void clear_print_spend();
  static const int kPrintSpendFieldNumber = 12;
  inline double print_spend() const;
  inline void set_print_spend(double value);
  
  // optional int32 copy_count_A4 = 13;
  inline bool has_copy_count_a4() const;
  inline void clear_copy_count_a4();
  static const int kCopyCountA4FieldNumber = 13;
  inline ::google::protobuf::int32 copy_count_a4() const;
  inline void set_copy_count_a4(::google::protobuf::int32 value);
  
  // optional int32 copy_count_A3 = 14;
  inline bool has_copy_count_a3() const;
  inline void clear_copy_count_a3();
  static const int kCopyCountA3FieldNumber = 14;
  inline ::google::protobuf::int32 copy_count_a3() const;
  inline void set_copy_count_a3(::google::protobuf::int32 value);
  
  // optional double copy_price_A4 = 15;
  inline bool has_copy_price_a4() const;
  inline void clear_copy_price_a4();
  static const int kCopyPriceA4FieldNumber = 15;
  inline double copy_price_a4() const;
  inline void set_copy_price_a4(double value);
  
  // optional double copy_price_A3 = 16;
  inline bool has_copy_price_a3() const;
  inline void clear_copy_price_a3();
  static const int kCopyPriceA3FieldNumber = 16;
  inline double copy_price_a3() const;
  inline void set_copy_price_a3(double value);
  
  // optional double copy_spend = 17;
  inline bool has_copy_spend() const;
  inline void clear_copy_spend();
  static const int kCopySpendFieldNumber = 17;
  inline double copy_spend() const;
  inline void set_copy_spend(double value);
  
  // optional int32 scan_unit = 18;
  inline bool has_scan_unit() const;
  inline void clear_scan_unit();
  static const int kScanUnitFieldNumber = 18;
  inline ::google::protobuf::int32 scan_unit() const;
  inline void set_scan_unit(::google::protobuf::int32 value);
  
  // optional int32 scan_count = 19;
  inline bool has_scan_count() const;
  inline void clear_scan_count();
  static const int kScanCountFieldNumber = 19;
  inline ::google::protobuf::int32 scan_count() const;
  inline void set_scan_count(::google::protobuf::int32 value);
  
  // optional double scan_size = 20;
  inline bool has_scan_size() const;
  inline void clear_scan_size();
  static const int kScanSizeFieldNumber = 20;
  inline double scan_size() const;
  inline void set_scan_size(double value);
  
  // optional double scan_price = 21;
  inline bool has_scan_price() const;
  inline void clear_scan_price();
  static const int kScanPriceFieldNumber = 21;
  inline double scan_price() const;
  inline void set_scan_price(double value);
  
  // optional double scan_spend = 22;
  inline bool has_scan_spend() const;
  inline void clear_scan_spend();
  static const int kScanSpendFieldNumber = 22;
  inline double scan_spend() const;
  inline void set_scan_spend(double value);
  
  // optional int32 fax_count = 23;
  inline bool has_fax_count() const;
  inline void clear_fax_count();
  static const int kFaxCountFieldNumber = 23;
  inline ::google::protobuf::int32 fax_count() const;
  inline void set_fax_count(::google::protobuf::int32 value);
  
  // optional double fax_price = 24;
  inline bool has_fax_price() const;
  inline void clear_fax_price();
  static const int kFaxPriceFieldNumber = 24;
  inline double fax_price() const;
  inline void set_fax_price(double value);
  
  // optional double fax_spend = 25;
  inline bool has_fax_spend() const;
  inline void clear_fax_spend();
  static const int kFaxSpendFieldNumber = 25;
  inline double fax_spend() const;
  inline void set_fax_spend(double value);
  
  // optional double cash_pledge = 26;
  inline bool has_cash_pledge() const;
  inline void clear_cash_pledge();
  static const int kCashPledgeFieldNumber = 26;
  inline double cash_pledge() const;
  inline void set_cash_pledge(double value);
  
  // optional double cash_back = 27;
  inline bool has_cash_back() const;
  inline void clear_cash_back();
  static const int kCashBackFieldNumber = 27;
  inline double cash_back() const;
  inline void set_cash_back(double value);
  
  // optional string other_info = 28;
  inline bool has_other_info() const;
  inline void clear_other_info();
  static const int kOtherInfoFieldNumber = 28;
  inline const ::std::string& other_info() const;
  inline void set_other_info(const ::std::string& value);
  inline void set_other_info(const char* value);
  inline void set_other_info(const char* value, size_t size);
  inline ::std::string* mutable_other_info();
  inline ::std::string* release_other_info();
  
  // optional double before_money = 29;
  inline bool has_before_money() const;
  inline void clear_before_money();
  static const int kBeforeMoneyFieldNumber = 29;
  inline double before_money() const;
  inline void set_before_money(double value);
  
  // optional double after_money = 30;
  inline bool has_after_money() const;
  inline void clear_after_money();
  static const int kAfterMoneyFieldNumber = 30;
  inline double after_money() const;
  inline void set_after_money(double value);
  
  // optional string purchase_date = 31;
  inline bool has_purchase_date() const;
  inline void clear_purchase_date();
  static const int kPurchaseDateFieldNumber = 31;
  inline const ::std::string& purchase_date() const;
  inline void set_purchase_date(const ::std::string& value);
  inline void set_purchase_date(const char* value);
  inline void set_purchase_date(const char* value, size_t size);
  inline ::std::string* mutable_purchase_date();
  inline ::std::string* release_purchase_date();
  
  // optional string termID = 32;
  inline bool has_termid() const;
  inline void clear_termid();
  static const int kTermIDFieldNumber = 32;
  inline const ::std::string& termid() const;
  inline void set_termid(const ::std::string& value);
  inline void set_termid(const char* value);
  inline void set_termid(const char* value, size_t size);
  inline ::std::string* mutable_termid();
  inline ::std::string* release_termid();
  
  // optional string verification_code = 33;
  inline bool has_verification_code() const;
  inline void clear_verification_code();
  static const int kVerificationCodeFieldNumber = 33;
  inline const ::std::string& verification_code() const;
  inline void set_verification_code(const ::std::string& value);
  inline void set_verification_code(const char* value);
  inline void set_verification_code(const char* value, size_t size);
  inline ::std::string* mutable_verification_code();
  inline ::std::string* release_verification_code();
  
  // optional int32 ticket_printed_times = 34;
  inline bool has_ticket_printed_times() const;
  inline void clear_ticket_printed_times();
  static const int kTicketPrintedTimesFieldNumber = 34;
  inline ::google::protobuf::int32 ticket_printed_times() const;
  inline void set_ticket_printed_times(::google::protobuf::int32 value);
  
  // optional int32 ticket_log_id = 35;
  inline bool has_ticket_log_id() const;
  inline void clear_ticket_log_id();
  static const int kTicketLogIdFieldNumber = 35;
  inline ::google::protobuf::int32 ticket_log_id() const;
  inline void set_ticket_log_id(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.ChargePrintTicket)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_account_id();
  inline void clear_has_account_id();
  inline void set_has_left_money();
  inline void clear_has_left_money();
  inline void set_has_special_left_money();
  inline void clear_has_special_left_money();
  inline void set_has_account_name();
  inline void clear_has_account_name();
  inline void set_has_real_name();
  inline void clear_has_real_name();
  inline void set_has_card_no();
  inline void clear_has_card_no();
  inline void set_has_print_count_a4();
  inline void clear_has_print_count_a4();
  inline void set_has_print_count_a3();
  inline void clear_has_print_count_a3();
  inline void set_has_print_price_a4();
  inline void clear_has_print_price_a4();
  inline void set_has_print_price_a3();
  inline void clear_has_print_price_a3();
  inline void set_has_print_spend();
  inline void clear_has_print_spend();
  inline void set_has_copy_count_a4();
  inline void clear_has_copy_count_a4();
  inline void set_has_copy_count_a3();
  inline void clear_has_copy_count_a3();
  inline void set_has_copy_price_a4();
  inline void clear_has_copy_price_a4();
  inline void set_has_copy_price_a3();
  inline void clear_has_copy_price_a3();
  inline void set_has_copy_spend();
  inline void clear_has_copy_spend();
  inline void set_has_scan_unit();
  inline void clear_has_scan_unit();
  inline void set_has_scan_count();
  inline void clear_has_scan_count();
  inline void set_has_scan_size();
  inline void clear_has_scan_size();
  inline void set_has_scan_price();
  inline void clear_has_scan_price();
  inline void set_has_scan_spend();
  inline void clear_has_scan_spend();
  inline void set_has_fax_count();
  inline void clear_has_fax_count();
  inline void set_has_fax_price();
  inline void clear_has_fax_price();
  inline void set_has_fax_spend();
  inline void clear_has_fax_spend();
  inline void set_has_cash_pledge();
  inline void clear_has_cash_pledge();
  inline void set_has_cash_back();
  inline void clear_has_cash_back();
  inline void set_has_other_info();
  inline void clear_has_other_info();
  inline void set_has_before_money();
  inline void clear_has_before_money();
  inline void set_has_after_money();
  inline void clear_has_after_money();
  inline void set_has_purchase_date();
  inline void clear_has_purchase_date();
  inline void set_has_termid();
  inline void clear_has_termid();
  inline void set_has_verification_code();
  inline void clear_has_verification_code();
  inline void set_has_ticket_printed_times();
  inline void clear_has_ticket_printed_times();
  inline void set_has_ticket_log_id();
  inline void clear_has_ticket_log_id();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::google::protobuf::int32 user_id_;
  ::google::protobuf::int32 account_id_;
  double left_money_;
  double special_left_money_;
  ::std::string* account_name_;
  ::std::string* real_name_;
  ::std::string* card_no_;
  ::google::protobuf::int32 print_count_a4_;
  ::google::protobuf::int32 print_count_a3_;
  double print_price_a4_;
  double print_price_a3_;
  double print_spend_;
  ::google::protobuf::int32 copy_count_a4_;
  ::google::protobuf::int32 copy_count_a3_;
  double copy_price_a4_;
  double copy_price_a3_;
  double copy_spend_;
  ::google::protobuf::int32 scan_unit_;
  ::google::protobuf::int32 scan_count_;
  double scan_size_;
  double scan_price_;
  double scan_spend_;
  double fax_price_;
  double fax_spend_;
  double cash_pledge_;
  double cash_back_;
  ::std::string* other_info_;
  ::google::protobuf::int32 fax_count_;
  ::google::protobuf::int32 ticket_printed_times_;
  double before_money_;
  double after_money_;
  ::std::string* purchase_date_;
  ::std::string* termid_;
  ::std::string* verification_code_;
  ::google::protobuf::int32 ticket_log_id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(35 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static ChargePrintTicket* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrintLimitPolicy : public ::google::protobuf::Message {
 public:
  PrintLimitPolicy();
  virtual ~PrintLimitPolicy();
  
  PrintLimitPolicy(const PrintLimitPolicy& from);
  
  inline PrintLimitPolicy& operator=(const PrintLimitPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrintLimitPolicy& default_instance();
  
  void Swap(PrintLimitPolicy* other);
  
  // implements Message ----------------------------------------------
  
  PrintLimitPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrintLimitPolicy& from);
  void MergeFrom(const PrintLimitPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_TYPE job_type = 1;
  inline bool has_job_type() const;
  inline void clear_job_type();
  static const int kJobTypeFieldNumber = 1;
  inline isafetec::JOB_TYPE job_type() const;
  inline void set_job_type(isafetec::JOB_TYPE value);
  
  // optional .isafetec.JOB_LIMIT_TYPE job_limit_type = 2;
  inline bool has_job_limit_type() const;
  inline void clear_job_limit_type();
  static const int kJobLimitTypeFieldNumber = 2;
  inline isafetec::JOB_LIMIT_TYPE job_limit_type() const;
  inline void set_job_limit_type(isafetec::JOB_LIMIT_TYPE value);
  
  // optional .isafetec.JOB_LIMIT_PERIOD_TYPE job_limit_period_type = 3;
  inline bool has_job_limit_period_type() const;
  inline void clear_job_limit_period_type();
  static const int kJobLimitPeriodTypeFieldNumber = 3;
  inline isafetec::JOB_LIMIT_PERIOD_TYPE job_limit_period_type() const;
  inline void set_job_limit_period_type(isafetec::JOB_LIMIT_PERIOD_TYPE value);
  
  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional int32 LimitPage = 5;
  inline bool has_limitpage() const;
  inline void clear_limitpage();
  static const int kLimitPageFieldNumber = 5;
  inline ::google::protobuf::int32 limitpage() const;
  inline void set_limitpage(::google::protobuf::int32 value);
  
  // optional int32 HaveOpPage = 6;
  inline bool has_haveoppage() const;
  inline void clear_haveoppage();
  static const int kHaveOpPageFieldNumber = 6;
  inline ::google::protobuf::int32 haveoppage() const;
  inline void set_haveoppage(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrintLimitPolicy)
 private:
  inline void set_has_job_type();
  inline void clear_has_job_type();
  inline void set_has_job_limit_type();
  inline void clear_has_job_limit_type();
  inline void set_has_job_limit_period_type();
  inline void clear_has_job_limit_period_type();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_limitpage();
  inline void clear_has_limitpage();
  inline void set_has_haveoppage();
  inline void clear_has_haveoppage();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int job_type_;
  int job_limit_type_;
  int job_limit_period_type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 limitpage_;
  ::google::protobuf::int32 haveoppage_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrintLimitPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT CopyLimitPolicy : public ::google::protobuf::Message {
 public:
  CopyLimitPolicy();
  virtual ~CopyLimitPolicy();
  
  CopyLimitPolicy(const CopyLimitPolicy& from);
  
  inline CopyLimitPolicy& operator=(const CopyLimitPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const CopyLimitPolicy& default_instance();
  
  void Swap(CopyLimitPolicy* other);
  
  // implements Message ----------------------------------------------
  
  CopyLimitPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const CopyLimitPolicy& from);
  void MergeFrom(const CopyLimitPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_TYPE job_type = 1;
  inline bool has_job_type() const;
  inline void clear_job_type();
  static const int kJobTypeFieldNumber = 1;
  inline isafetec::JOB_TYPE job_type() const;
  inline void set_job_type(isafetec::JOB_TYPE value);
  
  // optional .isafetec.JOB_LIMIT_TYPE job_limit_type = 2;
  inline bool has_job_limit_type() const;
  inline void clear_job_limit_type();
  static const int kJobLimitTypeFieldNumber = 2;
  inline isafetec::JOB_LIMIT_TYPE job_limit_type() const;
  inline void set_job_limit_type(isafetec::JOB_LIMIT_TYPE value);
  
  // optional .isafetec.JOB_LIMIT_PERIOD_TYPE job_limit_period_type = 3;
  inline bool has_job_limit_period_type() const;
  inline void clear_job_limit_period_type();
  static const int kJobLimitPeriodTypeFieldNumber = 3;
  inline isafetec::JOB_LIMIT_PERIOD_TYPE job_limit_period_type() const;
  inline void set_job_limit_period_type(isafetec::JOB_LIMIT_PERIOD_TYPE value);
  
  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional int32 LimitPage = 5;
  inline bool has_limitpage() const;
  inline void clear_limitpage();
  static const int kLimitPageFieldNumber = 5;
  inline ::google::protobuf::int32 limitpage() const;
  inline void set_limitpage(::google::protobuf::int32 value);
  
  // optional int32 HaveOpPage = 6;
  inline bool has_haveoppage() const;
  inline void clear_haveoppage();
  static const int kHaveOpPageFieldNumber = 6;
  inline ::google::protobuf::int32 haveoppage() const;
  inline void set_haveoppage(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.CopyLimitPolicy)
 private:
  inline void set_has_job_type();
  inline void clear_has_job_type();
  inline void set_has_job_limit_type();
  inline void clear_has_job_limit_type();
  inline void set_has_job_limit_period_type();
  inline void clear_has_job_limit_period_type();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_limitpage();
  inline void clear_has_limitpage();
  inline void set_has_haveoppage();
  inline void clear_has_haveoppage();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int job_type_;
  int job_limit_type_;
  int job_limit_period_type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 limitpage_;
  ::google::protobuf::int32 haveoppage_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static CopyLimitPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT ScanLimitPolicy : public ::google::protobuf::Message {
 public:
  ScanLimitPolicy();
  virtual ~ScanLimitPolicy();
  
  ScanLimitPolicy(const ScanLimitPolicy& from);
  
  inline ScanLimitPolicy& operator=(const ScanLimitPolicy& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const ScanLimitPolicy& default_instance();
  
  void Swap(ScanLimitPolicy* other);
  
  // implements Message ----------------------------------------------
  
  ScanLimitPolicy* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ScanLimitPolicy& from);
  void MergeFrom(const ScanLimitPolicy& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional .isafetec.JOB_TYPE job_type = 1;
  inline bool has_job_type() const;
  inline void clear_job_type();
  static const int kJobTypeFieldNumber = 1;
  inline isafetec::JOB_TYPE job_type() const;
  inline void set_job_type(isafetec::JOB_TYPE value);
  
  // optional .isafetec.JOB_LIMIT_TYPE job_limit_type = 2;
  inline bool has_job_limit_type() const;
  inline void clear_job_limit_type();
  static const int kJobLimitTypeFieldNumber = 2;
  inline isafetec::JOB_LIMIT_TYPE job_limit_type() const;
  inline void set_job_limit_type(isafetec::JOB_LIMIT_TYPE value);
  
  // optional .isafetec.JOB_LIMIT_PERIOD_TYPE job_limit_period_type = 3;
  inline bool has_job_limit_period_type() const;
  inline void clear_job_limit_period_type();
  static const int kJobLimitPeriodTypeFieldNumber = 3;
  inline isafetec::JOB_LIMIT_PERIOD_TYPE job_limit_period_type() const;
  inline void set_job_limit_period_type(isafetec::JOB_LIMIT_PERIOD_TYPE value);
  
  // optional int32 state = 4;
  inline bool has_state() const;
  inline void clear_state();
  static const int kStateFieldNumber = 4;
  inline ::google::protobuf::int32 state() const;
  inline void set_state(::google::protobuf::int32 value);
  
  // optional int32 LimitPage = 5;
  inline bool has_limitpage() const;
  inline void clear_limitpage();
  static const int kLimitPageFieldNumber = 5;
  inline ::google::protobuf::int32 limitpage() const;
  inline void set_limitpage(::google::protobuf::int32 value);
  
  // optional int32 HaveOpPage = 6;
  inline bool has_haveoppage() const;
  inline void clear_haveoppage();
  static const int kHaveOpPageFieldNumber = 6;
  inline ::google::protobuf::int32 haveoppage() const;
  inline void set_haveoppage(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.ScanLimitPolicy)
 private:
  inline void set_has_job_type();
  inline void clear_has_job_type();
  inline void set_has_job_limit_type();
  inline void clear_has_job_limit_type();
  inline void set_has_job_limit_period_type();
  inline void clear_has_job_limit_period_type();
  inline void set_has_state();
  inline void clear_has_state();
  inline void set_has_limitpage();
  inline void clear_has_limitpage();
  inline void set_has_haveoppage();
  inline void clear_has_haveoppage();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  int job_type_;
  int job_limit_type_;
  int job_limit_period_type_;
  ::google::protobuf::int32 state_;
  ::google::protobuf::int32 limitpage_;
  ::google::protobuf::int32 haveoppage_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(6 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static ScanLimitPolicy* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrinterMeterLog : public ::google::protobuf::Message {
 public:
  PrinterMeterLog();
  virtual ~PrinterMeterLog();
  
  PrinterMeterLog(const PrinterMeterLog& from);
  
  inline PrinterMeterLog& operator=(const PrinterMeterLog& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrinterMeterLog& default_instance();
  
  void Swap(PrinterMeterLog* other);
  
  // implements Message ----------------------------------------------
  
  PrinterMeterLog* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrinterMeterLog& from);
  void MergeFrom(const PrinterMeterLog& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // required int32 PrintId = 1;
  inline bool has_printid() const;
  inline void clear_printid();
  static const int kPrintIdFieldNumber = 1;
  inline ::google::protobuf::int32 printid() const;
  inline void set_printid(::google::protobuf::int32 value);
  
  // optional double RecordPrintMeterTime = 2;
  inline bool has_recordprintmetertime() const;
  inline void clear_recordprintmetertime();
  static const int kRecordPrintMeterTimeFieldNumber = 2;
  inline double recordprintmetertime() const;
  inline void set_recordprintmetertime(double value);
  
  // optional int32 OpAdminId = 3;
  inline bool has_opadminid() const;
  inline void clear_opadminid();
  static const int kOpAdminIdFieldNumber = 3;
  inline ::google::protobuf::int32 opadminid() const;
  inline void set_opadminid(::google::protobuf::int32 value);
  
  // optional int32 A4PrintTotalPage = 4;
  inline bool has_a4printtotalpage() const;
  inline void clear_a4printtotalpage();
  static const int kA4PrintTotalPageFieldNumber = 4;
  inline ::google::protobuf::int32 a4printtotalpage() const;
  inline void set_a4printtotalpage(::google::protobuf::int32 value);
  
  // optional int32 A4PrintColorPage = 5;
  inline bool has_a4printcolorpage() const;
  inline void clear_a4printcolorpage();
  static const int kA4PrintColorPageFieldNumber = 5;
  inline ::google::protobuf::int32 a4printcolorpage() const;
  inline void set_a4printcolorpage(::google::protobuf::int32 value);
  
  // optional int32 A4PrintHBPage = 6;
  inline bool has_a4printhbpage() const;
  inline void clear_a4printhbpage();
  static const int kA4PrintHBPageFieldNumber = 6;
  inline ::google::protobuf::int32 a4printhbpage() const;
  inline void set_a4printhbpage(::google::protobuf::int32 value);
  
  // optional int32 A3PrintTotalPage = 7;
  inline bool has_a3printtotalpage() const;
  inline void clear_a3printtotalpage();
  static const int kA3PrintTotalPageFieldNumber = 7;
  inline ::google::protobuf::int32 a3printtotalpage() const;
  inline void set_a3printtotalpage(::google::protobuf::int32 value);
  
  // optional int32 A3PrintColorPage = 8;
  inline bool has_a3printcolorpage() const;
  inline void clear_a3printcolorpage();
  static const int kA3PrintColorPageFieldNumber = 8;
  inline ::google::protobuf::int32 a3printcolorpage() const;
  inline void set_a3printcolorpage(::google::protobuf::int32 value);
  
  // optional int32 A3PrintHBPage = 9;
  inline bool has_a3printhbpage() const;
  inline void clear_a3printhbpage();
  static const int kA3PrintHBPageFieldNumber = 9;
  inline ::google::protobuf::int32 a3printhbpage() const;
  inline void set_a3printhbpage(::google::protobuf::int32 value);
  
  // optional int32 OtherPrintTotalPage = 10;
  inline bool has_otherprinttotalpage() const;
  inline void clear_otherprinttotalpage();
  static const int kOtherPrintTotalPageFieldNumber = 10;
  inline ::google::protobuf::int32 otherprinttotalpage() const;
  inline void set_otherprinttotalpage(::google::protobuf::int32 value);
  
  // optional int32 OtherPrintColorPage = 11;
  inline bool has_otherprintcolorpage() const;
  inline void clear_otherprintcolorpage();
  static const int kOtherPrintColorPageFieldNumber = 11;
  inline ::google::protobuf::int32 otherprintcolorpage() const;
  inline void set_otherprintcolorpage(::google::protobuf::int32 value);
  
  // optional int32 OtherPrintHBPage = 12;
  inline bool has_otherprinthbpage() const;
  inline void clear_otherprinthbpage();
  static const int kOtherPrintHBPageFieldNumber = 12;
  inline ::google::protobuf::int32 otherprinthbpage() const;
  inline void set_otherprinthbpage(::google::protobuf::int32 value);
  
  // optional int32 A4CopyTotalPage = 13;
  inline bool has_a4copytotalpage() const;
  inline void clear_a4copytotalpage();
  static const int kA4CopyTotalPageFieldNumber = 13;
  inline ::google::protobuf::int32 a4copytotalpage() const;
  inline void set_a4copytotalpage(::google::protobuf::int32 value);
  
  // optional int32 A4CopyColorPage = 14;
  inline bool has_a4copycolorpage() const;
  inline void clear_a4copycolorpage();
  static const int kA4CopyColorPageFieldNumber = 14;
  inline ::google::protobuf::int32 a4copycolorpage() const;
  inline void set_a4copycolorpage(::google::protobuf::int32 value);
  
  // optional int32 A4CopyHBPage = 15;
  inline bool has_a4copyhbpage() const;
  inline void clear_a4copyhbpage();
  static const int kA4CopyHBPageFieldNumber = 15;
  inline ::google::protobuf::int32 a4copyhbpage() const;
  inline void set_a4copyhbpage(::google::protobuf::int32 value);
  
  // optional int32 A3CopyTotalPage = 16;
  inline bool has_a3copytotalpage() const;
  inline void clear_a3copytotalpage();
  static const int kA3CopyTotalPageFieldNumber = 16;
  inline ::google::protobuf::int32 a3copytotalpage() const;
  inline void set_a3copytotalpage(::google::protobuf::int32 value);
  
  // optional int32 A3CopyColorPage = 17;
  inline bool has_a3copycolorpage() const;
  inline void clear_a3copycolorpage();
  static const int kA3CopyColorPageFieldNumber = 17;
  inline ::google::protobuf::int32 a3copycolorpage() const;
  inline void set_a3copycolorpage(::google::protobuf::int32 value);
  
  // optional int32 A3CopyHBPage = 18;
  inline bool has_a3copyhbpage() const;
  inline void clear_a3copyhbpage();
  static const int kA3CopyHBPageFieldNumber = 18;
  inline ::google::protobuf::int32 a3copyhbpage() const;
  inline void set_a3copyhbpage(::google::protobuf::int32 value);
  
  // optional int32 OtherCopyTotalPage = 19;
  inline bool has_othercopytotalpage() const;
  inline void clear_othercopytotalpage();
  static const int kOtherCopyTotalPageFieldNumber = 19;
  inline ::google::protobuf::int32 othercopytotalpage() const;
  inline void set_othercopytotalpage(::google::protobuf::int32 value);
  
  // optional int32 OtherCopyColorPage = 20;
  inline bool has_othercopycolorpage() const;
  inline void clear_othercopycolorpage();
  static const int kOtherCopyColorPageFieldNumber = 20;
  inline ::google::protobuf::int32 othercopycolorpage() const;
  inline void set_othercopycolorpage(::google::protobuf::int32 value);
  
  // optional int32 OtherCopyHBPage = 21;
  inline bool has_othercopyhbpage() const;
  inline void clear_othercopyhbpage();
  static const int kOtherCopyHBPageFieldNumber = 21;
  inline ::google::protobuf::int32 othercopyhbpage() const;
  inline void set_othercopyhbpage(::google::protobuf::int32 value);
  
  // optional int32 ScanTotalPage = 22;
  inline bool has_scantotalpage() const;
  inline void clear_scantotalpage();
  static const int kScanTotalPageFieldNumber = 22;
  inline ::google::protobuf::int32 scantotalpage() const;
  inline void set_scantotalpage(::google::protobuf::int32 value);
  
  // optional int32 ScanBigColorPage = 23;
  inline bool has_scanbigcolorpage() const;
  inline void clear_scanbigcolorpage();
  static const int kScanBigColorPageFieldNumber = 23;
  inline ::google::protobuf::int32 scanbigcolorpage() const;
  inline void set_scanbigcolorpage(::google::protobuf::int32 value);
  
  // optional int32 ScanBigHBPage = 24;
  inline bool has_scanbighbpage() const;
  inline void clear_scanbighbpage();
  static const int kScanBigHBPageFieldNumber = 24;
  inline ::google::protobuf::int32 scanbighbpage() const;
  inline void set_scanbighbpage(::google::protobuf::int32 value);
  
  // optional int32 ScanSmallColorPage = 25;
  inline bool has_scansmallcolorpage() const;
  inline void clear_scansmallcolorpage();
  static const int kScanSmallColorPageFieldNumber = 25;
  inline ::google::protobuf::int32 scansmallcolorpage() const;
  inline void set_scansmallcolorpage(::google::protobuf::int32 value);
  
  // optional int32 ScanSmallHBPage = 26;
  inline bool has_scansmallhbpage() const;
  inline void clear_scansmallhbpage();
  static const int kScanSmallHBPageFieldNumber = 26;
  inline ::google::protobuf::int32 scansmallhbpage() const;
  inline void set_scansmallhbpage(::google::protobuf::int32 value);
  
  // optional int32 A4FaxTotalPage = 27;
  inline bool has_a4faxtotalpage() const;
  inline void clear_a4faxtotalpage();
  static const int kA4FaxTotalPageFieldNumber = 27;
  inline ::google::protobuf::int32 a4faxtotalpage() const;
  inline void set_a4faxtotalpage(::google::protobuf::int32 value);
  
  // optional int32 A4FaxColorPage = 28;
  inline bool has_a4faxcolorpage() const;
  inline void clear_a4faxcolorpage();
  static const int kA4FaxColorPageFieldNumber = 28;
  inline ::google::protobuf::int32 a4faxcolorpage() const;
  inline void set_a4faxcolorpage(::google::protobuf::int32 value);
  
  // optional int32 A4FaxHBPage = 29;
  inline bool has_a4faxhbpage() const;
  inline void clear_a4faxhbpage();
  static const int kA4FaxHBPageFieldNumber = 29;
  inline ::google::protobuf::int32 a4faxhbpage() const;
  inline void set_a4faxhbpage(::google::protobuf::int32 value);
  
  // optional int32 A3FaxTotalPage = 30;
  inline bool has_a3faxtotalpage() const;
  inline void clear_a3faxtotalpage();
  static const int kA3FaxTotalPageFieldNumber = 30;
  inline ::google::protobuf::int32 a3faxtotalpage() const;
  inline void set_a3faxtotalpage(::google::protobuf::int32 value);
  
  // optional int32 A3FaxColorPage = 31;
  inline bool has_a3faxcolorpage() const;
  inline void clear_a3faxcolorpage();
  static const int kA3FaxColorPageFieldNumber = 31;
  inline ::google::protobuf::int32 a3faxcolorpage() const;
  inline void set_a3faxcolorpage(::google::protobuf::int32 value);
  
  // optional int32 A3FaxHBPage = 32;
  inline bool has_a3faxhbpage() const;
  inline void clear_a3faxhbpage();
  static const int kA3FaxHBPageFieldNumber = 32;
  inline ::google::protobuf::int32 a3faxhbpage() const;
  inline void set_a3faxhbpage(::google::protobuf::int32 value);
  
  // optional int32 OtherFaxTotalPage = 33;
  inline bool has_otherfaxtotalpage() const;
  inline void clear_otherfaxtotalpage();
  static const int kOtherFaxTotalPageFieldNumber = 33;
  inline ::google::protobuf::int32 otherfaxtotalpage() const;
  inline void set_otherfaxtotalpage(::google::protobuf::int32 value);
  
  // optional int32 OtherFaxColorPage = 34;
  inline bool has_otherfaxcolorpage() const;
  inline void clear_otherfaxcolorpage();
  static const int kOtherFaxColorPageFieldNumber = 34;
  inline ::google::protobuf::int32 otherfaxcolorpage() const;
  inline void set_otherfaxcolorpage(::google::protobuf::int32 value);
  
  // optional int32 OtherFaxHBPage = 35;
  inline bool has_otherfaxhbpage() const;
  inline void clear_otherfaxhbpage();
  static const int kOtherFaxHBPageFieldNumber = 35;
  inline ::google::protobuf::int32 otherfaxhbpage() const;
  inline void set_otherfaxhbpage(::google::protobuf::int32 value);
  
  // optional int32 OtherOpTotalPage = 36;
  inline bool has_otheroptotalpage() const;
  inline void clear_otheroptotalpage();
  static const int kOtherOpTotalPageFieldNumber = 36;
  inline ::google::protobuf::int32 otheroptotalpage() const;
  inline void set_otheroptotalpage(::google::protobuf::int32 value);
  
  // optional int32 OtherOpColorPage = 37;
  inline bool has_otheropcolorpage() const;
  inline void clear_otheropcolorpage();
  static const int kOtherOpColorPageFieldNumber = 37;
  inline ::google::protobuf::int32 otheropcolorpage() const;
  inline void set_otheropcolorpage(::google::protobuf::int32 value);
  
  // optional int32 OtherOpHBPage = 38;
  inline bool has_otherophbpage() const;
  inline void clear_otherophbpage();
  static const int kOtherOpHBPageFieldNumber = 38;
  inline ::google::protobuf::int32 otherophbpage() const;
  inline void set_otherophbpage(::google::protobuf::int32 value);
  
  // @@protoc_insertion_point(class_scope:isafetec.PrinterMeterLog)
 private:
  inline void set_has_printid();
  inline void clear_has_printid();
  inline void set_has_recordprintmetertime();
  inline void clear_has_recordprintmetertime();
  inline void set_has_opadminid();
  inline void clear_has_opadminid();
  inline void set_has_a4printtotalpage();
  inline void clear_has_a4printtotalpage();
  inline void set_has_a4printcolorpage();
  inline void clear_has_a4printcolorpage();
  inline void set_has_a4printhbpage();
  inline void clear_has_a4printhbpage();
  inline void set_has_a3printtotalpage();
  inline void clear_has_a3printtotalpage();
  inline void set_has_a3printcolorpage();
  inline void clear_has_a3printcolorpage();
  inline void set_has_a3printhbpage();
  inline void clear_has_a3printhbpage();
  inline void set_has_otherprinttotalpage();
  inline void clear_has_otherprinttotalpage();
  inline void set_has_otherprintcolorpage();
  inline void clear_has_otherprintcolorpage();
  inline void set_has_otherprinthbpage();
  inline void clear_has_otherprinthbpage();
  inline void set_has_a4copytotalpage();
  inline void clear_has_a4copytotalpage();
  inline void set_has_a4copycolorpage();
  inline void clear_has_a4copycolorpage();
  inline void set_has_a4copyhbpage();
  inline void clear_has_a4copyhbpage();
  inline void set_has_a3copytotalpage();
  inline void clear_has_a3copytotalpage();
  inline void set_has_a3copycolorpage();
  inline void clear_has_a3copycolorpage();
  inline void set_has_a3copyhbpage();
  inline void clear_has_a3copyhbpage();
  inline void set_has_othercopytotalpage();
  inline void clear_has_othercopytotalpage();
  inline void set_has_othercopycolorpage();
  inline void clear_has_othercopycolorpage();
  inline void set_has_othercopyhbpage();
  inline void clear_has_othercopyhbpage();
  inline void set_has_scantotalpage();
  inline void clear_has_scantotalpage();
  inline void set_has_scanbigcolorpage();
  inline void clear_has_scanbigcolorpage();
  inline void set_has_scanbighbpage();
  inline void clear_has_scanbighbpage();
  inline void set_has_scansmallcolorpage();
  inline void clear_has_scansmallcolorpage();
  inline void set_has_scansmallhbpage();
  inline void clear_has_scansmallhbpage();
  inline void set_has_a4faxtotalpage();
  inline void clear_has_a4faxtotalpage();
  inline void set_has_a4faxcolorpage();
  inline void clear_has_a4faxcolorpage();
  inline void set_has_a4faxhbpage();
  inline void clear_has_a4faxhbpage();
  inline void set_has_a3faxtotalpage();
  inline void clear_has_a3faxtotalpage();
  inline void set_has_a3faxcolorpage();
  inline void clear_has_a3faxcolorpage();
  inline void set_has_a3faxhbpage();
  inline void clear_has_a3faxhbpage();
  inline void set_has_otherfaxtotalpage();
  inline void clear_has_otherfaxtotalpage();
  inline void set_has_otherfaxcolorpage();
  inline void clear_has_otherfaxcolorpage();
  inline void set_has_otherfaxhbpage();
  inline void clear_has_otherfaxhbpage();
  inline void set_has_otheroptotalpage();
  inline void clear_has_otheroptotalpage();
  inline void set_has_otheropcolorpage();
  inline void clear_has_otheropcolorpage();
  inline void set_has_otherophbpage();
  inline void clear_has_otherophbpage();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  double recordprintmetertime_;
  ::google::protobuf::int32 printid_;
  ::google::protobuf::int32 opadminid_;
  ::google::protobuf::int32 a4printtotalpage_;
  ::google::protobuf::int32 a4printcolorpage_;
  ::google::protobuf::int32 a4printhbpage_;
  ::google::protobuf::int32 a3printtotalpage_;
  ::google::protobuf::int32 a3printcolorpage_;
  ::google::protobuf::int32 a3printhbpage_;
  ::google::protobuf::int32 otherprinttotalpage_;
  ::google::protobuf::int32 otherprintcolorpage_;
  ::google::protobuf::int32 otherprinthbpage_;
  ::google::protobuf::int32 a4copytotalpage_;
  ::google::protobuf::int32 a4copycolorpage_;
  ::google::protobuf::int32 a4copyhbpage_;
  ::google::protobuf::int32 a3copytotalpage_;
  ::google::protobuf::int32 a3copycolorpage_;
  ::google::protobuf::int32 a3copyhbpage_;
  ::google::protobuf::int32 othercopytotalpage_;
  ::google::protobuf::int32 othercopycolorpage_;
  ::google::protobuf::int32 othercopyhbpage_;
  ::google::protobuf::int32 scantotalpage_;
  ::google::protobuf::int32 scanbigcolorpage_;
  ::google::protobuf::int32 scanbighbpage_;
  ::google::protobuf::int32 scansmallcolorpage_;
  ::google::protobuf::int32 scansmallhbpage_;
  ::google::protobuf::int32 a4faxtotalpage_;
  ::google::protobuf::int32 a4faxcolorpage_;
  ::google::protobuf::int32 a4faxhbpage_;
  ::google::protobuf::int32 a3faxtotalpage_;
  ::google::protobuf::int32 a3faxcolorpage_;
  ::google::protobuf::int32 a3faxhbpage_;
  ::google::protobuf::int32 otherfaxtotalpage_;
  ::google::protobuf::int32 otherfaxcolorpage_;
  ::google::protobuf::int32 otherfaxhbpage_;
  ::google::protobuf::int32 otheroptotalpage_;
  ::google::protobuf::int32 otheropcolorpage_;
  ::google::protobuf::int32 otherophbpage_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(38 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrinterMeterLog* default_instance_;
};
// -------------------------------------------------------------------

class LIBPROTOBUF_EXPORT PrinterShareInfo : public ::google::protobuf::Message {
 public:
  PrinterShareInfo();
  virtual ~PrinterShareInfo();
  
  PrinterShareInfo(const PrinterShareInfo& from);
  
  inline PrinterShareInfo& operator=(const PrinterShareInfo& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const PrinterShareInfo& default_instance();
  
  void Swap(PrinterShareInfo* other);
  
  // implements Message ----------------------------------------------
  
  PrinterShareInfo* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PrinterShareInfo& from);
  void MergeFrom(const PrinterShareInfo& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // required string pc_ip_addr = 2;
  inline bool has_pc_ip_addr() const;
  inline void clear_pc_ip_addr();
  static const int kPcIpAddrFieldNumber = 2;
  inline const ::std::string& pc_ip_addr() const;
  inline void set_pc_ip_addr(const ::std::string& value);
  inline void set_pc_ip_addr(const char* value);
  inline void set_pc_ip_addr(const char* value, size_t size);
  inline ::std::string* mutable_pc_ip_addr();
  inline ::std::string* release_pc_ip_addr();
  
  // required string printer_name = 3;
  inline bool has_printer_name() const;
  inline void clear_printer_name();
  static const int kPrinterNameFieldNumber = 3;
  inline const ::std::string& printer_name() const;
  inline void set_printer_name(const ::std::string& value);
  inline void set_printer_name(const char* value);
  inline void set_printer_name(const char* value, size_t size);
  inline ::std::string* mutable_printer_name();
  inline ::std::string* release_printer_name();
  
  // required string print_share_name = 4;
  inline bool has_print_share_name() const;
  inline void clear_print_share_name();
  static const int kPrintShareNameFieldNumber = 4;
  inline const ::std::string& print_share_name() const;
  inline void set_print_share_name(const ::std::string& value);
  inline void set_print_share_name(const char* value);
  inline void set_print_share_name(const char* value, size_t size);
  inline ::std::string* mutable_print_share_name();
  inline ::std::string* release_print_share_name();
  
  // optional string printer_ip = 5;
  inline bool has_printer_ip() const;
  inline void clear_printer_ip();
  static const int kPrinterIpFieldNumber = 5;
  inline const ::std::string& printer_ip() const;
  inline void set_printer_ip(const ::std::string& value);
  inline void set_printer_ip(const char* value);
  inline void set_printer_ip(const char* value, size_t size);
  inline ::std::string* mutable_printer_ip();
  inline ::std::string* release_printer_ip();
  
  // optional string printer_dpi = 6;
  inline bool has_printer_dpi() const;
  inline void clear_printer_dpi();
  static const int kPrinterDpiFieldNumber = 6;
  inline const ::std::string& printer_dpi() const;
  inline void set_printer_dpi(const ::std::string& value);
  inline void set_printer_dpi(const char* value);
  inline void set_printer_dpi(const char* value, size_t size);
  inline ::std::string* mutable_printer_dpi();
  inline ::std::string* release_printer_dpi();
  
  // optional string printer_speed = 7;
  inline bool has_printer_speed() const;
  inline void clear_printer_speed();
  static const int kPrinterSpeedFieldNumber = 7;
  inline const ::std::string& printer_speed() const;
  inline void set_printer_speed(const ::std::string& value);
  inline void set_printer_speed(const char* value);
  inline void set_printer_speed(const char* value, size_t size);
  inline ::std::string* mutable_printer_speed();
  inline ::std::string* release_printer_speed();
  
  // optional double begin_time = 8;
  inline bool has_begin_time() const;
  inline void clear_begin_time();
  static const int kBeginTimeFieldNumber = 8;
  inline double begin_time() const;
  inline void set_begin_time(double value);
  
  // optional double end_time = 9;
  inline bool has_end_time() const;
  inline void clear_end_time();
  static const int kEndTimeFieldNumber = 9;
  inline double end_time() const;
  inline void set_end_time(double value);
  
  // optional int32 support_duplex = 10;
  inline bool has_support_duplex() const;
  inline void clear_support_duplex();
  static const int kSupportDuplexFieldNumber = 10;
  inline ::google::protobuf::int32 support_duplex() const;
  inline void set_support_duplex(::google::protobuf::int32 value);
  
  // optional int32 support_color = 11;
  inline bool has_support_color() const;
  inline void clear_support_color();
  static const int kSupportColorFieldNumber = 11;
  inline ::google::protobuf::int32 support_color() const;
  inline void set_support_color(::google::protobuf::int32 value);
  
  // optional string pc_addr = 12;
  inline bool has_pc_addr() const;
  inline void clear_pc_addr();
  static const int kPcAddrFieldNumber = 12;
  inline const ::std::string& pc_addr() const;
  inline void set_pc_addr(const ::std::string& value);
  inline void set_pc_addr(const char* value);
  inline void set_pc_addr(const char* value, size_t size);
  inline ::std::string* mutable_pc_addr();
  inline ::std::string* release_pc_addr();
  
  // optional string pc_host = 13;
  inline bool has_pc_host() const;
  inline void clear_pc_host();
  static const int kPcHostFieldNumber = 13;
  inline const ::std::string& pc_host() const;
  inline void set_pc_host(const ::std::string& value);
  inline void set_pc_host(const char* value);
  inline void set_pc_host(const char* value, size_t size);
  inline ::std::string* mutable_pc_host();
  inline ::std::string* release_pc_host();
  
  // optional string pc_mac_addr = 14;
  inline bool has_pc_mac_addr() const;
  inline void clear_pc_mac_addr();
  static const int kPcMacAddrFieldNumber = 14;
  inline const ::std::string& pc_mac_addr() const;
  inline void set_pc_mac_addr(const ::std::string& value);
  inline void set_pc_mac_addr(const char* value);
  inline void set_pc_mac_addr(const char* value, size_t size);
  inline ::std::string* mutable_pc_mac_addr();
  inline ::std::string* release_pc_mac_addr();
  
  // optional string pc_disknum = 15;
  inline bool has_pc_disknum() const;
  inline void clear_pc_disknum();
  static const int kPcDisknumFieldNumber = 15;
  inline const ::std::string& pc_disknum() const;
  inline void set_pc_disknum(const ::std::string& value);
  inline void set_pc_disknum(const char* value);
  inline void set_pc_disknum(const char* value, size_t size);
  inline ::std::string* mutable_pc_disknum();
  inline ::std::string* release_pc_disknum();
  
  // optional string print_state = 16;
  inline bool has_print_state() const;
  inline void clear_print_state();
  static const int kPrintStateFieldNumber = 16;
  inline const ::std::string& print_state() const;
  inline void set_print_state(const ::std::string& value);
  inline void set_print_state(const char* value);
  inline void set_print_state(const char* value, size_t size);
  inline ::std::string* mutable_print_state();
  inline ::std::string* release_print_state();
  
  // optional string tel = 17;
  inline bool has_tel() const;
  inline void clear_tel();
  static const int kTelFieldNumber = 17;
  inline const ::std::string& tel() const;
  inline void set_tel(const ::std::string& value);
  inline void set_tel(const char* value);
  inline void set_tel(const char* value, size_t size);
  inline ::std::string* mutable_tel();
  inline ::std::string* release_tel();
  
  // optional string email = 18;
  inline bool has_email() const;
  inline void clear_email();
  static const int kEmailFieldNumber = 18;
  inline const ::std::string& email() const;
  inline void set_email(const ::std::string& value);
  inline void set_email(const char* value);
  inline void set_email(const char* value, size_t size);
  inline ::std::string* mutable_email();
  inline ::std::string* release_email();
  
  // optional string comment = 19;
  inline bool has_comment() const;
  inline void clear_comment();
  static const int kCommentFieldNumber = 19;
  inline const ::std::string& comment() const;
  inline void set_comment(const ::std::string& value);
  inline void set_comment(const char* value);
  inline void set_comment(const char* value, size_t size);
  inline ::std::string* mutable_comment();
  inline ::std::string* release_comment();
  
  // @@protoc_insertion_point(class_scope:isafetec.PrinterShareInfo)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_pc_ip_addr();
  inline void clear_has_pc_ip_addr();
  inline void set_has_printer_name();
  inline void clear_has_printer_name();
  inline void set_has_print_share_name();
  inline void clear_has_print_share_name();
  inline void set_has_printer_ip();
  inline void clear_has_printer_ip();
  inline void set_has_printer_dpi();
  inline void clear_has_printer_dpi();
  inline void set_has_printer_speed();
  inline void clear_has_printer_speed();
  inline void set_has_begin_time();
  inline void clear_has_begin_time();
  inline void set_has_end_time();
  inline void clear_has_end_time();
  inline void set_has_support_duplex();
  inline void clear_has_support_duplex();
  inline void set_has_support_color();
  inline void clear_has_support_color();
  inline void set_has_pc_addr();
  inline void clear_has_pc_addr();
  inline void set_has_pc_host();
  inline void clear_has_pc_host();
  inline void set_has_pc_mac_addr();
  inline void clear_has_pc_mac_addr();
  inline void set_has_pc_disknum();
  inline void clear_has_pc_disknum();
  inline void set_has_print_state();
  inline void clear_has_print_state();
  inline void set_has_tel();
  inline void clear_has_tel();
  inline void set_has_email();
  inline void clear_has_email();
  inline void set_has_comment();
  inline void clear_has_comment();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* pc_ip_addr_;
  ::std::string* printer_name_;
  ::std::string* print_share_name_;
  ::std::string* printer_ip_;
  ::google::protobuf::int32 id_;
  ::google::protobuf::int32 support_duplex_;
  ::std::string* printer_dpi_;
  ::std::string* printer_speed_;
  double begin_time_;
  double end_time_;
  ::std::string* pc_addr_;
  ::std::string* pc_host_;
  ::std::string* pc_mac_addr_;
  ::std::string* pc_disknum_;
  ::std::string* print_state_;
  ::std::string* tel_;
  ::std::string* email_;
  ::std::string* comment_;
  ::google::protobuf::int32 support_color_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(19 + 31) / 32];
  
  friend void LIBPROTOBUF_EXPORT protobuf_AddDesc_printermessage_2eproto();
  friend void protobuf_AssignDesc_printermessage_2eproto();
  friend void protobuf_ShutdownFile_printermessage_2eproto();
  
  void InitAsDefaultInstance();
  static PrinterShareInfo* default_instance_;
};
// ===================================================================


// ===================================================================


// @@protoc_insertion_point(namespace_scope)

}  // namespace isafetec

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::Job_Op_State>() {
  return isafetec::Job_Op_State_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::Printer_Paper_Source>() {
  return isafetec::Printer_Paper_Source_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::Print_Job_Type>() {
  return isafetec::Print_Job_Type_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_STORAGE_TYPE>() {
  return isafetec::JOB_STORAGE_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_PRICE_TYPE>() {
  return isafetec::JOB_PRICE_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::ScanChargeType>() {
  return isafetec::ScanChargeType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOb_CHECK_BY>() {
  return isafetec::JOb_CHECK_BY_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_CHECK_FAILURE_ACTION_TYPE>() {
  return isafetec::JOB_CHECK_FAILURE_ACTION_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_SUBMIT_MODE>() {
  return isafetec::JOB_SUBMIT_MODE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_PRINT_MODE>() {
  return isafetec::JOB_PRINT_MODE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_FILTER_TYPE>() {
  return isafetec::JOB_FILTER_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::PRT_REQ_JOB_BY>() {
  return isafetec::PRT_REQ_JOB_BY_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::SUBMIT_JOB_STATE>() {
  return isafetec::SUBMIT_JOB_STATE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::CHARGE_FOR>() {
  return isafetec::CHARGE_FOR_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::PRINT_POLICY_MASK>() {
  return isafetec::PRINT_POLICY_MASK_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::COPY_POLICY_MASK>() {
  return isafetec::COPY_POLICY_MASK_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::SCAN_POLICY_MASK>() {
  return isafetec::SCAN_POLICY_MASK_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::FAX_POLICY_MASK>() {
  return isafetec::FAX_POLICY_MASK_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::PrtDbType>() {
  return isafetec::PrtDbType_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_TYPE>() {
  return isafetec::JOB_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_LIMIT_TYPE>() {
  return isafetec::JOB_LIMIT_TYPE_descriptor();
}
template <>
inline const EnumDescriptor* GetEnumDescriptor< isafetec::JOB_LIMIT_PERIOD_TYPE>() {
  return isafetec::JOB_LIMIT_PERIOD_TYPE_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_printermessage_2eproto__INCLUDED
